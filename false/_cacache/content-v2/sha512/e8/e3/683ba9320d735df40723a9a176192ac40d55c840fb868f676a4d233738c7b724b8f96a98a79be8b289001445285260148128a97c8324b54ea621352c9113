{"_id":"unified","_rev":"72-5dca4970302e51ef2bce025f3033aa0b","name":"unified","description":"parse, inspect, transform, and serialize content through syntax trees","dist-tags":{"legacy":"9.2.2","next":"10.0.0-beta.1","latest":"11.0.5"},"versions":{"1.0.0":{"name":"unified","version":"1.0.0","keywords":["process","parse","transform","compile","stringify","retext","mdast"],"author":{"name":"Titus Wormer","email":"tituswormer@gmail.com"},"license":"MIT","_id":"unified@1.0.0","maintainers":[{"name":"wooorm","email":"tituswormer@gmail.com"}],"homepage":"https://github.com/wooorm/unified#readme","bugs":{"url":"https://github.com/wooorm/unified/issues"},"dist":{"shasum":"630e61e18f06206e79f23e0a801a7ae6a294a7e4","tarball":"https://registry.npmjs.org/unified/-/unified-1.0.0.tgz","integrity":"sha512-nl7GIOUiImYQUsUqWb5S4sRo7KrMzwua3iKhdrWFCK9BxJI2T4INC6b1WwUPqPlzukfWtPQpNwyDnleyLYNrzQ==","signatures":[{"sig":"MEQCIDVHJh6DuVbDfL6zGzJoSPPERgu3jo53qTdLxoKz2LoUAiAFvAZZndNxmQ90ROiiH0Sa+nwHzfO3mT2jR02W4MrJ6Q==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}]},"_from":".","files":["index.js"],"_shasum":"630e61e18f06206e79f23e0a801a7ae6a294a7e4","gitHead":"6dae05dd38ea97bf897ee6ff808e210a59ccbc81","scripts":{"lint":"npm run lint-api && npm run lint-style","make":"npm run lint && npm run test-coverage","test":"npm run test-api","build":"npm run build-md && npm run build-bundle","build-md":"mdast . --quiet","lint-api":"eslint .","test-api":"mocha --check-leaks test.js","lint-style":"jscs --reporter inline .","test-travis":"npm run test-coveralls","build-bundle":"browserify index.js -s AttachWare > unified.js","test-coverage":"istanbul cover _mocha -- -- test.js","test-coveralls":"istanbul cover _mocha --report lcovonly -- --check-leaks test.js","postbuild-bundle":"esmangle unified.js > unified.min.js"},"_npmUser":{"name":"wooorm","email":"tituswormer@gmail.com"},"repository":{"url":"git+https://github.com/wooorm/unified.git","type":"git"},"_npmVersion":"2.11.3","description":"Text processing framework: Parse / Transform / Compile","directories":{},"_nodeVersion":"2.3.3","dependencies":{"bail":"^1.0.0","ware":"^1.3.0","vfile":"^1.0.0","unherit":"^1.0.4","attach-ware":"^1.0.0"},"devDependencies":{"jscs":"^2.0.0","mdast":"^0.27.1","mocha":"^2.0.0","eslint":"^0.24.0","esmangle":"^1.0.0","istanbul":"^0.3.0","mdast-man":"^0.4.0","mdast-toc":"^0.5.1","browserify":"^11.0.0","jscs-jsdoc":"^1.0.0","mdast-lint":"^0.4.0","mdast-github":"^0.3.0","mdast-comment-config":"^0.1.2","mdast-validate-links":"^0.3.0"}},"2.0.0":{"name":"unified","version":"2.0.0","keywords":["process","parse","transform","compile","stringify","retext","mdast"],"author":{"name":"Titus Wormer","email":"tituswormer@gmail.com"},"license":"MIT","_id":"unified@2.0.0","maintainers":[{"name":"wooorm","email":"tituswormer@gmail.com"}],"homepage":"https://github.com/wooorm/unified#readme","bugs":{"url":"https://github.com/wooorm/unified/issues"},"dist":{"shasum":"d059e2b9083723ccf193dcff26aac22134d5a3f2","tarball":"https://registry.npmjs.org/unified/-/unified-2.0.0.tgz","integrity":"sha512-QpWM7/gMHgrl5tKhsS85G/Py1HUy2TbwxVMe4jOo75M1CvmMzzWwceoSVC2xw/t2fIPS9Fe5cIktpTyjkwIWiA==","signatures":[{"sig":"MEUCIQDJHQJ12n1jtLerkrbC+0CoiMP+1VS3sj3dDLwbIr7MTAIgbR69a7tZdaYENiOpKrF32pnTMt5Zfg6dUAxlTlv0PKk=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}]},"_from":".","files":["index.js"],"_shasum":"d059e2b9083723ccf193dcff26aac22134d5a3f2","gitHead":"b677413ded8f9f1d0504e993476ba452b3e6c992","scripts":{"lint":"npm run lint-api && npm run lint-style","make":"npm run lint && npm run test-coverage","test":"npm run test-api","build":"npm run build-md && npm run build-bundle","build-md":"mdast . --quiet","lint-api":"eslint .","test-api":"mocha --check-leaks test.js","lint-style":"jscs --reporter inline .","test-travis":"npm run test-coveralls","build-bundle":"browserify index.js -s AttachWare > unified.js","test-coverage":"istanbul cover _mocha -- -- test.js","test-coveralls":"istanbul cover _mocha --report lcovonly -- --check-leaks test.js","postbuild-bundle":"esmangle unified.js > unified.min.js"},"_npmUser":{"name":"wooorm","email":"tituswormer@gmail.com"},"repository":{"url":"git+https://github.com/wooorm/unified.git","type":"git"},"_npmVersion":"2.14.2","description":"Text processing framework: Parse / Transform / Compile","directories":{},"_nodeVersion":"4.0.0","dependencies":{"bail":"^1.0.0","ware":"^1.3.0","vfile":"^1.0.0","unherit":"^1.0.4","attach-ware":"^1.0.0"},"devDependencies":{"jscs":"^2.0.0","mdast":"^1.0.0","mocha":"^2.0.0","eslint":"^1.0.0","esmangle":"^1.0.0","istanbul":"^0.3.0","mdast-man":"^1.0.0","mdast-toc":"^1.0.0","browserify":"^11.0.0","jscs-jsdoc":"^1.0.0","mdast-lint":"^1.0.0","mdast-github":"^1.0.0","mdast-comment-config":"^1.0.0","mdast-validate-links":"^1.0.0"}},"2.1.0":{"name":"unified","version":"2.1.0","keywords":["process","parse","transform","compile","stringify","hast","retext","mdast"],"author":{"name":"Titus Wormer","email":"tituswormer@gmail.com"},"license":"MIT","_id":"unified@2.1.0","maintainers":[{"name":"wooorm","email":"tituswormer@gmail.com"}],"homepage":"https://github.com/wooorm/unified#readme","bugs":{"url":"https://github.com/wooorm/unified/issues"},"dist":{"shasum":"d7d7214436ad43e80a80681171725b2ac28223c5","tarball":"https://registry.npmjs.org/unified/-/unified-2.1.0.tgz","integrity":"sha512-fmWNFeZzdEyXHVvaMbTmSzT9gRJQhiHEUAMictVhYVZ0pqy1QK/EEEuvYk9VrVcl//FCY8dJaogirgnHT9L0VQ==","signatures":[{"sig":"MEYCIQCl9YWampt2wC9KSwsoGC7yj4hgfC8sVwS8Ap04tar1QQIhAKQgDM2llzDwXfAgmqYoEzFZb/XUawc7Eh55HFc9KnCn","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}]},"_from":".","files":["index.js"],"_shasum":"d7d7214436ad43e80a80681171725b2ac28223c5","gitHead":"b00d9635679b11c229ddcf6c76b0e724c46e74ae","scripts":{"lint":"npm run lint-api && npm run lint-style","make":"npm run lint && npm run test-coverage","test":"npm run test-api","build":"npm run build-md && npm run build-bundle","build-md":"mdast . --quiet","lint-api":"eslint .","test-api":"mocha --check-leaks test.js","lint-style":"jscs --reporter inline .","test-travis":"npm run test-coveralls","build-bundle":"browserify index.js -s AttachWare > unified.js","test-coverage":"istanbul cover _mocha -- -- test.js","test-coveralls":"istanbul cover _mocha --report lcovonly -- --check-leaks test.js","postbuild-bundle":"esmangle unified.js > unified.min.js"},"_npmUser":{"name":"wooorm","email":"tituswormer@gmail.com"},"repository":{"url":"git+https://github.com/wooorm/unified.git","type":"git"},"_npmVersion":"3.3.5","description":"Text processing framework: Parse / Transform / Compile","directories":{},"_nodeVersion":"4.1.1","dependencies":{"bail":"^1.0.0","ware":"^1.3.0","vfile":"^1.0.0","extend":"^3.0.0","unherit":"^1.0.4","attach-ware":"^1.0.0"},"devDependencies":{"jscs":"^2.0.0","mdast":"^1.0.0","mocha":"^2.0.0","eslint":"^1.0.0","esmangle":"^1.0.0","istanbul":"^0.3.0","mdast-man":"^1.0.0","mdast-toc":"^1.0.0","browserify":"^11.0.0","jscs-jsdoc":"^1.0.0","mdast-lint":"^1.0.0","mdast-github":"^1.0.0","mdast-comment-config":"^1.0.0","mdast-validate-links":"^1.0.0"}},"2.1.1":{"name":"unified","version":"2.1.1","keywords":["process","parse","transform","compile","stringify","hast","retext","mdast"],"author":{"name":"Titus Wormer","email":"tituswormer@gmail.com"},"license":"MIT","_id":"unified@2.1.1","maintainers":[{"name":"wooorm","email":"tituswormer@gmail.com"}],"homepage":"https://github.com/wooorm/unified#readme","bugs":{"url":"https://github.com/wooorm/unified/issues"},"dist":{"shasum":"6eab38a701c7b5251257080ca21ae6d9c3d591f7","tarball":"https://registry.npmjs.org/unified/-/unified-2.1.1.tgz","integrity":"sha512-3BIx1T2j/MGFw26I5SqdUvs2TI0peeVJFY5nWFihYfVTlPVliRil5VR6gdlU3V9K84e2g+Q+85dfn+kat4PUgA==","signatures":[{"sig":"MEUCIDgsu7Li8pjZts2DY9mPZ0Ifh0jwWqAw1tylzHDau/l5AiEA4eTVYs14XW0nU1lfbmo4HwitUHC2mOu5dZxdvn8s5wY=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}]},"_from":".","files":["index.js"],"_shasum":"6eab38a701c7b5251257080ca21ae6d9c3d591f7","gitHead":"5b0a28133344acdec1ba4c2dd24e7838348db39d","scripts":{"lint":"npm run lint-api && npm run lint-style","make":"npm run lint && npm run test-coverage","test":"npm run test-api","build":"npm run build-md && npm run build-bundle","build-md":"mdast . --quiet","lint-api":"eslint .","test-api":"mocha --check-leaks test.js","lint-style":"jscs --reporter inline .","test-travis":"npm run test-coveralls","build-bundle":"browserify index.js -s AttachWare -u node-extend > unified.js","test-coverage":"istanbul cover _mocha -- -- test.js","test-coveralls":"istanbul cover _mocha --report lcovonly -- --check-leaks test.js","postbuild-bundle":"esmangle unified.js > unified.min.js"},"_npmUser":{"name":"wooorm","email":"tituswormer@gmail.com"},"repository":{"url":"git+https://github.com/wooorm/unified.git","type":"git"},"_npmVersion":"3.3.5","description":"Text processing framework: Parse / Transform / Compile","directories":{},"_nodeVersion":"4.1.1","dependencies":{"bail":"^1.0.0","ware":"^1.3.0","vfile":"^1.0.0","extend":"^3.0.0","unherit":"^1.0.4","attach-ware":"^1.0.0"},"devDependencies":{"jscs":"^2.0.0","mdast":"^1.0.0","mocha":"^2.0.0","eslint":"^1.0.0","esmangle":"^1.0.0","istanbul":"^0.3.0","mdast-man":"^1.0.0","mdast-toc":"^1.0.0","browserify":"^11.0.0","jscs-jsdoc":"^1.0.0","mdast-lint":"^1.0.0","mdast-github":"^1.0.0","mdast-comment-config":"^1.0.0","mdast-validate-links":"^1.0.0"}},"2.1.2":{"name":"unified","version":"2.1.2","keywords":["process","parse","transform","compile","stringify","hast","retext","mdast"],"author":{"name":"Titus Wormer","email":"tituswormer@gmail.com"},"license":"MIT","_id":"unified@2.1.2","maintainers":[{"name":"wooorm","email":"tituswormer@gmail.com"}],"homepage":"https://github.com/wooorm/unified#readme","bugs":{"url":"https://github.com/wooorm/unified/issues"},"dist":{"shasum":"c3fe3bdcf69358c03faf9c4d8acebbf4d2615044","tarball":"https://registry.npmjs.org/unified/-/unified-2.1.2.tgz","integrity":"sha512-gzTjgFiZgrJYZpXvzbW6kCm9JJjSbiMj1UGaOnAhjuue/jKYvap7wHZ2yZNf26m1xz0VwKwEVb3XxczGqAE7mw==","signatures":[{"sig":"MEUCICp9zQ6xRAg61WpZsVtGwkWGqm4Ams1n/oTYANg5/Y0KAiEAqcw83QfBXYgN7ko9BvvKmL4hQJKaKX9MNHpTg/1HzA0=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}]},"_from":".","files":["index.js"],"_shasum":"c3fe3bdcf69358c03faf9c4d8acebbf4d2615044","browser":{"node-extend":"extend"},"gitHead":"c397863ed7dd72e8d8b0278a1d39c24a3641344b","scripts":{"lint":"npm run lint-api && npm run lint-style","make":"npm run lint && npm run test-coverage","test":"npm run test-api","build":"npm run build-md && npm run build-bundle","build-md":"mdast . --quiet","lint-api":"eslint .","test-api":"mocha --check-leaks test.js","lint-style":"jscs --reporter inline .","test-travis":"npm run test-coveralls","build-bundle":"browserify index.js -s AttachWare > unified.js","test-coverage":"istanbul cover _mocha -- -- test.js","test-coveralls":"istanbul cover _mocha --report lcovonly -- --check-leaks test.js","postbuild-bundle":"esmangle unified.js > unified.min.js"},"_npmUser":{"name":"wooorm","email":"tituswormer@gmail.com"},"repository":{"url":"git+https://github.com/wooorm/unified.git","type":"git"},"_npmVersion":"3.3.5","description":"Text processing framework: Parse / Transform / Compile","directories":{},"_nodeVersion":"4.1.1","dependencies":{"bail":"^1.0.0","ware":"^1.3.0","vfile":"^1.0.0","extend":"^3.0.0","unherit":"^1.0.4","attach-ware":"^1.0.0"},"devDependencies":{"jscs":"^2.0.0","mdast":"^1.0.0","mocha":"^2.0.0","eslint":"^1.0.0","esmangle":"^1.0.0","istanbul":"^0.3.0","mdast-man":"^1.0.0","mdast-toc":"^1.0.0","browserify":"^11.0.0","jscs-jsdoc":"^1.0.0","mdast-lint":"^1.0.0","mdast-github":"^1.0.0","mdast-comment-config":"^1.0.0","mdast-validate-links":"^1.0.0"}},"2.1.3":{"name":"unified","version":"2.1.3","keywords":["process","parse","transform","compile","stringify","hast","retext","remark"],"author":{"name":"Titus Wormer","email":"tituswormer@gmail.com"},"license":"MIT","_id":"unified@2.1.3","maintainers":[{"name":"wooorm","email":"tituswormer@gmail.com"}],"homepage":"https://github.com/wooorm/unified","bugs":{"url":"https://github.com/wooorm/unified/issues"},"dist":{"shasum":"a7dcc644568574fc82e72d7253b66e9facc821fa","tarball":"https://registry.npmjs.org/unified/-/unified-2.1.3.tgz"},"_from":".","files":["index.js"],"_shasum":"a7dcc644568574fc82e72d7253b66e9facc821fa","browser":{"node-extend":"extend"},"gitHead":"aa92c3bfd9a97c8114e1f9249fd5809e02e74e3b","scripts":{"lint":"npm run lint-api && npm run lint-style","test":"npm run build && npm run lint && npm run test-coverage","build":"npm run build-md && npm run build-bundle && npm run build-mangle","build-md":"remark . --quiet --frail","lint-api":"eslint .","test-api":"node test.js","lint-style":"jscs --reporter inline .","build-bundle":"browserify index.js -s AttachWare > unified.js","build-mangle":"esmangle unified.js > unified.min.js","test-coverage":"istanbul cover test.js"},"_npmUser":{"name":"wooorm","email":"tituswormer@gmail.com"},"repository":{"url":"https://github.com/wooorm/unified.git","type":"git"},"_npmVersion":"2.3.0","description":"Text processing framework: Parse / Transform / Compile","directories":{},"_nodeVersion":"0.11.16","dependencies":{"bail":"^1.0.0","ware":"^1.3.0","vfile":"^1.0.0","extend":"^3.0.0","unherit":"^1.0.4","attach-ware":"^1.0.0"},"devDependencies":{"jscs":"^2.0.0","tape":"^4.4.0","eslint":"^1.0.0","remark":"^3.0.0","esmangle":"^1.0.0","istanbul":"^0.4.0","browserify":"^13.0.0","jscs-jsdoc":"^1.0.0","remark-man":"^2.0.0","remark-toc":"^2.0.0","remark-lint":"^2.0.0","remark-github":"^4.0.0","remark-comment-config":"^2.0.0","remark-validate-links":"^2.0.0"}},"2.1.4":{"name":"unified","version":"2.1.4","keywords":["process","parse","transform","compile","stringify","hast","retext","remark"],"author":{"name":"Titus Wormer","email":"tituswormer@gmail.com"},"license":"MIT","_id":"unified@2.1.4","maintainers":[{"name":"wooorm","email":"tituswormer@gmail.com"}],"homepage":"https://github.com/wooorm/unified#readme","bugs":{"url":"https://github.com/wooorm/unified/issues"},"dist":{"shasum":"14bc6cd40d98ffff75b405506bad873ecbbac3ba","tarball":"https://registry.npmjs.org/unified/-/unified-2.1.4.tgz","integrity":"sha512-qa4nA26ms49OczPueTt7G46r89TOlwAJ4pEk2U4mwkV1wNhjttItF03SE/YnfkgWg14tzmAHXGhJp2GhDYwn1A==","signatures":[{"sig":"MEQCIFx80oSaJOpoY1ru/PZNnykKWmhJSiavekckLh+ig3zxAiAXlhPCHOYEOJHR90TAG/I4bEr9kdn9JK+4Xm3jMcZJYg==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}]},"_from":".","files":["index.js"],"_shasum":"14bc6cd40d98ffff75b405506bad873ecbbac3ba","browser":{"node-extend":"extend"},"gitHead":"cf783f04890e5e9532982ba3abb37643a78ca66e","scripts":{"lint":"npm run lint-api && npm run lint-style","test":"npm run build && npm run lint && npm run test-coverage","build":"npm run build-md && npm run build-bundle && npm run build-mangle","build-md":"remark . --quiet --frail","lint-api":"eslint .","test-api":"node test.js","lint-style":"jscs --reporter inline .","build-bundle":"browserify index.js -s AttachWare > unified.js","build-mangle":"esmangle unified.js > unified.min.js","test-coverage":"istanbul cover test.js"},"_npmUser":{"name":"wooorm","email":"tituswormer@gmail.com"},"repository":{"url":"git+https://github.com/wooorm/unified.git","type":"git"},"_npmVersion":"3.5.0","description":"Text processing framework: Parse / Transform / Compile","directories":{},"_nodeVersion":"5.1.0","dependencies":{"bail":"^1.0.0","ware":"^1.3.0","vfile":"^1.0.0","extend":"^3.0.0","unherit":"^1.0.4","attach-ware":"^1.0.0"},"devDependencies":{"jscs":"^2.0.0","tape":"^4.4.0","eslint":"^1.0.0","remark":"^3.0.0","esmangle":"^1.0.0","istanbul":"^0.4.0","browserify":"^13.0.0","jscs-jsdoc":"^1.0.0","remark-man":"^2.0.0","remark-toc":"^2.0.0","remark-lint":"^2.0.0","remark-github":"^4.0.0","remark-comment-config":"^2.0.0","remark-validate-links":"^2.0.0"}},"3.0.0":{"name":"unified","version":"3.0.0","keywords":["process","parse","transform","compile","stringify","hast","retext","remark"],"author":{"url":"http://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"},"license":"MIT","_id":"unified@3.0.0","maintainers":[{"name":"wooorm","email":"tituswormer@gmail.com"}],"contributors":[{"url":"http://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"}],"homepage":"https://github.com/wooorm/unified#readme","bugs":{"url":"https://github.com/wooorm/unified/issues"},"dist":{"shasum":"85ce4169b09ee9f084d07f4d0a1fbe3939518712","tarball":"https://registry.npmjs.org/unified/-/unified-3.0.0.tgz","integrity":"sha512-CCgTAgjDIYhkf/SuI3/6fARTUsg18On/Zs4NsjVCAscNZF4dNzlgrm+BEaqbkQCwQMXVHnq1rDWsrDwFCNEDuw==","signatures":[{"sig":"MEYCIQDOk+NPUpqegrXE+/8s9mXXgN2EhmRJBDezKAkF8TYylAIhAMTu4eMg6terlmhg6Wxnnw1k/C+Rk1uP6S7/HLe93XYu","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}]},"_from":".","files":["index.js"],"_shasum":"85ce4169b09ee9f084d07f4d0a1fbe3939518712","browser":{"node-extend":"extend"},"engines":{"node":">=0.10.0"},"gitHead":"32b917f97b1ce4f46dd180894651cc5352f40362","scripts":{"lint":"npm run lint-api && npm run lint-style","test":"npm run build && npm run lint && npm run test-coverage","build":"npm run build-md && npm run build-bundle && npm run build-mangle","build-md":"remark . --quiet --frail","lint-api":"eslint .","test-api":"node test.js","lint-style":"jscs --reporter inline .","build-bundle":"browserify index.js -s unified > unified.js","build-mangle":"esmangle unified.js > unified.min.js","test-coverage":"istanbul cover test.js"},"_npmUser":{"name":"wooorm","email":"tituswormer@gmail.com"},"repository":{"url":"git+https://github.com/wooorm/unified.git","type":"git"},"_npmVersion":"3.3.6","description":"Text processing framework: Parse / Transform / Compile","directories":{},"_nodeVersion":"5.0.0","dependencies":{"bail":"^1.0.0","ware":"^1.3.0","vfile":"^1.0.0","extend":"^3.0.0","unherit":"^1.0.4","attach-ware":"^2.0.0"},"devDependencies":{"jscs":"^2.0.0","tape":"^4.4.0","eslint":"^2.0.0","remark":"^3.0.0","esmangle":"^1.0.0","istanbul":"^0.4.0","browserify":"^13.0.0","jscs-jsdoc":"^1.0.0","remark-toc":"^2.0.0","remark-lint":"^2.0.0","remark-github":"^4.0.0","remark-comment-config":"^2.0.0","remark-validate-links":"^2.0.0"},"_npmOperationalInternal":{"tmp":"tmp/unified-3.0.0.tgz_1455369080701_0.027905355440452695","host":"packages-9-west.internal.npmjs.com"}},"4.0.0":{"name":"unified","version":"4.0.0","keywords":["process","parse","transform","compile","stringify","hast","retext","remark"],"author":{"url":"http://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"},"license":"MIT","_id":"unified@4.0.0","maintainers":[{"name":"wooorm","email":"tituswormer@gmail.com"}],"contributors":[{"url":"http://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"}],"homepage":"https://github.com/wooorm/unified#readme","bugs":{"url":"https://github.com/wooorm/unified/issues"},"dist":{"shasum":"3407c3193d104febe13e7459d8d858bf14c792ad","tarball":"https://registry.npmjs.org/unified/-/unified-4.0.0.tgz","integrity":"sha512-fUt1crxCmhOHebDeK2xa+zyxI0SzLxUMs9jRj1erJZZ3sRFVtbjNvDSy9J7mWoKTHpve3gDvX2md8X5lMrDgpA==","signatures":[{"sig":"MEYCIQCSjo1U17IJDBLlQsBr4QAuM6h2uJWWL/lMmueVCmbxmgIhAJo9S7EJOkerBjNvHNk5+iOsGcBk/G9cdx0t2OKw0maW","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}]},"_from":".","files":["index.js"],"_shasum":"3407c3193d104febe13e7459d8d858bf14c792ad","browser":{"node-extend":"extend"},"engines":{"node":">=0.10.0"},"gitHead":"eb94abc1fec621fcad55d0b4a26baf8fbe59e715","scripts":{"lint":"npm run lint-api && npm run lint-style","test":"npm run build && npm run lint && npm run test-coverage","build":"npm run build-md && npm run build-bundle && npm run build-mangle","build-md":"remark . --quiet --frail","lint-api":"eslint .","test-api":"node test.js","lint-style":"jscs --reporter inline .","build-bundle":"browserify index.js -s unified > unified.js","build-mangle":"esmangle unified.js > unified.min.js","test-coverage":"istanbul cover test.js"},"_npmUser":{"name":"wooorm","email":"tituswormer@gmail.com"},"repository":{"url":"git+https://github.com/wooorm/unified.git","type":"git"},"_npmVersion":"3.8.6","description":"Pluggable text processing interface","directories":{},"_nodeVersion":"6.0.0","dependencies":{"bail":"^1.0.0","vfile":"^1.0.0","extend":"^3.0.0"},"devDependencies":{"jscs":"^3.0.0","tape":"^4.4.0","eslint":"^2.0.0","remark":"^4.0.0","esmangle":"^1.0.0","istanbul":"^0.4.0","browserify":"^13.0.0","jscs-jsdoc":"^2.0.0","remark-toc":"^3.0.0","remark-lint":"^3.0.0","remark-github":"^4.0.1","remark-comment-config":"^3.0.0","remark-validate-links":"^3.0.0"},"_npmOperationalInternal":{"tmp":"tmp/unified-4.0.0.tgz_1464098996800_0.2357537962961942","host":"packages-16-east.internal.npmjs.com"}},"4.0.1":{"name":"unified","version":"4.0.1","keywords":["process","parse","transform","compile","stringify","hast","retext","remark"],"author":{"url":"http://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"},"license":"MIT","_id":"unified@4.0.1","maintainers":[{"name":"wooorm","email":"tituswormer@gmail.com"}],"contributors":[{"url":"http://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"}],"homepage":"https://github.com/wooorm/unified#readme","bugs":{"url":"https://github.com/wooorm/unified/issues"},"dist":{"shasum":"f44f2c4a60d1bf4f9af8e5326fc37785e73d68b4","tarball":"https://registry.npmjs.org/unified/-/unified-4.0.1.tgz","integrity":"sha512-Zw04YLcBjzEv75kDvAPLRi7kfLw8zTCsM+hOE0DuHv3jo8EhSgto3KIjuUuavalc7y9+wRnXkRBBf1EJ9iQ/4Q==","signatures":[{"sig":"MEYCIQCJ0lDv/hXuLt4GoMDUBIqv261wWolYqs+WFuL5C3lbrAIhAIFVp+EALWX4Th0dhoT+oNrF28iq5IkEVZkeYO0ZuTUh","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}]},"_from":".","files":["index.js","lib/trough.js","lib/unified.js"],"_shasum":"f44f2c4a60d1bf4f9af8e5326fc37785e73d68b4","browser":{"node-extend":"extend"},"engines":{"node":">=0.11.0"},"gitHead":"681f75d89b1d3c3a287fd801c3cfc3cad07d5a08","scripts":{"lint":"npm run lint-api && npm run lint-style","test":"npm run build && npm run lint && npm run test-coverage","build":"npm run build-md && npm run build-bundle && npm run build-mangle","build-md":"remark . --quiet --frail","lint-api":"eslint .","test-api":"node test.js","lint-style":"jscs --reporter inline .","build-bundle":"browserify index.js -s unified > unified.js","build-mangle":"esmangle unified.js > unified.min.js","test-coverage":"istanbul cover test.js"},"_npmUser":{"name":"wooorm","email":"tituswormer@gmail.com"},"repository":{"url":"git+https://github.com/wooorm/unified.git","type":"git"},"_npmVersion":"3.8.6","description":"Pluggable text processing interface","directories":{},"_nodeVersion":"6.0.0","dependencies":{"bail":"^1.0.0","vfile":"^1.0.0","extend":"^3.0.0"},"devDependencies":{"jscs":"^3.0.0","tape":"^4.4.0","eslint":"^2.0.0","remark":"^4.0.0","esmangle":"^1.0.0","istanbul":"^0.4.0","browserify":"^13.0.0","jscs-jsdoc":"^2.0.0","remark-toc":"^3.0.0","remark-lint":"^3.0.0","remark-github":"^4.0.1","remark-comment-config":"^3.0.0","remark-validate-links":"^3.0.0"},"_npmOperationalInternal":{"tmp":"tmp/unified-4.0.1.tgz_1464109107642_0.48307169461622834","host":"packages-16-east.internal.npmjs.com"}},"4.1.0":{"name":"unified","version":"4.1.0","keywords":["process","parse","transform","compile","stringify","hast","retext","remark"],"author":{"url":"http://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"},"license":"MIT","_id":"unified@4.1.0","maintainers":[{"name":"wooorm","email":"tituswormer@gmail.com"}],"contributors":[{"url":"http://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"}],"homepage":"https://github.com/wooorm/unified#readme","bugs":{"url":"https://github.com/wooorm/unified/issues"},"dist":{"shasum":"706fe04cb418553e17f66ba12ff0c73e983d55b5","tarball":"https://registry.npmjs.org/unified/-/unified-4.1.0.tgz","integrity":"sha512-YkAME0TXb55ucq2h1lAc3NQT7VFZOCWdkHDHrijrjlDkXJ77iTRtK3qwkcyluajFnHVxBaVrmxNKCN8Ur9HiyA==","signatures":[{"sig":"MEQCIC1LyTi4md/Vf5A99w7Kh45YPV0pjmqKoQan+By41UODAiBaxVNeWJ6A1H+/SLQeKoo8qpSWR3oz/BV5zZtmUk70GA==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}]},"_from":".","files":["index.js","lib/trough.js","lib/unified.js"],"_shasum":"706fe04cb418553e17f66ba12ff0c73e983d55b5","browser":{"node-extend":"extend"},"engines":{"node":">=0.11.0"},"gitHead":"a4a3fb0eaff7c3f2bdd85f7c3929af6e7d326d22","scripts":{"lint":"npm run lint-api && npm run lint-style","test":"npm run build && npm run lint && npm run test-coverage","build":"npm run build-md && npm run build-bundle && npm run build-mangle","build-md":"remark . --quiet --frail","lint-api":"eslint .","test-api":"node test.js","lint-style":"jscs --reporter inline .","build-bundle":"browserify index.js -s unified > unified.js","build-mangle":"esmangle unified.js > unified.min.js","test-coverage":"istanbul cover test.js"},"_npmUser":{"name":"wooorm","email":"tituswormer@gmail.com"},"repository":{"url":"git+https://github.com/wooorm/unified.git","type":"git"},"_npmVersion":"3.8.6","description":"Pluggable text processing interface","directories":{},"_nodeVersion":"6.0.0","dependencies":{"bail":"^1.0.0","once":"^1.3.3","vfile":"^1.0.0","extend":"^3.0.0"},"devDependencies":{"jscs":"^3.0.0","tape":"^4.4.0","eslint":"^2.0.0","remark":"^4.0.0","esmangle":"^1.0.0","istanbul":"^0.4.0","browserify":"^13.0.0","jscs-jsdoc":"^2.0.0","remark-toc":"^3.0.0","remark-lint":"^4.0.0","remark-github":"^4.0.1","remark-comment-config":"^3.0.0","remark-validate-links":"^3.0.0"},"_npmOperationalInternal":{"tmp":"tmp/unified-4.1.0.tgz_1465680275848_0.4655863812658936","host":"packages-12-west.internal.npmjs.com"}},"4.1.1":{"name":"unified","version":"4.1.1","keywords":["process","parse","transform","compile","stringify","hast","retext","remark"],"author":{"url":"http://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"},"license":"MIT","_id":"unified@4.1.1","maintainers":[{"name":"wooorm","email":"tituswormer@gmail.com"}],"contributors":[{"url":"http://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"}],"homepage":"https://github.com/wooorm/unified#readme","bugs":{"url":"https://github.com/wooorm/unified/issues"},"dist":{"shasum":"92238870e6b97dd094ed80daef1ebec421e5b8db","tarball":"https://registry.npmjs.org/unified/-/unified-4.1.1.tgz","integrity":"sha512-1bhgg4OgqoNO9Di10zP+PoIqyPSZ4WU0LgojSSCSKWv+r+BRK9XUcQxVueLP3RtyxkA6QNsrl2uLAETztHC/hA==","signatures":[{"sig":"MEQCIAnxeVdUCrxH7SHxEYyZNfhyWpoUDZDrpcIwd0jeVMniAiB7E1IEGr3Lw5i/Kh8zmDRJF4FLdvCGXDl+7UZfmeV3UQ==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}]},"_from":".","files":["index.js","lib/trough.js","lib/unified.js"],"_shasum":"92238870e6b97dd094ed80daef1ebec421e5b8db","browser":{"node-extend":"extend"},"engines":{"node":">=0.11.0"},"gitHead":"75e48147911cd93f23904fdf43b84b0933b4f71e","scripts":{"lint":"npm run lint-api && npm run lint-style","test":"npm run build && npm run lint && npm run test-coverage","build":"npm run build-md && npm run build-bundle && npm run build-mangle","build-md":"remark . --quiet --frail","lint-api":"eslint .","test-api":"node test.js","lint-style":"jscs --reporter inline .","build-bundle":"browserify index.js -s unified > unified.js","build-mangle":"esmangle unified.js > unified.min.js","test-coverage":"istanbul cover test.js"},"_npmUser":{"name":"wooorm","email":"tituswormer@gmail.com"},"repository":{"url":"git+https://github.com/wooorm/unified.git","type":"git"},"_npmVersion":"3.8.6","description":"Pluggable text processing interface","directories":{},"_nodeVersion":"6.1.0","dependencies":{"bail":"^1.0.0","once":"^1.3.3","vfile":"^1.0.0","extend":"^3.0.0"},"devDependencies":{"jscs":"^3.0.0","tape":"^4.4.0","eslint":"^2.0.0","remark":"^4.0.0","esmangle":"^1.0.0","istanbul":"^0.4.0","browserify":"^13.0.0","jscs-jsdoc":"^2.0.0","remark-toc":"^3.0.0","remark-lint":"^4.0.0","remark-github":"^4.0.1","remark-comment-config":"^3.0.0","remark-validate-links":"^3.0.0"},"_npmOperationalInternal":{"tmp":"tmp/unified-4.1.1.tgz_1465735909693_0.8240992005448788","host":"packages-16-east.internal.npmjs.com"}},"4.1.2":{"name":"unified","version":"4.1.2","keywords":["process","parse","transform","compile","stringify","hast","retext","remark"],"author":{"url":"http://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"},"license":"MIT","_id":"unified@4.1.2","maintainers":[{"name":"wooorm","email":"tituswormer@gmail.com"}],"contributors":[{"url":"http://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"}],"homepage":"https://github.com/wooorm/unified#readme","bugs":{"url":"https://github.com/wooorm/unified/issues"},"dist":{"shasum":"e78a34b76260519e1ad8c46c427be4153fd2299c","tarball":"https://registry.npmjs.org/unified/-/unified-4.1.2.tgz","integrity":"sha512-uSUVfzKl4iVw9sONVAlD86MLaHGeiZwdZ+R9HYOUuDERqXbEHnAILLHTdfO4jOX52sWbi8MKBKpCXLEkBME51g==","signatures":[{"sig":"MEUCIAfkLf6w1qm3pH4NsnHbjfjH1Or9P2qEkCJLsoXY2P2yAiEAoz4OWPsYgqYxXj6X5eJCq7IJdV35EsnqWvXdz9lXf6U=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}]},"_from":".","files":["index.js","lib/trough.js","lib/unified.js"],"_shasum":"e78a34b76260519e1ad8c46c427be4153fd2299c","browser":{"node-extend":"extend"},"engines":{"node":">=0.11.0"},"gitHead":"8ae3b3ee0bfc84494e6b5d55252eb5c2d46264ad","scripts":{"lint":"npm run lint-api && npm run lint-style","test":"npm run build && npm run lint && npm run test-coverage","build":"npm run build-md && npm run build-bundle && npm run build-mangle","build-md":"remark . --quiet --frail","lint-api":"eslint .","test-api":"node test.js","lint-style":"jscs --reporter inline .","build-bundle":"browserify index.js -s unified > unified.js","build-mangle":"esmangle unified.js > unified.min.js","test-coverage":"istanbul cover test.js"},"_npmUser":{"name":"wooorm","email":"tituswormer@gmail.com"},"repository":{"url":"git+https://github.com/wooorm/unified.git","type":"git"},"_npmVersion":"3.8.6","description":"Pluggable text processing interface","directories":{},"_nodeVersion":"6.0.0","dependencies":{"bail":"^1.0.0","once":"^1.3.3","vfile":"^1.0.0","extend":"^3.0.0"},"devDependencies":{"jscs":"^3.0.0","tape":"^4.4.0","eslint":"^2.0.0","esmangle":"^1.0.0","istanbul":"^0.4.0","browserify":"^13.0.0","jscs-jsdoc":"^2.0.0","remark-cli":"^1.0.0","remark-toc":"^3.0.0","remark-lint":"^4.0.0","remark-github":"^5.0.0","remark-comment-config":"^4.0.0","remark-validate-links":"^4.0.0"},"_npmOperationalInternal":{"tmp":"tmp/unified-4.1.2.tgz_1465843116744_0.9058457287028432","host":"packages-12-west.internal.npmjs.com"}},"4.2.0":{"name":"unified","version":"4.2.0","keywords":["process","parse","transform","compile","stringify","hast","retext","remark"],"author":{"url":"http://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"},"license":"MIT","_id":"unified@4.2.0","maintainers":[{"name":"wooorm","email":"tituswormer@gmail.com"}],"contributors":[{"url":"http://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"}],"homepage":"https://github.com/wooorm/unified#readme","bugs":{"url":"https://github.com/wooorm/unified/issues"},"xo":{"rules":{"max-lines":"off","guard-for-in":"off"},"space":true,"ignores":["unified.js","unified.min.js"]},"nyc":{"lines":100,"branches":100,"functions":100,"check-coverage":true},"dist":{"shasum":"200c4aa4fc40b6be11aa101089d3047172f7277d","tarball":"https://registry.npmjs.org/unified/-/unified-4.2.0.tgz","integrity":"sha512-YFFEBslwK/9w22Vy1lJfXK1Kji/b4oeSOKVkfWNlK+JCIroQ9927BiTuyo+V1XvJLTICZnAlHhoFUC4aL88A2g==","signatures":[{"sig":"MEUCIQDPMotbdIRgOeqVFGE7Q1ulK4Z/o0/acUSO2iBDm5phMQIgMtZoo3UXyFCvRyOdlZeKmBmln0YUony7+qc4Q2+DiXc=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}]},"_from":".","files":["index.js","lib"],"_shasum":"200c4aa4fc40b6be11aa101089d3047172f7277d","browser":{"node-extend":"extend"},"engines":{"node":">=0.11.0"},"gitHead":"82f21cceb264403f6cc0c8f78616b64c3f7455d8","scripts":{"lint":"xo","test":"npm run build && npm run lint && npm run test-coverage","build":"npm run build-md && npm run build-bundle && npm run build-mangle","build-md":"remark . --quiet --frail","test-api":"node test","build-bundle":"browserify index.js -s unified > unified.js","build-mangle":"esmangle unified.js > unified.min.js","test-coverage":"nyc --reporter lcov tape test"},"_npmUser":{"name":"wooorm","email":"tituswormer@gmail.com"},"repository":{"url":"git+https://github.com/wooorm/unified.git","type":"git"},"_npmVersion":"3.3.6","description":"Pluggable text processing interface","directories":{},"_nodeVersion":"5.0.0","dependencies":{"has":"^1.0.1","bail":"^1.0.0","once":"^1.3.3","vfile":"^1.0.0","extend":"^3.0.0","trough":"^1.0.0"},"remarkConfig":{"output":true,"plugins":{"toc":{"maxDepth":3},"lint":{"heading-increment":false,"list-item-spacing":false,"no-duplicate-headings":false},"github":null,"comment-config":null,"validate-links":null},"settings":{"bullet":"*"}},"devDependencies":{"xo":"^0.16.0","nyc":"^7.1.0","tape":"^4.4.0","esmangle":"^1.0.0","browserify":"^13.0.0","remark-cli":"^1.0.0","remark-toc":"^3.0.0","remark-lint":"^4.0.0","remark-github":"^5.0.0","remark-comment-config":"^4.0.0","remark-validate-links":"^4.0.0"},"_npmOperationalInternal":{"tmp":"tmp/unified-4.2.0.tgz_1470067305128_0.08399983565323055","host":"packages-12-west.internal.npmjs.com"}},"4.2.1":{"name":"unified","version":"4.2.1","keywords":["process","parse","transform","compile","stringify","hast","retext","remark"],"author":{"url":"http://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"},"license":"MIT","_id":"unified@4.2.1","maintainers":[{"name":"wooorm","email":"tituswormer@gmail.com"}],"contributors":[{"url":"http://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"}],"homepage":"https://github.com/wooorm/unified#readme","bugs":{"url":"https://github.com/wooorm/unified/issues"},"xo":{"rules":{"max-lines":"off","guard-for-in":"off"},"space":true,"ignores":["unified.js","unified.min.js"]},"nyc":{"lines":100,"branches":100,"functions":100,"check-coverage":true},"dist":{"shasum":"76ff43aa8da430f6e7e4a55c84ebac2ad2cfcd2e","tarball":"https://registry.npmjs.org/unified/-/unified-4.2.1.tgz","integrity":"sha512-wREXt5whxv4jMEo638N5m6j/oZLyenWxYkyoMAvQi6QQUxdkej5uqjPy399doWEJKrT7/sIvB5MMe9ri5oLKgg==","signatures":[{"sig":"MEQCIEqJXymN6bFFouagAU6F2Mdha2TohUiur84XWc+SE73SAiA2QRJ2MFghiFRXhZYJlL8XAiX//B8JVrSOnzWcWZynrg==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}]},"_from":".","files":["index.js","lib"],"_shasum":"76ff43aa8da430f6e7e4a55c84ebac2ad2cfcd2e","browser":{"node-extend":"extend"},"engines":{"node":">=0.11.0"},"gitHead":"75dd894ce8150dcfbd142327cac61fbdd5bf6ef8","scripts":{"lint":"xo","test":"npm run build && npm run lint && npm run test-coverage","build":"npm run build-md && npm run build-bundle && npm run build-mangle","build-md":"remark . --quiet --frail","test-api":"node test","build-bundle":"browserify index.js -s unified > unified.js","build-mangle":"esmangle unified.js > unified.min.js","test-coverage":"nyc --reporter lcov tape test"},"_npmUser":{"name":"wooorm","email":"tituswormer@gmail.com"},"repository":{"url":"git+https://github.com/wooorm/unified.git","type":"git"},"_npmVersion":"3.3.6","description":"Pluggable text processing interface","directories":{},"_nodeVersion":"5.0.0","dependencies":{"has":"^1.0.1","bail":"^1.0.0","once":"^1.3.3","vfile":"^1.0.0","extend":"^3.0.0","trough":"^1.0.0"},"remarkConfig":{"output":true,"plugins":{"toc":{"maxDepth":3},"lint":{"heading-increment":false,"list-item-spacing":false,"no-duplicate-headings":false},"github":null,"comment-config":null,"validate-links":null},"settings":{"bullet":"*"}},"devDependencies":{"xo":"^0.16.0","nyc":"^7.1.0","tape":"^4.4.0","esmangle":"^1.0.0","browserify":"^13.0.0","remark-cli":"^1.0.0","remark-toc":"^3.0.0","remark-lint":"^4.0.0","remark-github":"^5.0.0","remark-comment-config":"^4.0.0","remark-validate-links":"^4.0.0"},"_npmOperationalInternal":{"tmp":"tmp/unified-4.2.1.tgz_1470121761063_0.6253260243684053","host":"packages-16-east.internal.npmjs.com"}},"5.0.0":{"name":"unified","version":"5.0.0","keywords":["process","parse","transform","compile","stringify","hast","retext","remark"],"author":{"url":"http://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"},"license":"MIT","_id":"unified@5.0.0","maintainers":[{"name":"wooorm","email":"tituswormer@gmail.com"}],"contributors":[{"url":"http://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"}],"homepage":"https://github.com/wooorm/unified#readme","bugs":{"url":"https://github.com/wooorm/unified/issues"},"xo":{"rules":{"max-lines":"off","guard-for-in":"off"},"space":true,"ignores":["unified.js"]},"nyc":{"lines":100,"branches":100,"functions":100,"check-coverage":true},"dist":{"shasum":"7d66acf05431db1418b00ee81cfe30baa40a9a22","tarball":"https://registry.npmjs.org/unified/-/unified-5.0.0.tgz","integrity":"sha512-S5CbCEs1Pj6ZoGbcVX+nfBT9B/bnNt1Kh3YWDj+j1lg9GMUOruwhzOjUPO6nYc38u0FXR7t3UlgK3D/pZfe+hA==","signatures":[{"sig":"MEUCICEOAb276Ko6Qz5cBVKa5w9EvWwQDsCUO2xeChT1TDSKAiEAosLpdI0nHoLgwzH+u36nUb/SCzaeOmSNO3CUqvc3Kw8=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}]},"_from":".","files":["index.js","lib"],"_shasum":"7d66acf05431db1418b00ee81cfe30baa40a9a22","browser":{"node-extend":"extend"},"engines":{"node":">=0.11.0"},"gitHead":"fac76054e4088b65f98bc35f6e19e64c6c130f9a","scripts":{"lint":"xo","test":"npm run build && npm run lint && npm run test-coverage","build":"npm run build-md && npm run build-bundle && npm run build-mangle","build-md":"remark . --quiet --frail","test-api":"node test","build-bundle":"browserify index.js -s unified > unified.js","build-mangle":"esmangle unified.js > unified.min.js","test-coverage":"nyc --reporter lcov tape test"},"_npmUser":{"name":"wooorm","email":"tituswormer@gmail.com"},"repository":{"url":"git+https://github.com/wooorm/unified.git","type":"git"},"_npmVersion":"3.3.6","description":"Pluggable text processing interface","directories":{},"_nodeVersion":"5.0.0","dependencies":{"has":"^1.0.1","bail":"^1.0.0","once":"^1.3.3","vfile":"^2.0.0","extend":"^3.0.0","trough":"^1.0.0","is-buffer":"^1.1.4","x-is-string":"^0.1.0"},"remarkConfig":{"output":true,"plugins":{"toc":{"tight":true,"maxDepth":3},"lint":{"heading-increment":false,"list-item-spacing":false,"no-duplicate-headings":false,"no-missing-blank-lines":{"exceptTightLists":true}},"github":null,"comment-config":null,"validate-links":null},"settings":{"bullet":"*"}},"devDependencies":{"xo":"^0.16.0","nyc":"^8.1.0","tape":"^4.4.0","esmangle":"^1.0.0","browserify":"^13.0.0","remark-cli":"^1.0.0","remark-toc":"^3.0.0","remark-lint":"^4.0.0","remark-github":"^5.0.0","remark-comment-config":"^4.0.0","remark-validate-links":"^4.0.0"},"_npmOperationalInternal":{"tmp":"tmp/unified-5.0.0.tgz_1471792462425_0.977663794066757","host":"packages-12-west.internal.npmjs.com"}},"5.1.0":{"name":"unified","version":"5.1.0","keywords":["process","parse","transform","compile","stringify","hast","retext","remark"],"author":{"url":"http://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"},"license":"MIT","_id":"unified@5.1.0","maintainers":[{"name":"wooorm","email":"tituswormer@gmail.com"}],"contributors":[{"url":"http://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"}],"homepage":"https://github.com/wooorm/unified#readme","bugs":{"url":"https://github.com/wooorm/unified/issues"},"xo":{"rules":{"max-lines":"off","guard-for-in":"off"},"space":true,"ignores":["unified.js"]},"nyc":{"lines":100,"branches":100,"functions":100,"check-coverage":true},"dist":{"shasum":"61268da9b91ce925be1f3d198c0278b0e9716094","tarball":"https://registry.npmjs.org/unified/-/unified-5.1.0.tgz","integrity":"sha512-mSHD25l+EyuNc3WB/K1/zMle3AHYxZ0iz4JxP9cSCBr9HDmRSnR24vTWo/r1/z84PUlQRN+QCt9jvKd422y8MA==","signatures":[{"sig":"MEUCIByVKPIUwAZg/PF2P0mnUNNzkgjg5HQOiKtcgmEIvXB8AiEA8cwUXvtkoAIFy18/+7+uuRTrG+wQ2jLdioGjiuaYsyk=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}]},"_from":".","files":["index.js","lib"],"_shasum":"61268da9b91ce925be1f3d198c0278b0e9716094","browser":{"node-extend":"extend"},"engines":{"node":">=0.11.0"},"gitHead":"be921cdcd4d64b430a1c69e68bd964cbae4a2efa","scripts":{"lint":"xo","test":"npm run build && npm run lint && npm run test-coverage","build":"npm run build-md && npm run build-bundle && npm run build-mangle","build-md":"remark . --quiet --frail","test-api":"node test","build-bundle":"browserify index.js -s unified > unified.js","build-mangle":"esmangle unified.js > unified.min.js","test-coverage":"nyc --reporter lcov tape test"},"_npmUser":{"name":"wooorm","email":"tituswormer@gmail.com"},"repository":{"url":"git+https://github.com/wooorm/unified.git","type":"git"},"_npmVersion":"3.3.6","description":"Pluggable text processing interface","directories":{},"_nodeVersion":"5.0.0","dependencies":{"has":"^1.0.1","bail":"^1.0.0","once":"^1.3.3","vfile":"^2.0.0","extend":"^3.0.0","trough":"^1.0.0","is-buffer":"^1.1.4","x-is-string":"^0.1.0"},"remarkConfig":{"output":true,"presets":"wooorm"},"devDependencies":{"xo":"^0.16.0","nyc":"^8.1.0","tape":"^4.4.0","esmangle":"^1.0.0","browserify":"^13.0.0","remark-cli":"^2.0.0","remark-preset-wooorm":"^1.0.0"},"_npmOperationalInternal":{"tmp":"tmp/unified-5.1.0.tgz_1476130730412_0.27419051667675376","host":"packages-16-east.internal.npmjs.com"}},"6.0.0":{"name":"unified","version":"6.0.0","keywords":["process","parse","transform","compile","stringify","rehype","retext","remark"],"author":{"url":"http://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"},"license":"MIT","_id":"unified@6.0.0","maintainers":[{"name":"wooorm","email":"tituswormer@gmail.com"}],"contributors":[{"url":"http://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"}],"homepage":"https://github.com/unifiedjs/unified#readme","bugs":{"url":"https://github.com/unifiedjs/unified/issues"},"xo":{"rules":{"max-lines":"off","guard-for-in":"off","import/no-unassigned-import":"off"},"space":true,"ignores":["unified.js"]},"nyc":{"lines":100,"branches":100,"functions":100,"check-coverage":true},"dist":{"shasum":"bcb3dabb92c1394cc82f3fd679274f727e6ebaf1","tarball":"https://registry.npmjs.org/unified/-/unified-6.0.0.tgz","integrity":"sha512-fV5KAwM1WdIjgbW/KV89uJ9DEKDE9ClBOqFVkyJ5opFdDH2v289xTgXyvj/+YA5Gw0RU5pYHwMFdr3sWfMDobQ==","signatures":[{"sig":"MEYCIQDwGz4Djg9bsae0hlfpeV1VVi6qjy8UeFei8SmtxLsNbQIhAMP2P3kLBHAvRmhgdlR+v1pc1Yd08wep2SD2Bf02MynW","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}]},"_from":".","files":["index.js","lib"],"_shasum":"bcb3dabb92c1394cc82f3fd679274f727e6ebaf1","gitHead":"6e4e5bff40798427cc2a1f8a0f05af80ac2fd0a6","scripts":{"lint":"xo","test":"npm run build && npm run lint && npm run test-coverage","build":"npm run build-md && npm run build-bundle && npm run build-mangle","build-md":"remark . --quiet --frail","test-api":"node test","build-bundle":"browserify index.js -s unified > unified.js","build-mangle":"esmangle unified.js > unified.min.js","test-coverage":"nyc --reporter lcov tape test"},"_npmUser":{"name":"wooorm","email":"tituswormer@gmail.com"},"repository":{"url":"git+https://github.com/unifiedjs/unified.git","type":"git"},"_npmVersion":"2.14.2","description":"Pluggable text processing interface","directories":{},"_nodeVersion":"4.0.0","dependencies":{"has":"^1.0.1","bail":"^1.0.0","vfile":"^2.0.0","extend":"^3.0.0","trough":"^1.0.0","isarray":"^2.0.1","x-is-string":"^0.1.0","x-is-function":"^1.0.4"},"remarkConfig":{"output":true,"presets":"wooorm"},"devDependencies":{"xo":"^0.17.0","nyc":"^10.0.0","tape":"^4.4.0","esmangle":"^1.0.0","browserify":"^14.0.0","remark-cli":"^2.0.0","remark-preset-wooorm":"^1.0.0"},"_npmOperationalInternal":{"tmp":"tmp/unified-6.0.0.tgz_1487848903847_0.4706952346023172","host":"packages-18-east.internal.npmjs.com"}},"6.1.0":{"name":"unified","version":"6.1.0","keywords":["process","parse","transform","compile","stringify","rehype","retext","remark"],"author":{"url":"http://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"},"license":"MIT","_id":"unified@6.1.0","maintainers":[{"name":"wooorm","email":"tituswormer@gmail.com"}],"contributors":[{"url":"http://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"}],"homepage":"https://github.com/unifiedjs/unified#readme","bugs":{"url":"https://github.com/unifiedjs/unified/issues"},"xo":{"rules":{"max-lines":"off","guard-for-in":"off","import/no-unassigned-import":"off"},"space":true,"ignores":["unified.js"]},"nyc":{"lines":100,"branches":100,"functions":100,"check-coverage":true},"dist":{"shasum":"c388fb6eafb4ec9812e0b6ac1a995657627e0d65","tarball":"https://registry.npmjs.org/unified/-/unified-6.1.0.tgz","integrity":"sha512-/E89o4jLdB2pMhma9TGzWQi83IV8VylXBp16snjDL3z4HJvG+fcH1y8Keidk9ND5ZUOalBIOqLcPuQHRs9tBPw==","signatures":[{"sig":"MEYCIQCvExqxZngOS595LrAafDXc4sD4rHJni6xGdR+HCeP3eAIhAL2jjktt8KPXnnr/tFx9IX95/EccYuH8+9yK723EVtuv","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}]},"_from":".","files":["index.js","lib"],"_shasum":"c388fb6eafb4ec9812e0b6ac1a995657627e0d65","gitHead":"8da75308c7b71ebb7afd0276a468149753db9ed4","scripts":{"lint":"xo","test":"npm run build && npm run lint && npm run test-coverage","build":"npm run build-md && npm run build-bundle && npm run build-mangle","build-md":"remark . -qfo","test-api":"node test","build-bundle":"browserify index.js -s unified > unified.js","build-mangle":"esmangle unified.js > unified.min.js","test-coverage":"nyc --reporter lcov tape test"},"_npmUser":{"name":"wooorm","email":"tituswormer@gmail.com"},"repository":{"url":"git+https://github.com/unifiedjs/unified.git","type":"git"},"_npmVersion":"4.0.3","description":"Pluggable text processing interface","directories":{},"_nodeVersion":"7.0.0","dependencies":{"has":"^1.0.1","bail":"^1.0.0","vfile":"^2.0.0","extend":"^3.0.0","trough":"^1.0.0","isarray":"^2.0.1","x-is-string":"^0.1.0","is-plain-obj":"^1.1.0","x-is-function":"^1.0.4"},"remarkConfig":{"plugins":["preset-wooorm"]},"devDependencies":{"xo":"^0.17.0","nyc":"^10.0.0","tape":"^4.4.0","esmangle":"^1.0.0","browserify":"^14.0.0","remark-cli":"^3.0.0","remark-preset-wooorm":"^2.0.0"},"_npmOperationalInternal":{"tmp":"tmp/unified-6.1.0.tgz_1487932282063_0.6138905440457165","host":"packages-18-east.internal.npmjs.com"}},"6.1.1":{"name":"unified","version":"6.1.1","keywords":["process","parse","transform","compile","stringify","rehype","retext","remark"],"author":{"url":"http://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"},"license":"MIT","_id":"unified@6.1.1","maintainers":[{"name":"wooorm","email":"tituswormer@gmail.com"}],"contributors":[{"url":"http://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"}],"homepage":"https://github.com/unifiedjs/unified#readme","bugs":{"url":"https://github.com/unifiedjs/unified/issues"},"xo":{"rules":{"max-lines":"off","guard-for-in":"off","import/no-unassigned-import":"off"},"space":true,"ignores":["unified.js"]},"nyc":{"lines":100,"branches":100,"functions":100,"check-coverage":true},"dist":{"shasum":"0abb4d2ffd8f42c0bc06e4a62ff8eb8fd77f8d11","tarball":"https://registry.npmjs.org/unified/-/unified-6.1.1.tgz","integrity":"sha512-qSvFDGPhFH3YWQiZ+YTrf3toMp9+UP61icf/Myb/X+kTn9fhvgXGIvIvBKr/cPYxb+lVeQnHEPozHQj9rQf1uQ==","signatures":[{"sig":"MEQCICfUblUlfNEjDE3RFqeYmyVzGmFFYshjFwMfZotEi4U4AiAbCxCB1aU9DomZ4pFUKxqjN3ZEXUWxHWs8Fd30kgluQg==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}]},"_from":".","files":["index.js","lib"],"_shasum":"0abb4d2ffd8f42c0bc06e4a62ff8eb8fd77f8d11","gitHead":"9d2b806f5971f28eb7fd1186d9535abaa13cd51c","scripts":{"lint":"xo","test":"npm run build && npm run lint && npm run test-coverage","build":"npm run build-md && npm run build-bundle && npm run build-mangle","build-md":"remark . -qfo","test-api":"node test","build-bundle":"browserify index.js -s unified > unified.js","build-mangle":"esmangle unified.js > unified.min.js","test-coverage":"nyc --reporter lcov tape test"},"_npmUser":{"name":"wooorm","email":"tituswormer@gmail.com"},"repository":{"url":"git+https://github.com/unifiedjs/unified.git","type":"git"},"_npmVersion":"4.0.3","description":"Pluggable text processing interface","directories":{},"_nodeVersion":"7.0.0","dependencies":{"has":"^1.0.1","bail":"^1.0.0","vfile":"^2.0.0","extend":"^3.0.0","trough":"^1.0.0","isarray":"^2.0.1","x-is-string":"^0.1.0","is-plain-obj":"^1.1.0","x-is-function":"^1.0.4"},"remarkConfig":{"plugins":["preset-wooorm"]},"devDependencies":{"xo":"^0.17.0","nyc":"^10.0.0","tape":"^4.4.0","esmangle":"^1.0.0","browserify":"^14.0.0","remark-cli":"^3.0.0","remark-preset-wooorm":"^2.0.0"},"_npmOperationalInternal":{"tmp":"tmp/unified-6.1.1.tgz_1488315569474_0.3225632959511131","host":"packages-18-east.internal.npmjs.com"}},"6.1.2":{"name":"unified","version":"6.1.2","keywords":["process","parse","transform","compile","stringify","rehype","retext","remark"],"author":{"url":"http://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"},"license":"MIT","_id":"unified@6.1.2","maintainers":[{"name":"wooorm","email":"tituswormer@gmail.com"}],"contributors":[{"url":"http://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"}],"homepage":"https://github.com/unifiedjs/unified#readme","bugs":{"url":"https://github.com/unifiedjs/unified/issues"},"xo":{"rules":{"max-lines":"off","guard-for-in":"off","unicorn/prefer-type-error":"off","import/no-unassigned-import":"off"},"space":true,"esnext":false,"ignores":["unified.js"]},"nyc":{"lines":100,"branches":100,"functions":100,"check-coverage":true},"dist":{"shasum":"b3904c3254ffbea7ff6d806c5d5b6248838cecb6","tarball":"https://registry.npmjs.org/unified/-/unified-6.1.2.tgz","integrity":"sha512-qBHRkx2MOddlbbxpd3bg0zbsDDaEB6uEzTQ5PlE+9R5F8voMNNg2cEmlZiInsMOYrGTmO1cv3DPxeal/XNxkpw==","signatures":[{"sig":"MEUCIQCTCbVfw0nAZo8ujLQdzWF/hNuDsI+qIQIAj/g5KJ6VoAIgT9LhwDwmdnkZ7nqV0uUzUn7l0QFqsJETf56bBDIpcow=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}]},"_from":".","files":["index.js","lib"],"_shasum":"b3904c3254ffbea7ff6d806c5d5b6248838cecb6","gitHead":"83ed31a5aafdeaeb33196b947ec252393c9b0a16","scripts":{"lint":"xo","test":"npm run build && npm run lint && npm run test-coverage","build":"npm run build-md && npm run build-bundle && npm run build-mangle","build-md":"remark . -qfo","test-api":"node test","build-bundle":"browserify index.js -s unified > unified.js","build-mangle":"esmangle unified.js > unified.min.js","test-coverage":"nyc --reporter lcov tape test"},"_npmUser":{"name":"wooorm","email":"tituswormer@gmail.com"},"repository":{"url":"git+https://github.com/unifiedjs/unified.git","type":"git"},"_npmVersion":"2.14.2","description":"Pluggable text processing interface","directories":{},"_nodeVersion":"4.0.0","dependencies":{"has":"^1.0.1","bail":"^1.0.0","vfile":"^2.0.0","extend":"^3.0.0","trough":"^1.0.0","isarray":"^2.0.1","x-is-string":"^0.1.0","is-plain-obj":"^1.1.0","x-is-function":"^1.0.4"},"remarkConfig":{"plugins":["preset-wooorm"]},"devDependencies":{"xo":"^0.18.1","nyc":"^10.0.0","tape":"^4.4.0","esmangle":"^1.0.0","browserify":"^14.0.0","remark-cli":"^3.0.0","remark-preset-wooorm":"^2.0.0"},"_npmOperationalInternal":{"tmp":"tmp/unified-6.1.2.tgz_1491854664171_0.8953307268675417","host":"packages-18-east.internal.npmjs.com"}},"6.1.3":{"name":"unified","version":"6.1.3","keywords":["process","parse","transform","compile","stringify","rehype","retext","remark"],"author":{"url":"http://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"},"license":"MIT","_id":"unified@6.1.3","maintainers":[{"name":"wooorm","email":"tituswormer@gmail.com"}],"contributors":[{"url":"http://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"}],"homepage":"https://github.com/unifiedjs/unified#readme","bugs":{"url":"https://github.com/unifiedjs/unified/issues"},"xo":{"rules":{"max-lines":"off","guard-for-in":"off","unicorn/prefer-type-error":"off","import/no-unassigned-import":"off"},"space":true,"esnext":false,"ignores":["unified.js"]},"nyc":{"lines":100,"branches":100,"functions":100,"check-coverage":true},"dist":{"shasum":"c26a9df2c56f3def938309253928f37150c70c6e","tarball":"https://registry.npmjs.org/unified/-/unified-6.1.3.tgz","integrity":"sha512-n1s/f/qovw2M8W9S/noZRSv3F7/E4gBeNFJ11Z3f9Uba9i23M1qj4Mm+Dq3upLlktUqolZw1eenwK7KV4qpa9g==","signatures":[{"sig":"MEUCIElWOu/IAXP6wDL0++0WsT6sNRyRT8C8mxn/3uqEJ9XJAiEA5c3hm4yJa2vmGZDl2z0O0K7+ZNRWL79OGD6BwUOFOIU=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}]},"_from":".","files":["index.js","lib"],"_shasum":"c26a9df2c56f3def938309253928f37150c70c6e","gitHead":"84f55c81fb02c2bd5e5e62c02261fd819a013d25","scripts":{"lint":"xo","test":"npm run build && npm run lint && npm run test-coverage","build":"npm run build-md && npm run build-bundle && npm run build-mangle","build-md":"remark . -qfo","test-api":"node test","build-bundle":"browserify index.js -s unified > unified.js","build-mangle":"esmangle unified.js > unified.min.js","test-coverage":"nyc --reporter lcov tape test"},"_npmUser":{"name":"wooorm","email":"tituswormer@gmail.com"},"repository":{"url":"git+https://github.com/unifiedjs/unified.git","type":"git"},"_npmVersion":"2.14.2","description":"Pluggable text processing interface","directories":{},"_nodeVersion":"4.0.0","dependencies":{"has":"^1.0.1","bail":"^1.0.0","vfile":"^2.0.0","extend":"^3.0.0","trough":"^1.0.0","x-is-string":"^0.1.0","is-plain-obj":"^1.1.0","x-is-function":"^1.0.4"},"remarkConfig":{"plugins":["preset-wooorm"]},"devDependencies":{"xo":"^0.18.1","nyc":"^10.0.0","tape":"^4.4.0","esmangle":"^1.0.0","browserify":"^14.0.0","remark-cli":"^3.0.0","remark-preset-wooorm":"^2.0.0"},"_npmOperationalInternal":{"tmp":"tmp/unified-6.1.3.tgz_1493553920120_0.7987838627304882","host":"packages-18-east.internal.npmjs.com"}},"6.1.4":{"name":"unified","version":"6.1.4","keywords":["process","parse","transform","compile","stringify","rehype","retext","remark"],"author":{"url":"http://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"},"license":"MIT","_id":"unified@6.1.4","maintainers":[{"name":"wooorm","email":"tituswormer@gmail.com"}],"contributors":[{"url":"http://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"}],"homepage":"https://github.com/unifiedjs/unified#readme","bugs":{"url":"https://github.com/unifiedjs/unified/issues"},"xo":{"rules":{"max-lines":"off","guard-for-in":"off","unicorn/prefer-type-error":"off","import/no-unassigned-import":"off"},"space":true,"esnext":false,"ignores":["unified.js"]},"nyc":{"lines":100,"branches":100,"functions":100,"check-coverage":true},"dist":{"shasum":"12d7a4ec35986c4a2fa0815cdfdec4be0245fca2","tarball":"https://registry.npmjs.org/unified/-/unified-6.1.4.tgz","integrity":"sha512-maeS5voAOrFj9TxgvdkLmfuv85/qu1BxDXQkqWnQA8249uVn+W0reduvB382IwmT2V1aWuEDLwicMTurrt8Zeg==","signatures":[{"sig":"MEUCIElHDXgdjJFewsAnm5Ztwzgw5TySWl7k0Kc1pHXbzzLWAiEAksmveZj37rLIgCClz8d9WubPL/EM5oCvdBMK4LGmgnM=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}]},"_from":".","files":["index.js","lib"],"_shasum":"12d7a4ec35986c4a2fa0815cdfdec4be0245fca2","gitHead":"a299b11781aa65c87547ef784465cd0470668946","scripts":{"lint":"xo","test":"npm run build && npm run lint && npm run test-coverage","build":"npm run build-md && npm run build-bundle && npm run build-mangle","build-md":"remark . -qfo","test-api":"node test","build-bundle":"browserify index.js -s unified > unified.js","build-mangle":"esmangle unified.js > unified.min.js","test-coverage":"nyc --reporter lcov tape test"},"_npmUser":{"name":"wooorm","email":"tituswormer@gmail.com"},"repository":{"url":"git+https://github.com/unifiedjs/unified.git","type":"git"},"_npmVersion":"2.14.2","description":"Pluggable text processing interface","directories":{},"_nodeVersion":"4.0.0","dependencies":{"has":"^1.0.1","bail":"^1.0.0","vfile":"^2.0.0","extend":"^3.0.0","trough":"^1.0.0","x-is-string":"^0.1.0","is-plain-obj":"^1.1.0","x-is-function":"^1.0.4"},"remarkConfig":{"plugins":["preset-wooorm"]},"devDependencies":{"xo":"^0.18.1","nyc":"^10.0.0","tape":"^4.4.0","esmangle":"^1.0.0","browserify":"^14.0.0","remark-cli":"^3.0.0","remark-preset-wooorm":"^3.0.0"},"_npmOperationalInternal":{"tmp":"tmp/unified-6.1.4.tgz_1495553060692_0.9109853859990835","host":"s3://npm-registry-packages"}},"6.1.5":{"name":"unified","version":"6.1.5","keywords":["process","parse","transform","compile","stringify","rehype","retext","remark"],"author":{"url":"http://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"},"license":"MIT","_id":"unified@6.1.5","maintainers":[{"name":"wooorm","email":"tituswormer@gmail.com"}],"contributors":[{"url":"http://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"}],"homepage":"https://github.com/unifiedjs/unified#readme","bugs":{"url":"https://github.com/unifiedjs/unified/issues"},"xo":{"rules":{"max-lines":"off","guard-for-in":"off","unicorn/prefer-type-error":"off","import/no-unassigned-import":"off"},"space":true,"esnext":false,"ignores":["unified.js"]},"nyc":{"lines":100,"branches":100,"functions":100,"check-coverage":true},"dist":{"shasum":"716937872621a63135e62ced2f3ac6a063c6fb87","tarball":"https://registry.npmjs.org/unified/-/unified-6.1.5.tgz","integrity":"sha512-Ogc9GFleIaPoHK9Ydsa1K+lpGbs1Dxtuh8Nmoh0Pd6MTrzspGIubegF8bwc/jEUGU1Zf/4gBZzK2v4TjIQZlZg==","signatures":[{"sig":"MEQCIEi5iyQsNobMjqb4P5BCmzulKvlIiydbWmlF+u62lUwRAiAYILnwiPYM0oIghv6XmtVV5qrFcJEbqVXogujA4xf0QQ==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}]},"_from":".","files":["index.js","lib"],"_shasum":"716937872621a63135e62ced2f3ac6a063c6fb87","gitHead":"d7cfeecfd25c8103266140056f1ca041cbda104a","scripts":{"lint":"xo","test":"npm run build && npm run lint && npm run test-coverage","build":"npm run build-md && npm run build-bundle && npm run build-mangle","build-md":"remark . -qfo","test-api":"node test","build-bundle":"browserify index.js -s unified > unified.js","build-mangle":"esmangle unified.js > unified.min.js","test-coverage":"nyc --reporter lcov tape test"},"_npmUser":{"name":"wooorm","email":"tituswormer@gmail.com"},"repository":{"url":"git+https://github.com/unifiedjs/unified.git","type":"git"},"_npmVersion":"2.14.2","description":"Pluggable text processing interface","directories":{},"_nodeVersion":"4.0.0","dependencies":{"bail":"^1.0.0","vfile":"^2.0.0","extend":"^3.0.0","trough":"^1.0.0","x-is-string":"^0.1.0","is-plain-obj":"^1.1.0","x-is-function":"^1.0.4"},"remarkConfig":{"plugins":["preset-wooorm"]},"devDependencies":{"xo":"^0.18.1","nyc":"^11.0.0","tape":"^4.4.0","esmangle":"^1.0.0","browserify":"^14.0.0","remark-cli":"^3.0.0","remark-preset-wooorm":"^3.0.0"},"_npmOperationalInternal":{"tmp":"tmp/unified-6.1.5.tgz_1497633107828_0.41491471184417605","host":"s3://npm-registry-packages"}},"6.1.6":{"name":"unified","version":"6.1.6","keywords":["process","parse","transform","compile","stringify","rehype","retext","remark"],"author":{"url":"http://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"},"license":"MIT","_id":"unified@6.1.6","maintainers":[{"name":"wooorm","email":"tituswormer@gmail.com"}],"contributors":[{"url":"http://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"}],"homepage":"https://github.com/unifiedjs/unified#readme","bugs":{"url":"https://github.com/unifiedjs/unified/issues"},"xo":{"rules":{"max-lines":"off","guard-for-in":"off","unicorn/prefer-type-error":"off","import/no-unassigned-import":"off"},"space":true,"esnext":false,"ignores":["unified.js"]},"nyc":{"lines":100,"branches":100,"functions":100,"check-coverage":true},"dist":{"shasum":"5ea7f807a0898f1f8acdeefe5f25faa010cc42b1","tarball":"https://registry.npmjs.org/unified/-/unified-6.1.6.tgz","integrity":"sha512-pW2f82bCIo2ifuIGYcV12fL96kMMYgw7JKVEgh7ODlrM9rj6vXSY3BV+H6lCcv1ksxynFf582hwWLnA1qRFy4w==","signatures":[{"sig":"MEQCIEAcWBVpm+mFj/VH6FXIcp1WSYBe1psLEIV/doL9aOK3AiBMLNZ1gGroBhZulUe/NnEDTMKpo2aTp2GuF+dCkRr+oA==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}]},"files":["index.js","lib"],"gitHead":"c87c92e0b38dda36a37758f443a56facab28d001","scripts":{"lint":"xo","test":"npm run build && npm run lint && npm run test-coverage","build":"npm run build-md && npm run build-bundle && npm run build-mangle","build-md":"remark . -qfo","test-api":"node test","build-bundle":"browserify index.js -s unified > unified.js","build-mangle":"esmangle unified.js > unified.min.js","test-coverage":"nyc --reporter lcov tape test"},"_npmUser":{"name":"wooorm","email":"tituswormer@gmail.com"},"repository":{"url":"git+https://github.com/unifiedjs/unified.git","type":"git"},"_npmVersion":"5.5.1","description":"Pluggable text processing interface","directories":{},"_nodeVersion":"9.0.0","dependencies":{"bail":"^1.0.0","vfile":"^2.0.0","extend":"^3.0.0","trough":"^1.0.0","x-is-string":"^0.1.0","is-plain-obj":"^1.1.0","x-is-function":"^1.0.4"},"remarkConfig":{"plugins":["preset-wooorm"]},"devDependencies":{"xo":"^0.18.1","nyc":"^11.0.0","tape":"^4.4.0","esmangle":"^1.0.0","browserify":"^14.0.0","remark-cli":"^4.0.0","remark-preset-wooorm":"^3.0.0"},"_npmOperationalInternal":{"tmp":"tmp/unified-6.1.6.tgz_1510875332118_0.2647679476067424","host":"s3://npm-registry-packages"}},"6.2.0":{"name":"unified","version":"6.2.0","keywords":["process","parse","transform","compile","stringify","rehype","retext","remark"],"author":{"url":"http://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"},"license":"MIT","_id":"unified@6.2.0","maintainers":[{"name":"wooorm","email":"tituswormer@gmail.com"}],"contributors":[{"url":"http://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"}],"homepage":"https://github.com/unifiedjs/unified#readme","bugs":{"url":"https://github.com/unifiedjs/unified/issues"},"xo":{"rules":{"no-var":"off","guard-for-in":"off","object-shorthand":"off","prefer-arrow-callback":"off","unicorn/prefer-type-error":"off"},"esnext":false,"ignores":["unified.js"],"prettier":true},"nyc":{"lines":100,"branches":100,"functions":100,"check-coverage":true},"dist":{"shasum":"7fbd630f719126d67d40c644b7e3f617035f6dba","tarball":"https://registry.npmjs.org/unified/-/unified-6.2.0.tgz","fileCount":4,"integrity":"sha512-1k+KPhlVtqmG99RaTbAv/usu85fcSRu3wY8X+vnsEhIxNP5VbVIDiXnLqyKIG+UMdyTg0ZX9EI6k2AfjJkHPtA==","signatures":[{"sig":"MEYCIQCV+mfEGhTlen9O5GFZ3HZZcTWdo+/InhuIQPZARNt4igIhAIrrcq+4C7xOxsm5ldAGtGk6t343pNvx6uGhivg3ZsNq","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":40528,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJa6bGTCRA9TVsSAnZWagAAALEP+QHr3DdKxAZsQSm1QH45\n7Q08ZjAFY9oESveNgP/9AVTm8n1qvlBFbabL8NBUayNlhfURQQfHRxk/hghM\nBIyR/AIj0YMXwynkJ2fjWAbyvmJA3MpFP57B0Ooht14A2H1EgnidMdJ0yq22\nwOgRUW6rRFsUCVkp0QcRGoBrP4RljbeFrGMIhCJRzBzXdlT2QXDS7a6126XM\nWZQf8FbW9qwRhJXyTrwsKruSwISj1JwOlMxn7ce5AR2UtMKD3BzXjA//3SHF\n8tsbac5yUNBGewR1BSiVcgLSI4P+NR1knr5fIqev+yDNyw/d2M7z9bDCsBrO\nF52wU1OHkxgD8uJ4shWw2EHhM52XOHmx3Qr3K/q4bMIUvh3/1iDf3uVdgp06\nw2gAC5Bn3IiJvmsj4UbNo2Bn2yXK5clOCtvDsiON+Jc5PZutlF7/OPpxhhW4\nu8U5dvtbGk1ZkpAQeeQH1YPS0sLMdfeYrApJ/ODpa+ynNhJ/QybmvdXZvCRX\nFRC2BR4mZnpkeKeP1nymQ7Y+LV5y5xPWto59/FPYjBQtPmB+lZChpddgQ4tz\nieybSJETVxX+rY3TX2arl9L3WcE/RzKyytNg9rxXMniiF+gIt3eIBz75JuDu\nYz6QLIDPdkWPER1wZrhiawvKdnghuRPXUCKLlu4zZVEOzwNrkAq/6B412p+x\n8adc\r\n=Keme\r\n-----END PGP SIGNATURE-----\r\n"},"files":["index.js","lib"],"gitHead":"f3cc0cced79b86018bbeec58391bafeab18da944","scripts":{"test":"npm run format && npm run build && npm run test-coverage","build":"npm run build-bundle && npm run build-mangle","format":"remark . -qfo && prettier --write '**/*.js' && xo --fix","test-api":"node test","build-bundle":"browserify index.js -s unified > unified.js","build-mangle":"esmangle unified.js > unified.min.js","test-coverage":"nyc --reporter lcov tape test"},"_npmUser":{"name":"wooorm","email":"tituswormer@gmail.com"},"prettier":{"semi":false,"useTabs":false,"tabWidth":2,"singleQuote":true,"trailingComma":"none","bracketSpacing":false},"repository":{"url":"git+https://github.com/unifiedjs/unified.git","type":"git"},"_npmVersion":"6.0.0","description":"Pluggable text processing interface","directories":{},"_nodeVersion":"9.5.0","dependencies":{"bail":"^1.0.0","vfile":"^2.0.0","extend":"^3.0.0","trough":"^1.0.0","x-is-string":"^0.1.0","is-plain-obj":"^1.1.0"},"remarkConfig":{"plugins":["preset-wooorm"]},"_hasShrinkwrap":false,"devDependencies":{"xo":"^0.20.0","nyc":"^11.0.0","tape":"^4.4.0","esmangle":"^1.0.0","prettier":"^1.12.1","browserify":"^16.0.0","remark-cli":"^5.0.0","remark-preset-wooorm":"^4.0.0"},"_npmOperationalInternal":{"tmp":"tmp/unified_6.2.0_1525264785413_0.7820445062994157","host":"s3://npm-registry-packages"}},"7.0.0":{"name":"unified","version":"7.0.0","keywords":["process","parse","transform","compile","stringify","rehype","retext","remark"],"author":{"url":"http://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"},"license":"MIT","_id":"unified@7.0.0","maintainers":[{"name":"wooorm","email":"tituswormer@gmail.com"}],"contributors":[{"url":"http://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"}],"homepage":"https://github.com/unifiedjs/unified#readme","bugs":{"url":"https://github.com/unifiedjs/unified/issues"},"xo":{"rules":{"no-var":"off","guard-for-in":"off","object-shorthand":"off","prefer-arrow-callback":"off","unicorn/prefer-type-error":"off"},"esnext":false,"ignores":["unified.js"],"prettier":true},"nyc":{"lines":100,"branches":100,"functions":100,"check-coverage":true},"dist":{"shasum":"9c8f4fcee78f8e7e895f0e3d6adb53bd015e1a53","tarball":"https://registry.npmjs.org/unified/-/unified-7.0.0.tgz","fileCount":4,"integrity":"sha512-j+Sm7upmmt3RXPBeA+KFGYBlHBxClnby2DtxezFKwMfhWTAklY4WbEdhwRo6c6GpuHdi04YDsyPKY/kh5a/xnQ==","signatures":[{"sig":"MEQCID5wWaZyzbuQfWliUeyjyDLxG23KvZr+OVS86LQCC3cDAiBZukPnmhizga7fpyNonHnOTyhGoa+KHjIK4sTxv5eNjg==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":43258,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJa9EbLCRA9TVsSAnZWagAAcJwP/3U93mZuHzYbICVYY/bi\neEqMIyF7h1CHIcTFh3+k3JErnoj3e+nd1Z8SVqdUKAr4++tG4SFfd+IPEweB\n9Y0pTY78h5BHgss5ki0YxuQ0LAeL+sXy1Bq6I6LfDL/dtepD9hPzDCiU1Q+U\nsgbasHYJ6aK42f7KP7fepddFSxp/gYkKOZVA97PLeohr1oSxSR8/BGKHkWPU\n28GX4PSyRDldSlzKjDJ7KUrWYir1NOPa/my9gY5OkQIVHSunMnlied6z88Rl\nPVixvp6NjhACHIYT0UXQ7PoiHi+fTVyNUThjHjrOMXSuVOoWZrieblKo/19W\nS9ITvaTqPJf1k499DEkEq522sOBqsIV3b4nQroVULTwHRM0zt0LyWsTFgQH0\nv3Z8ZYg921fh8UAhMaTIKI/qcYgzrf42MIizNYyMiMa5fRiBNPISTkS+WlXQ\niXEi95fUeeY8Im6DgTkMifBlZEP/F81sz6IsW5ttfMs+hZzV2Nok+WpsRWoF\nbb78hPnPXiluD3VvtDvbYDb3Wi9WN+qDL41DybyYreRadiZm/57rj0hycEC9\nD6MVmhCc+wNX0woDp3d0BCJe+0H3qYTzEpbF1Ayhs+VMw8RVTQkMeW/iaF9x\n1rb1dhdxltmXzSiW7k8V5jNyIOV16Ylvf5SBy8pgAayayxWXdKGFvWDixd33\nJVJS\r\n=pRjX\r\n-----END PGP SIGNATURE-----\r\n"},"files":["index.js","lib"],"gitHead":"303eecbe4bf3d0301acfa282ca0acac8ebb161dd","scripts":{"test":"npm run format && npm run build && npm run test-coverage","build":"npm run build-bundle && npm run build-mangle","format":"remark . -qfo && prettier --write '**/*.js' && xo --fix","test-api":"node test","build-bundle":"browserify index.js -s unified > unified.js","build-mangle":"esmangle unified.js > unified.min.js","test-coverage":"nyc --reporter lcov tape test"},"_npmUser":{"name":"wooorm","email":"tituswormer@gmail.com"},"prettier":{"semi":false,"useTabs":false,"tabWidth":2,"singleQuote":true,"trailingComma":"none","bracketSpacing":false},"repository":{"url":"git+https://github.com/unifiedjs/unified.git","type":"git"},"_npmVersion":"6.0.0","description":"Pluggable text processing interface","directories":{},"_nodeVersion":"10.0.0","dependencies":{"bail":"^1.0.0","vfile":"^3.0.0","extend":"^3.0.0","trough":"^1.0.0","x-is-string":"^0.1.0","is-plain-obj":"^1.1.0"},"remarkConfig":{"plugins":["preset-wooorm"]},"_hasShrinkwrap":false,"devDependencies":{"xo":"^0.21.0","nyc":"^11.0.0","tape":"^4.4.0","esmangle":"^1.0.0","prettier":"^1.12.1","browserify":"^16.0.0","remark-cli":"^5.0.0","remark-preset-wooorm":"^4.0.0"},"_npmOperationalInternal":{"tmp":"tmp/unified_7.0.0_1525958344492_0.4413807290278833","host":"s3://npm-registry-packages"}},"7.0.1":{"name":"unified","version":"7.0.1","keywords":["process","parse","transform","compile","stringify","rehype","retext","remark"],"author":{"url":"https://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"},"license":"MIT","_id":"unified@7.0.1","maintainers":[{"name":"wooorm","email":"tituswormer@gmail.com"}],"contributors":[{"url":"https://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"}],"homepage":"http://unified.js.org","bugs":{"url":"https://github.com/unifiedjs/unified/issues"},"xo":{"rules":{"no-var":"off","guard-for-in":"off","object-shorthand":"off","prefer-arrow-callback":"off","unicorn/prefer-type-error":"off"},"esnext":false,"ignores":["unified.js"],"prettier":true},"nyc":{"lines":100,"branches":100,"functions":100,"check-coverage":true},"dist":{"shasum":"d211788b1eed5719864272b21c70ea6c6e73f850","tarball":"https://registry.npmjs.org/unified/-/unified-7.0.1.tgz","fileCount":5,"integrity":"sha512-8bUzPn/gVVkLgZKKjmGMjFDi7tg/y+KmGcvbzdvkIP+9q77AZvg7u1jNLKlsXr6rrOzppFWzNpduumn8jLKOsg==","signatures":[{"sig":"MEQCICc08SJsn1vCfmbcPv7WONaDGY+MCW7yyV8E5f93mIlhAiAfxiPlGfVXprdpkFjPt5iSrFdB9BxM0Gfg6CtPsCP80g==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":43540,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb3I0JCRA9TVsSAnZWagAAXnUQAI2DU+zWMgHuNpGW90Kd\nw9na0cERsm+Opmdlx9QzB/hFDvW4pU/s4G1We6EDOt7QmEkoY7dGhlqWFmFY\n4CPn7EDBQnOQSAg4i/RNMHL2M4MyKzYbdA10AnAIgHHBwvGsU8F/ybYDDiWA\nj3gfStXsa/tiSvmsWc3AcZbxV8arkXFVrN9TarTetFtIJzpGH4Zy8lHio9pc\njMAcA6lAM7tDln1aA3IgthsgY363KtvdhG9HvLLKdyiefNUcAxL6z2eEw3wk\nUpkacMiGzoNSrAk/EB9dxE80yIBOZ1UCbfxe+km03hdc2h8MrbQ3r3QJ+MQH\nCHJkuZMd7n512Isxck0byCJ/IGtog9DozCgVcaGYGZip6MT84ovlKEc0mQej\nQiRBX+WUxTUhugpMDxDOKjwys3kDiM7mYmWWWXoFgS3dSgP6/6A+KwFXSo57\nhBB2Zopcr0+SUepH8gFY7jifsGD7gtrvbu7aCXTPkfV3qPLMH9y8hFE4t5+6\nSWFytC4zGj1nnF7uOYejQH1wY0v4ywL4s3uLg9xWxEJPBmbW0zkfyLbdA1xN\n6UG9SuivMFwXhSf0KGyV1wP11WgEM+AArEdwyU5JZvyaxB+R3HDf75ZHHXu3\nEQW0GmlLUysK2jbJASUpbV8WZG/sVWeXg+nLQYkjU7+edOxCfOal9Xx7D8MT\nH4Q2\r\n=QdwM\r\n-----END PGP SIGNATURE-----\r\n"},"gitHead":"e0705f4e63cbc22810ab24033ee9c9c4a0b899fc","scripts":{"test":"npm run format && npm run build && npm run test-coverage","build":"npm run build-bundle && npm run build-mangle","format":"remark . -qfo && prettier --write '**/*.js' && xo --fix","test-api":"node test","build-bundle":"browserify index.js -s unified > unified.js","build-mangle":"esmangle unified.js > unified.min.js","test-coverage":"nyc --reporter lcov tape test"},"_npmUser":{"name":"wooorm","email":"tituswormer@gmail.com"},"prettier":{"semi":false,"useTabs":false,"tabWidth":2,"singleQuote":true,"trailingComma":"none","bracketSpacing":false},"repository":{"url":"git+https://github.com/unifiedjs/unified.git","type":"git"},"_npmVersion":"6.4.1","description":"Pluggable text processing interface","directories":{},"_nodeVersion":"11.0.0","dependencies":{"bail":"^1.0.0","vfile":"^3.0.0","extend":"^3.0.0","trough":"^1.0.0","x-is-string":"^0.1.0","is-plain-obj":"^1.1.0"},"remarkConfig":{"plugins":["preset-wooorm"]},"_hasShrinkwrap":false,"devDependencies":{"xo":"^0.23.0","nyc":"^13.0.0","tape":"^4.4.0","esmangle":"^1.0.0","prettier":"^1.12.1","browserify":"^16.0.0","remark-cli":"^6.0.0","remark-preset-wooorm":"^4.0.0"},"_npmOperationalInternal":{"tmp":"tmp/unified_7.0.1_1541180680746_0.19986351935466384","host":"s3://npm-registry-packages"}},"7.0.2":{"name":"unified","version":"7.0.2","keywords":["process","parse","transform","compile","stringify","rehype","retext","remark"],"author":{"url":"https://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"},"license":"MIT","_id":"unified@7.0.2","maintainers":[{"name":"wooorm","email":"tituswormer@gmail.com"}],"contributors":[{"url":"https://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"}],"homepage":"https://unified.js.org","bugs":{"url":"https://github.com/unifiedjs/unified/issues"},"xo":{"rules":{"no-var":"off","guard-for-in":"off","object-shorthand":"off","prefer-arrow-callback":"off","unicorn/prefer-type-error":"off"},"esnext":false,"ignores":["unified.js"],"prettier":true},"nyc":{"lines":100,"branches":100,"functions":100,"check-coverage":true},"dist":{"shasum":"16aa2748a7c936b80846cc69c580cd5ebd844532","tarball":"https://registry.npmjs.org/unified/-/unified-7.0.2.tgz","fileCount":5,"integrity":"sha512-H7HiczCdNcPrqy4meJPtlJSch9+hm6GXLQ9FFLOUiFI1DIUbjvBhMKJtQ7YCaBhEPVXZwwqNyiot9xBUEtmlbg==","signatures":[{"sig":"MEQCID0yQweflKIVyahQupy9N4keC03Ln2aQHqXYBAjhka6EAiA98AKPDrunAXNxcp1nLRBlWGJ7ee8XG/uZlAH91XlX1g==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":45843,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb7T0ACRA9TVsSAnZWagAA878P/23p64YaVjlSlifPesDW\nj0OVdXHe+BrOVwRmtJQ0m8JBuxKunSue1icXEtAj9ho6oJKd21qOzJzjvA6o\ne96pFrVsirNkbl4mIh/Eiz5D+y4lMq+muo/krse7fsSv4ChbZih9iH1Zlf+1\n93kIhnWvzYiVFORkXjpolboDDtqZNh3AxsazXVBCoSqKi4NhJaI+O1Ojz2uA\nmpFiv6akGYHmnMBcQBdeUGPkvjdZOFmHhNdr5ViM9r44q7iQEdmdJFWc73R5\nhLKbi77oewhec2Gvs9rQ+SMjaIL6NTM416vwuLsZ41akv/Wwzq40gUsK4YX8\naB4hq3yBofBnwCKY9b354DOMZohh2PfS56+95vjlIO/Skdgsv5CK9aIiYGLZ\nGRFrCqQKGtUC51q5QRQzcO2qlkSnDisfn/jM55rarWB9ZX1E7iS8ZEkdZpag\nDq2IpikTImL1Sn3mCJXzqyc6MS4/95X1ZdthU0Uen3PQWSjrOComM/VrOowt\nquL5HMBi/NGFyqfFxQQBGFVrNEcssKslUTnc6sL5nNddz53Wz09GfrFfPAFv\nXsGV/H6X3jpQhXfO3gPbQE1TnmRU1p9I+fzBWTwEui44BigLMEcxQZ4seVxf\n0GVojUZN/QHyLtGTDq44adFkmu1z4nuN0VXjOPJB6u67mWrCCrRmPGvBq5aX\nSu/D\r\n=NB+H\r\n-----END PGP SIGNATURE-----\r\n"},"gitHead":"00e72c80739cf1467e81b4394af95e593df8ba08","scripts":{"test":"npm run format && npm run build && npm run test-coverage","build":"npm run build-bundle && npm run build-mangle","format":"remark . -qfo && prettier --write '**/*.js' && xo --fix","test-api":"node test","build-bundle":"browserify index.js -s unified > unified.js","build-mangle":"esmangle unified.js > unified.min.js","test-coverage":"nyc --reporter lcov tape test"},"_npmUser":{"name":"wooorm","email":"tituswormer@gmail.com"},"prettier":{"semi":false,"useTabs":false,"tabWidth":2,"singleQuote":true,"trailingComma":"none","bracketSpacing":false},"collective":{"url":"https://opencollective.com/unified","type":"opencollective"},"repository":{"url":"git+https://github.com/unifiedjs/unified.git","type":"git"},"_npmVersion":"6.4.1","description":"Pluggable text processing interface","directories":{},"_nodeVersion":"11.0.0","dependencies":{"bail":"^1.0.0","vfile":"^3.0.0","extend":"^3.0.0","trough":"^1.0.0","x-is-string":"^0.1.0","is-plain-obj":"^1.1.0"},"remarkConfig":{"plugins":["preset-wooorm"]},"_hasShrinkwrap":false,"devDependencies":{"xo":"^0.23.0","nyc":"^13.0.0","tape":"^4.4.0","esmangle":"^1.0.0","prettier":"^1.12.1","browserify":"^16.0.0","remark-cli":"^6.0.0","remark-preset-wooorm":"^4.0.0"},"_npmOperationalInternal":{"tmp":"tmp/unified_7.0.2_1542274303575_0.27653996967782013","host":"s3://npm-registry-packages"}},"7.1.0":{"name":"unified","version":"7.1.0","keywords":["process","parse","transform","compile","stringify","rehype","retext","remark"],"author":{"url":"https://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"},"license":"MIT","_id":"unified@7.1.0","maintainers":[{"name":"wooorm","email":"tituswormer@gmail.com"}],"contributors":[{"url":"https://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"}],"homepage":"https://unified.js.org","bugs":{"url":"https://github.com/unifiedjs/unified/issues"},"xo":{"rules":{"no-var":"off","guard-for-in":"off","object-shorthand":"off","prefer-arrow-callback":"off","unicorn/prefer-type-error":"off"},"esnext":false,"ignores":["unified.js"],"prettier":true},"nyc":{"lines":100,"branches":100,"functions":100,"check-coverage":true},"dist":{"shasum":"5032f1c1ee3364bd09da12e27fdd4a7553c7be13","tarball":"https://registry.npmjs.org/unified/-/unified-7.1.0.tgz","fileCount":6,"integrity":"sha512-lbk82UOIGuCEsZhPj8rNAkXSDXd6p0QLzIuSsCdxrqnqU56St4eyOB+AlXsVgVeRmetPTYydIuvFfpDIed8mqw==","signatures":[{"sig":"MEQCIH5hjIPIXB9XAeS/RF9/1yogLi8Uzi6VwMvABy6/zfCuAiAQiG3vvofv5p+1FFe/xf87wYwxyt1rxur6w8p3orhB+Q==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":55033,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcEiC2CRA9TVsSAnZWagAAXjUP/AhdfVSIq/fDe47zzszI\nKDTitMhHZeTCRl0SrvZFXCrwkS3F4HrjZPOHW0C32YiGYTseLU558fIufLZT\nrzcva3KbgVO5dFm5HHSNTQ/E7MK2ECg9SArufT+jCXQQPi9LJsHR7SM4N5xa\nJVd5OuVouhSh7XfSMkSq3rlVsQspvYs1dOhdWzaBgewdBCyqe30GvckXRh4Q\nHb5lGT3qB5AmcZJo+5cFWkm7LjmxqXoQr1DVL/Y7ChwdYo0NDHCjbNg12zKN\n75m0u3oFdzSAjP+gpIffRMMcGzzkVLWEGrvC+6pbmEvOl5TKPMcVpvl1Zrbz\nv5WB5mShrEdfd5Loc1Wv7to7+ZW5SJZmYI7JMFtS+F3e8yFsO46+11Hnkui4\nlQ6XCT9hCqytgt3HC6JwIurmA7sWg3lyZmjAGsAFuJD6uyXX60Lvyg0s7xVj\nYLYFRQQlfxIqGNJh+ZgyvKO1N2pO819ZDv1lMTIrhhJCXsu6Q6h/CRlyjbHz\nz1Pk1aG1itXpqN1FfjeNEIMnnJ8FX4aM017OP97yEcCoCg3slsWeTmxlMYyQ\n97nsw5TSf1AdjBGo9NfnVvWSMbLgsa5TNz7rrgYScNX5LqbJFIZlgU/9+Kdm\nRZdIDLqjA5V6oYn4X18j8utGhajBxcEF5utx3Yik4x7sfuXjQb6mqhN+0kH0\nd/Rw\r\n=uDd1\r\n-----END PGP SIGNATURE-----\r\n"},"types":"types/index.d.ts","gitHead":"0dc92d6397a7fbbe70a93475db1bd585e12d1845","scripts":{"test":"npm run format && npm run build && npm run test-coverage && npm run test-types","build":"npm run build-bundle && npm run build-mangle","format":"remark . -qfo && prettier --write '**/{*.js,*.ts}' && xo --fix","test-api":"node test","test-types":"dtslint types","build-bundle":"browserify index.js -s unified > unified.js","build-mangle":"esmangle unified.js > unified.min.js","test-coverage":"nyc --reporter lcov tape test"},"_npmUser":{"name":"wooorm","email":"tituswormer@gmail.com"},"prettier":{"semi":false,"useTabs":false,"tabWidth":2,"singleQuote":true,"trailingComma":"none","bracketSpacing":false},"collective":{"url":"https://opencollective.com/unified","type":"opencollective"},"repository":{"url":"git+https://github.com/unifiedjs/unified.git","type":"git"},"_npmVersion":"6.5.0","description":"Pluggable text processing interface","directories":{},"_nodeVersion":"11.0.0","dependencies":{"bail":"^1.0.0","vfile":"^3.0.0","extend":"^3.0.0","trough":"^1.0.0","x-is-string":"^0.1.0","@types/unist":"^2.0.0","@types/vfile":"^3.0.0","is-plain-obj":"^1.1.0"},"remarkConfig":{"plugins":["preset-wooorm"]},"_hasShrinkwrap":false,"devDependencies":{"xo":"^0.23.0","nyc":"^13.0.0","tape":"^4.4.0","dtslint":"^0.4.1","esmangle":"^1.0.0","prettier":"^1.12.1","browserify":"^16.0.0","remark-cli":"^6.0.0","typescript":"^3.2.2","remark-preset-wooorm":"^4.0.0"},"_npmOperationalInternal":{"tmp":"tmp/unified_7.1.0_1544691893471_0.9055581242393687","host":"s3://npm-registry-packages"}},"8.0.0":{"name":"unified","version":"8.0.0","keywords":["process","parse","transform","compile","stringify","rehype","retext","remark"],"author":{"url":"https://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"},"license":"MIT","_id":"unified@8.0.0","maintainers":[{"name":"wooorm","email":"tituswormer@gmail.com"}],"contributors":[{"url":"https://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"},{"name":"Junyoung Choi","email":"fluke8259@gmail.com"},{"name":"Hernan Rajchert","email":"hrajchert@gmail.com"},{"name":"Christian Murphy","email":"christian.murphy.42@gmail.com"},{"name":"Vse Mozhet Byt","email":"vsemozhetbyt@gmail.com"},{"name":"Richard Littauer","email":"richard.littauer@gmail.com"}],"homepage":"https://unified.js.org","bugs":{"url":"https://github.com/unifiedjs/unified/issues"},"xo":{"rules":{"guard-for-in":"off","unicorn/prefer-type-error":"off"},"esnext":false,"ignores":["unified.js"],"prettier":true},"nyc":{"lines":100,"branches":100,"functions":100,"check-coverage":true},"dist":{"shasum":"5a4e4ff1a1dc020003a4aba6cb35764c03997106","tarball":"https://registry.npmjs.org/unified/-/unified-8.0.0.tgz","fileCount":6,"integrity":"sha512-g6muNxZsX8ROcST/iuFdi20Poio+Z3dGc0XFPfxh6cfqu92LN6LlX2RuGYEYHhu+qRPIl99sC32eMOyJWc9L6Q==","signatures":[{"sig":"MEUCIQD3mkGF4u+P8nrxNRWW9xeQmZcbrLhbo7ZiHrQP4D8bIAIgPnd8dGJpX0AYjZOiD/J9T6Ekv34FAiTtWDHARtL+MAk=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":59409,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdEkEUCRA9TVsSAnZWagAA2w4P/1XAU7DIjtG6zoFDCcT+\nbTahljBNq5OEKR0u3CvFWtrjjk9ahmqjCtCniLkcU1jvAiRgZuAP7lZKloSY\nB8nwjBSxsZgcoPq6tmyho7Opa92t8tMdZQxXtD3IHqr40lgph/mR9jbbDplO\nrHw5LFMhNPIBx1Rz8+aYdYtgbX04A7DtuBQ0WeotoNvUyl+l0bJJDlUHbOoy\n9eZ6TS+DMuyj2cF4YL4A87+VtXgy6Y19pVH9xc0YFo6UpNa4Uls10V/OUqMr\nlvU6QvFdp1xRPVM6ltt7bblBtEYoV/L6ew0k7W00bdx1jly9t0kLcCubJ9wT\ndC0qLDiNmuANszoEA87186UKq4qBepuRH+6Q5W2/n4Sdt9lD/k+1xokykLIc\nBdQg0eUZkgMpGJTgFK2s2tHK9495GSNWWGH3bbNbFH53W5GH1ou6m7epFWxs\n4pg/fUbxgRuPGq2UD8E4zlN/zrdrVH+zpLsN2d2CG0KHBPAZrZDWXTs0cHbs\n2ExgYZ9dSajRYB1wVUZQovpAyqNC2ja0sTFvtJT1lv8b09cBf2ewUo5cEuT2\nXP5/gr8jzkp4fpihs5zqUSo/pNusc8yW+xzNseT/ttceDhiF4wV1yLC0nd6e\npE/Okfb31N2kaSi8R3oWwUtwZz/sZgRkdeXeozOOpeEyNATnlYnOUTh1d72R\nsHoe\r\n=SUq3\r\n-----END PGP SIGNATURE-----\r\n"},"types":"types/index.d.ts","gitHead":"6a7ad18cafbd8594000d98f17afd2f5381425be9","scripts":{"test":"npm run format && npm run build && npm run test-coverage && npm run test-types","build":"npm run build-bundle && npm run build-mangle","format":"remark . -qfo && prettier --write \"**/{*.js,*.ts}\" && xo --fix","test-api":"node test","test-types":"dtslint types","build-bundle":"browserify index.js -s unified -o unified.js","build-mangle":"browserify index.js -s unified -p tinyify -o unified.min.js","test-coverage":"nyc --reporter lcov tape test"},"_npmUser":{"name":"wooorm","email":"tituswormer@gmail.com"},"prettier":{"semi":false,"useTabs":false,"tabWidth":2,"singleQuote":true,"trailingComma":"none","bracketSpacing":false},"collective":{"url":"https://opencollective.com/unified","type":"opencollective"},"repository":{"url":"git+https://github.com/unifiedjs/unified.git","type":"git"},"_npmVersion":"6.9.0","description":"Interface for processing text using syntax trees","directories":{},"_nodeVersion":"12.2.0","dependencies":{"bail":"^1.0.0","vfile":"^4.0.0","extend":"^3.0.0","trough":"^1.0.0","is-plain-obj":"^2.0.0"},"remarkConfig":{"plugins":["preset-wooorm"]},"_hasShrinkwrap":false,"devDependencies":{"xo":"^0.24.0","nyc":"^14.0.0","tape":"^4.0.0","dtslint":"^0.8.0","tinyify":"^2.5.1","prettier":"^1.0.0","browserify":"^16.0.0","remark-cli":"^6.0.0","typescript":"^3.0.0","@types/unist":"^2.0.0","@types/vfile":"^3.0.0","remark-preset-wooorm":"^5.0.0"},"_npmOperationalInternal":{"tmp":"tmp/unified_8.0.0_1561477394887_0.22594336257821412","host":"s3://npm-registry-packages"}},"8.0.1":{"name":"unified","version":"8.0.1","keywords":["process","parse","transform","compile","stringify","rehype","retext","remark"],"author":{"url":"https://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"},"license":"MIT","_id":"unified@8.0.1","maintainers":[{"name":"wooorm","email":"tituswormer@gmail.com"}],"contributors":[{"url":"https://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"},{"name":"Junyoung Choi","email":"fluke8259@gmail.com"},{"name":"Hernan Rajchert","email":"hrajchert@gmail.com"},{"name":"Christian Murphy","email":"christian.murphy.42@gmail.com"},{"name":"Vse Mozhet Byt","email":"vsemozhetbyt@gmail.com"},{"name":"Richard Littauer","email":"richard.littauer@gmail.com"}],"homepage":"https://unified.js.org","bugs":{"url":"https://github.com/unifiedjs/unified/issues"},"xo":{"rules":{"guard-for-in":"off","unicorn/prefer-type-error":"off"},"esnext":false,"ignores":["unified.js"],"prettier":true},"nyc":{"lines":100,"branches":100,"functions":100,"check-coverage":true},"dist":{"shasum":"ec19e5dc142cebe0bacee680ce990744a90a44eb","tarball":"https://registry.npmjs.org/unified/-/unified-8.0.1.tgz","fileCount":6,"integrity":"sha512-BdrBbQFzrIYQLulDaVUB+GESl2U1zdggyfy/NJA5z3/xXAnTmkANgTOAXf/O32PDJwUsWFzDmh7ivliUOl/3lA==","signatures":[{"sig":"MEYCIQCBvVp1Kc8Cr1xrX+KZdTTcm5vPnc+jP4MIg8qXsSkJ7QIhAK5Kf488Szp2AZD/mJALzJuwEjN6JWJ2BWVqyR24FBOR","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":59661,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdGxvXCRA9TVsSAnZWagAAB0wP/jrgcMJgEhmFIIuW5Wla\nS1z1mAOpbFLvA6Sm0csZJlzdZ29AxcSjKxQSTEKksjh9S2iJnPxXOyxdxhMq\nCE3mib4dmNxEhhd2b5CgxHAqHruDQ2+xbyiiukkCXLz5WFD+ndMLFc6Rmpuk\nASw8zBae6QMzQSXRy63HWwissXMD+NU/3rQtXadC282zEA1hT9TUrRFYxWda\ny1mg7F+zcVpCBT6kGBp/TTACixVL7cIL5H5IwRtVOrKZUlF/D1NlMtYKMZM2\n1CSHmcfehXZl92slenAwLjQiIjYv2bxNFdAQKreKpLIwVkLTgf7zZq5ymPtO\nIaJhBWZ3LHyn7KhkhkxoTIo1LP/BdkzpoS8DYRj73zHbT2yK3yzyjo/eWnt3\nf1Pu6lZejCzCOwE3LB+5dcnYJHlWRkOM9HiK+o4RWPoSaJZeKnUfTz7M5eAZ\nrXLBRL/kOQ2P42NF3r80IEuRYBrNBO+ouF880/u1IYa5U6X4fL3GH6lm0fst\neBa30neP4jUekY0eRlI6DCVjauFgehD/gj29X2/nL79kiUVPc45p1HvOH54D\nOvxvK6PAUF1oyjLiB15mZ91Pt48OcN1lZSyxlMI2SFyTmnB136+u+UK6StmY\n6cSa0/VmWbRlFXWU7+OLHFEeu6nLEevPbl2aLbhTqBKFvEfCl5tv03B+B6IC\nLvca\r\n=5+RM\r\n-----END PGP SIGNATURE-----\r\n"},"types":"types/index.d.ts","gitHead":"38d2c8211e240a64891aea871caae376428d0200","scripts":{"test":"npm run format && npm run build && npm run test-coverage && npm run test-types","build":"npm run build-bundle && npm run build-mangle","format":"remark . -qfo && prettier --write \"**/{*.js,*.ts}\" && xo --fix","test-api":"node test","test-types":"dtslint types","build-bundle":"browserify index.js -s unified -o unified.js","build-mangle":"browserify index.js -s unified -p tinyify -o unified.min.js","test-coverage":"nyc --reporter lcov tape test"},"_npmUser":{"name":"wooorm","email":"tituswormer@gmail.com"},"prettier":{"semi":false,"useTabs":false,"tabWidth":2,"singleQuote":true,"trailingComma":"none","bracketSpacing":false},"collective":{"url":"https://opencollective.com/unified","type":"opencollective"},"repository":{"url":"git+https://github.com/unifiedjs/unified.git","type":"git"},"_npmVersion":"6.9.2","description":"Interface for processing text using syntax trees","directories":{},"_nodeVersion":"12.2.0","dependencies":{"bail":"^1.0.0","vfile":"^4.0.0","extend":"^3.0.0","trough":"^1.0.0","is-plain-obj":"^2.0.0"},"remarkConfig":{"plugins":["preset-wooorm"]},"_hasShrinkwrap":false,"devDependencies":{"xo":"^0.24.0","nyc":"^14.0.0","tape":"^4.0.0","dtslint":"^0.8.0","tinyify":"^2.5.1","prettier":"^1.0.0","browserify":"^16.0.0","remark-cli":"^6.0.0","typescript":"^3.0.0","remark-preset-wooorm":"^5.0.0"},"_npmOperationalInternal":{"tmp":"tmp/unified_8.0.1_1562057687016_0.9744463118216888","host":"s3://npm-registry-packages"}},"8.1.0":{"name":"unified","version":"8.1.0","keywords":["process","parse","transform","compile","stringify","rehype","retext","remark"],"author":{"url":"https://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"},"license":"MIT","_id":"unified@8.1.0","maintainers":[{"name":"wooorm","email":"tituswormer@gmail.com"}],"contributors":[{"url":"https://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"},{"name":"Junyoung Choi","email":"fluke8259@gmail.com"},{"name":"Hernan Rajchert","email":"hrajchert@gmail.com"},{"name":"Christian Murphy","email":"christian.murphy.42@gmail.com"},{"name":"Vse Mozhet Byt","email":"vsemozhetbyt@gmail.com"},{"name":"Richard Littauer","email":"richard.littauer@gmail.com"}],"homepage":"https://unified.js.org","bugs":{"url":"https://github.com/unifiedjs/unified/issues"},"xo":{"rules":{"guard-for-in":"off","unicorn/prefer-type-error":"off"},"esnext":false,"ignores":["unified.js"],"prettier":true},"nyc":{"lines":100,"branches":100,"functions":100,"check-coverage":true},"dist":{"shasum":"377cb4a877cac22b4e718605a8f488acafd31903","tarball":"https://registry.npmjs.org/unified/-/unified-8.1.0.tgz","fileCount":6,"integrity":"sha512-0ub+YGFB/0clsmcYuGmhxyopjHRhD+z8wgOZNb4LXyKKE5xUin4ngGbXJTp8rv8TZpKJrIOjKeTUOkZi3aaR6A==","signatures":[{"sig":"MEUCIQDApiM6U5B/K/Dgq5xBS3KIprerTL/icfSvaXxmifASsQIgLkaCDmKFkg/KbeprXgONKdLDNHTDIx8yQkGpjzInlpo=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":60294,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdJvPKCRA9TVsSAnZWagAA8tsP/j64mvOr8ZzlF0/8Wsjs\nHHP9ZPxMpshY/Cq7cgP6PrF0DWC/2Hiis0H3GXBsWV2AKJT7tDTzFG2MGhpg\n0YSbVsoqZkkDatOfDwUT+vCbBpb29flXyuxVH7bM2+Qvvjv+5HoNdwairFF7\n9Z3kbWpKlTnSbuKVNqVdLNCEFke2la2XZlXm/U0yzsFeuO0iBVVRiJOQtrWr\nctPqtxOKQKwoBDWK8d7zEcGNpPaW3S5EWKZYnv4m521ySruEhdo61zAvFO1p\nC/y2lKijjB7l/NESTprWzd5f4MVd60zS8p0zlSXWJYfylKc28pLxbx+zEUiz\nkMmkVdFbx6d0V1Yazbxtz/gtrGVjSerCi70Glyr1Qqj6XQ1yq2jkjbNUwk/U\ncVSxA1ka+gLW5IpheERZbzK/GW+kresx6rqoD52fei/smQ/YZdwyRzXrnu2l\nA5Z7+Z3qd4PPm/tZvvpSCx1Hn713lOpTnbt2rWUCThCjVjd4Nhk6C9C1AWaG\nrPwAhlZZjVUInndWTd2GXhTS8hV2dlnidzOrC8Eig+A5aSDzgD0ILgDrADYN\nar/Xqpq3oHWWBJVQCybJ8RWA8Js4HNiRTWHT3zBqeAU7ksUxzqGydqS4/1eG\nK/cvDqbeA7PbGP0bcMUa5IIblyYqZdWCIM/6wJQMVz8s+PKc6X73WB6CBiN5\nhML6\r\n=FfHx\r\n-----END PGP SIGNATURE-----\r\n"},"types":"types/index.d.ts","gitHead":"55c4a38afbee5a9b4a7be848d5484b943eb6d2fc","scripts":{"test":"npm run format && npm run build && npm run test-coverage && npm run test-types","build":"npm run build-bundle && npm run build-mangle","format":"remark . -qfo && prettier --write \"**/{*.js,*.ts}\" && xo --fix","test-api":"node test","test-types":"dtslint types","build-bundle":"browserify index.js -s unified -o unified.js","build-mangle":"browserify index.js -s unified -p tinyify -o unified.min.js","test-coverage":"nyc --reporter lcov tape test"},"_npmUser":{"name":"wooorm","email":"tituswormer@gmail.com"},"prettier":{"semi":false,"useTabs":false,"tabWidth":2,"singleQuote":true,"trailingComma":"none","bracketSpacing":false},"collective":{"url":"https://opencollective.com/unified","type":"opencollective"},"repository":{"url":"git+https://github.com/unifiedjs/unified.git","type":"git"},"_npmVersion":"6.9.2","description":"Interface for processing text using syntax trees","directories":{},"_nodeVersion":"12.2.0","dependencies":{"bail":"^1.0.0","vfile":"^4.0.0","extend":"^3.0.0","trough":"^1.0.0","is-plain-obj":"^2.0.0"},"remarkConfig":{"plugins":["preset-wooorm"]},"_hasShrinkwrap":false,"devDependencies":{"xo":"^0.24.0","nyc":"^14.0.0","tape":"^4.0.0","dtslint":"^0.8.0","tinyify":"^2.5.1","prettier":"^1.0.0","browserify":"^16.0.0","remark-cli":"^6.0.0","typescript":"^3.0.0","remark-preset-wooorm":"^5.0.0"},"_npmOperationalInternal":{"tmp":"tmp/unified_8.1.0_1562833865781_0.4538045540241622","host":"s3://npm-registry-packages"}},"8.2.0":{"name":"unified","version":"8.2.0","keywords":["process","parse","transform","compile","stringify","rehype","retext","remark"],"author":{"url":"https://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"},"license":"MIT","_id":"unified@8.2.0","maintainers":[{"name":"wooorm","email":"tituswormer@gmail.com"}],"contributors":[{"url":"https://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"},{"name":"Junyoung Choi","email":"fluke8259@gmail.com"},{"name":"Hernan Rajchert","email":"hrajchert@gmail.com"},{"name":"Christian Murphy","email":"christian.murphy.42@gmail.com"},{"name":"Vse Mozhet Byt","email":"vsemozhetbyt@gmail.com"},{"name":"Richard Littauer","email":"richard.littauer@gmail.com"}],"homepage":"https://unified.js.org","bugs":{"url":"https://github.com/unifiedjs/unified/issues"},"xo":{"rules":{"guard-for-in":"off","unicorn/prefer-type-error":"off"},"esnext":false,"ignores":["unified.js"],"prettier":true},"nyc":{"lines":100,"branches":100,"functions":100,"check-coverage":true},"dist":{"shasum":"cbff446d96c222454681a7bbd440533d78f104ae","tarball":"https://registry.npmjs.org/unified/-/unified-8.2.0.tgz","fileCount":6,"integrity":"sha512-qehI6AV1YbXpria9mA9oanrlRxLi/AE99cBQZsqiIeRzBi8nOBqehRjo6QTFmxQAyoyr7jpAhAPeWaGVJcykLg==","signatures":[{"sig":"MEUCIB9TCbUraxbvbWL41lJ5YXY3b80Fwc+bbl4Zf25ompisAiEA4a3JZJG8xAGwkarA5qVkT8e1xBHw0qq9mtB5nj+MTtQ=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":64917,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdKklZCRA9TVsSAnZWagAAONAP/is+caxk5d6aRHtisGGK\nsyw5NB/8txVTVrpHshrevdOzJmVpzZhOpzdjJ+3SMWG2qrCTR9sbRQB5l/TX\nwhu09T8MxM7/hUeyZIf/hvg3Ex8QNPh0xbikN3bX1Pc60/Cs1JrvKAlg5MxT\nr7XvwHI65tzczxJg6KoUQQvLdeCTIW5V+wpUNNQxUuDItTVTTde3/Jpn2BRW\n9XVDkEw4VR1zBskopmrDHtRavlZPKAnimzwAVllCPn2rbu7tMM5e/HY1+xOR\nIpWGc67ozoaqka1qAqhSE0AxGTXKvhkcLNe9R1oOGnMrxgnZgAKJbnl4nhSR\npgJqUiI0l6RRm7/uVjF3Rr8MevQMsb3C/zqluQrRZkGy3Kh2dRgr3BPJy2h9\ne9rbHKwOUdDTEl0FZZ2O8sso4dvWToHreLrsvVoLuGTMkwXX/ubD6Asj79er\nHBXzfVIemngPaZNgW2enw5CEO3lsCeTm/3SeX9AaJxIbDcVpTlu/cH2LIs8g\n5mjqhrrKYSybzKdyU+Atj5/B/vejSsf/yJDIFLX2fOB03v73XQ4zfwNzLG8d\nXZkOch6k+7IBAJlgxIulWTwu+iz8mh1S4RA9SCM43Oqe/ULsvN+1wQVjcUbA\nBk16XyrCxwgdBYWNd87ePMZaPF5zvgTdp0ruD25SBkBvbflz/vWGSoZJ3bbL\nqjUb\r\n=aM5w\r\n-----END PGP SIGNATURE-----\r\n"},"types":"types/index.d.ts","gitHead":"8c0285c333869df1d8f2f4c6dba082c77b06cb97","scripts":{"test":"npm run format && npm run build && npm run test-coverage && npm run test-types","build":"npm run build-bundle && npm run build-mangle","format":"remark . -qfo && prettier --write \"**/{*.js,*.ts}\" && xo --fix","test-api":"node test","test-types":"dtslint types","build-bundle":"browserify index.js -s unified -o unified.js","build-mangle":"browserify index.js -s unified -p tinyify -o unified.min.js","test-coverage":"nyc --reporter lcov tape test"},"_npmUser":{"name":"wooorm","email":"tituswormer@gmail.com"},"prettier":{"semi":false,"useTabs":false,"tabWidth":2,"singleQuote":true,"trailingComma":"none","bracketSpacing":false},"collective":{"url":"https://opencollective.com/unified","type":"opencollective"},"repository":{"url":"git+https://github.com/unifiedjs/unified.git","type":"git"},"_npmVersion":"6.10.1","description":"Interface for processing text using syntax trees","directories":{},"_nodeVersion":"12.2.0","dependencies":{"bail":"^1.0.0","vfile":"^4.0.0","extend":"^3.0.0","trough":"^1.0.0","is-plain-obj":"^2.0.0"},"remarkConfig":{"plugins":["preset-wooorm"]},"_hasShrinkwrap":false,"devDependencies":{"xo":"^0.24.0","nyc":"^14.0.0","tape":"^4.0.0","dtslint":"^0.8.0","tinyify":"^2.5.1","prettier":"^1.0.0","browserify":"^16.0.0","remark-cli":"^6.0.0","typescript":"^3.0.0","remark-preset-wooorm":"^5.0.0"},"_npmOperationalInternal":{"tmp":"tmp/unified_8.2.0_1563052376633_0.9913122293679231","host":"s3://npm-registry-packages"}},"8.3.0":{"name":"unified","version":"8.3.0","keywords":["process","parse","transform","compile","stringify","rehype","retext","remark"],"author":{"url":"https://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"},"license":"MIT","_id":"unified@8.3.0","maintainers":[{"name":"wooorm","email":"tituswormer@gmail.com"}],"contributors":[{"url":"https://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"},{"name":"Junyoung Choi","email":"fluke8259@gmail.com"},{"name":"Hernan Rajchert","email":"hrajchert@gmail.com"},{"name":"Christian Murphy","email":"christian.murphy.42@gmail.com"},{"name":"Vse Mozhet Byt","email":"vsemozhetbyt@gmail.com"},{"name":"Richard Littauer","email":"richard.littauer@gmail.com"}],"homepage":"https://unified.js.org","bugs":{"url":"https://github.com/unifiedjs/unified/issues"},"xo":{"rules":{"guard-for-in":"off","unicorn/prefer-type-error":"off"},"esnext":false,"ignores":["unified.js"],"prettier":true},"nyc":{"lines":100,"branches":100,"functions":100,"check-coverage":true},"dist":{"shasum":"0d84697caef76a656cabb548aed8bbf00b1fc357","tarball":"https://registry.npmjs.org/unified/-/unified-8.3.0.tgz","fileCount":6,"integrity":"sha512-wffo8tllGR4GojbRKCTa0t6RQFUKz8nTOJGAiTcWZQr+0M6x1QLisCKcTGzt6NGq6EHCEdZIJP3sOvTtRkTPkQ==","signatures":[{"sig":"MEUCIE3lME78z4vd0hwUbkR5iJVsGjH6gnzaQwE4lfYjRcSbAiEApZo1ykuk7CxjGeHxjtXUyzfHH+09bUY/paGZ39bzfvw=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":64664,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdLLv0CRA9TVsSAnZWagAAQXcP/25sNxcZGBBhqzFJ7vWk\nbwkVAu/TPUfXzdTJVGUswPamAZ4sUmKGLluVZNCTUqM1IRdDj3/2+Xzlq13S\nmR/rvmn8utjK03Azq/C45yJF6wP+ez1yZe0ilFv7pK5hOAENsct2U/WXvEMH\n9zLAyH/5X7hDLjZZPBGOAtuqS/XIhrfBgPUCUPP89t4VqwF2Vw0GDA0r/arB\n8PWmOtntIi8YOS7/hKeMKinb24biLLCeu5fiWEDORJ3nlov188+eWxrk3Yj1\nG+Jf3fGnOxE+bmje9GzO7FmWEK33vclkKimii4dlcjuowM8K0sichbamymby\nB22iUhsJGH4DPnb6NtZQqk/a0cnys1AbrGN1pMp3wCu4oJ4JV/FN/ZHPjLRN\n+P11Os3gmAldCnVFf0Zf+aAJ9YYcJf74ZGYDXu5l3OG1iKH9KZdVuM4ZGV/0\nbBkVe22JuR/ejmug0+s8L7NIpRYC1HBmCXChbLB/IbI6TEyPaHmPY9XWLFto\nzkMVUuc+mBdO5cF8qykH/tqcCeei6ir8gYRvLmNxRLU7JjtWtCYM2vdbD+bN\n/+plirC/oVOXdBGDt9aUvTZ80s2G1psry/uFq8ifo2Plvuih9gN+69VghKEk\nQc+OmE2zRlzptpKbJ/keJ5OWthoNkYvX0JeTJlqbyoJFWT3464R8xVzY5qcZ\nasqS\r\n=o5hx\r\n-----END PGP SIGNATURE-----\r\n"},"types":"types/index.d.ts","gitHead":"b07233d0c32d47f4acb38cc51ca965e8157230f4","scripts":{"test":"npm run format && npm run build && npm run test-coverage && npm run test-types","build":"npm run build-bundle && npm run build-mangle","format":"remark . -qfo && prettier --write \"**/{*.js,*.ts}\" && xo --fix","test-api":"node test","test-types":"dtslint types","build-bundle":"browserify index.js -s unified -o unified.js","build-mangle":"browserify index.js -s unified -p tinyify -o unified.min.js","test-coverage":"nyc --reporter lcov tape test"},"_npmUser":{"name":"wooorm","email":"tituswormer@gmail.com"},"prettier":{"semi":false,"useTabs":false,"tabWidth":2,"singleQuote":true,"trailingComma":"none","bracketSpacing":false},"collective":{"url":"https://opencollective.com/unified","type":"opencollective"},"repository":{"url":"git+https://github.com/unifiedjs/unified.git","type":"git"},"_npmVersion":"6.10.1","description":"Interface for processing text using syntax trees","directories":{},"_nodeVersion":"12.2.0","dependencies":{"bail":"^1.0.0","vfile":"^4.0.0","extend":"^3.0.0","trough":"^1.0.0","is-plain-obj":"^2.0.0"},"remarkConfig":{"plugins":["preset-wooorm"]},"_hasShrinkwrap":false,"devDependencies":{"xo":"^0.24.0","nyc":"^14.0.0","tape":"^4.0.0","dtslint":"^0.8.0","tinyify":"^2.5.1","prettier":"^1.0.0","browserify":"^16.0.0","remark-cli":"^6.0.0","typescript":"^3.0.0","remark-preset-wooorm":"^5.0.0"},"_npmOperationalInternal":{"tmp":"tmp/unified_8.3.0_1563212787358_0.909842838916695","host":"s3://npm-registry-packages"}},"8.3.1":{"name":"unified","version":"8.3.1","keywords":["process","parse","transform","compile","stringify","rehype","retext","remark"],"author":{"url":"https://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"},"license":"MIT","_id":"unified@8.3.1","maintainers":[{"name":"wooorm","email":"tituswormer@gmail.com"}],"contributors":[{"url":"https://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"},{"name":"Junyoung Choi","email":"fluke8259@gmail.com"},{"name":"Hernan Rajchert","email":"hrajchert@gmail.com"},{"name":"Christian Murphy","email":"christian.murphy.42@gmail.com"},{"name":"Vse Mozhet Byt","email":"vsemozhetbyt@gmail.com"},{"name":"Richard Littauer","email":"richard.littauer@gmail.com"}],"homepage":"https://unified.js.org","bugs":{"url":"https://github.com/unifiedjs/unified/issues"},"xo":{"rules":{"guard-for-in":"off","unicorn/prefer-type-error":"off"},"esnext":false,"ignores":["unified.js"],"prettier":true},"nyc":{"lines":100,"branches":100,"functions":100,"check-coverage":true},"dist":{"shasum":"c4f97e09401573d0c6243788105e406af39c332d","tarball":"https://registry.npmjs.org/unified/-/unified-8.3.1.tgz","fileCount":6,"integrity":"sha512-jeEaEWmjt4zMbAcKYoQiPK7MWFgioRaKM4gFxZIV+kMBYnUbRP8g7i3GwklfJ8v/Yha66Iu0fG4P/vukap5izQ==","signatures":[{"sig":"MEYCIQCoYU7zye+S2PdCaN2Ff7jTEUPmSv8QQrTcl8DWdAvijAIhAKznsDG1DHMKmFygIR5Tpz83gFgXUkuQw8ZR5vQggfMG","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":64654,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdLYfYCRA9TVsSAnZWagAA0bsP/0aRpsubeu3sbw0gyxni\nV1X7ziiZEX6b2ecOL6P/NqulMg8HNOroQQF/p7tdckifWTuNryn+Ygk22tH9\nNttVepgDiAzvFeFO7fCP4NCHDIaM5hy4t1SyRp/fCUe5CNoDKV0fI+28z7gY\nJu3x07E7KvmVIx5qaMCG6mfZaucTMdrayfe0b0K2q95mB6WqjIK3r41cMDz8\nJ2sBH+LEybCWq+B0WgPYb/6vQ12z/98l8TIE+b4SKrttH+dIfxM4nFE0EJps\ndFwcUKVNZYrLUwE/2ko1H27eMh1/MbflVBtZSTk7E7D6wOn1zJMtNAklW8du\nbGdh71wk7AM98psukvvgmz6APC71jMVwRYeBj1qOXbmck7GrBa/HoM3bjjAb\n1qtAnNYqBfLrbooceFrE1+xMM6hHtqfDeGhY5QISuaZdKiR9omaT+KCMS5zl\nklnRfhXukDW+PnCEjhpE4fd04yiT6ui3mBhrCU1dVntO4XWIB+Q/OYFGuW0M\nz6cAz+oC7WZIWu4QGllhZKKFTu9eAou/Kk8Nx5vKOPytMsIwxKZ62qkK826X\nSSr/plNbclJIkGEUQmzEotBxoPQBRNRn5VBj4exsd0gUULnFn3nwzZ1rUubH\njAOBhvn8SI6OdZdzZh5GlmH6qfxW8ljSTTs0EKam5Oic4jyIpjhovsSTi17M\nrnVW\r\n=cGFp\r\n-----END PGP SIGNATURE-----\r\n"},"types":"types/index.d.ts","gitHead":"6c84a1f118eaed1606fa17a8d10f2bbef66d7ad3","scripts":{"test":"npm run format && npm run build && npm run test-coverage && npm run test-types","build":"npm run build-bundle && npm run build-mangle","format":"remark . -qfo && prettier --write \"**/{*.js,*.ts}\" && xo --fix","test-api":"node test","test-types":"dtslint types","build-bundle":"browserify index.js -s unified -o unified.js","build-mangle":"browserify index.js -s unified -p tinyify -o unified.min.js","test-coverage":"nyc --reporter lcov tape test"},"_npmUser":{"name":"wooorm","email":"tituswormer@gmail.com"},"prettier":{"semi":false,"useTabs":false,"tabWidth":2,"singleQuote":true,"trailingComma":"none","bracketSpacing":false},"collective":{"url":"https://opencollective.com/unified","type":"opencollective"},"repository":{"url":"git+https://github.com/unifiedjs/unified.git","type":"git"},"_npmVersion":"6.10.1","description":"Interface for processing text using syntax trees","directories":{},"_nodeVersion":"12.2.0","dependencies":{"bail":"^1.0.0","vfile":"^4.0.0","extend":"^3.0.0","trough":"^1.0.0","is-plain-obj":"^2.0.0"},"remarkConfig":{"plugins":["preset-wooorm"]},"_hasShrinkwrap":false,"devDependencies":{"xo":"^0.24.0","nyc":"^14.0.0","tape":"^4.0.0","dtslint":"^0.8.0","tinyify":"^2.5.1","prettier":"^1.0.0","browserify":"^16.0.0","remark-cli":"^6.0.0","typescript":"^3.0.0","remark-preset-wooorm":"^5.0.0"},"_npmOperationalInternal":{"tmp":"tmp/unified_8.3.1_1563264983295_0.10875184472135246","host":"s3://npm-registry-packages"}},"8.3.2":{"name":"unified","version":"8.3.2","keywords":["process","parse","transform","compile","stringify","rehype","retext","remark"],"author":{"url":"https://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"},"license":"MIT","_id":"unified@8.3.2","maintainers":[{"name":"wooorm","email":"tituswormer@gmail.com"}],"contributors":[{"url":"https://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"},{"name":"Junyoung Choi","email":"fluke8259@gmail.com"},{"name":"Hernan Rajchert","email":"hrajchert@gmail.com"},{"name":"Christian Murphy","email":"christian.murphy.42@gmail.com"},{"name":"Vse Mozhet Byt","email":"vsemozhetbyt@gmail.com"},{"name":"Richard Littauer","email":"richard.littauer@gmail.com"}],"homepage":"https://unified.js.org","bugs":{"url":"https://github.com/unifiedjs/unified/issues"},"xo":{"rules":{"guard-for-in":"off","unicorn/prefer-type-error":"off"},"esnext":false,"ignores":["unified.js"],"prettier":true},"nyc":{"lines":100,"branches":100,"functions":100,"check-coverage":true},"dist":{"shasum":"aed69d0e577d6ef27268431c63a10faef60e63ab","tarball":"https://registry.npmjs.org/unified/-/unified-8.3.2.tgz","fileCount":6,"integrity":"sha512-NDtUAXcd4c+mKppCbsZHzmhkKEQuhveZNBrFYmNgMIMk2K9bc8hmG3mLEGVtRmSNodobwyMePAnvIGVWZfPdzQ==","signatures":[{"sig":"MEQCIDpAPyF44cwQIXPDX1zz1KGQQd7cCVgC9OATpXHR22aKAiB7vaHYcEEOh1kTPlnWDwqBM+e1vJ5k3OIj6pyUEukbWA==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":65299,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdLx12CRA9TVsSAnZWagAAOOQP/2c/9UgOAIbqzBWwaNTL\no+ThxLUz2oQXxx2ve/BJzPd3us9+qOGtcUPBa+4Fhy9Z+Cjj2+gSgFI7AkIN\nXpzH4CkHh0T8k5qwLQIfYIjyulohwb6Mv4MT/AUO4JRkOJ9Htq5H+ytGd4Mc\nmP4AktiQ0Ne6qfVvwT4dJzrgFcZxrlxDG2oZQzzIjaNXyGgTm2xGD4sTXffU\nmTWII+Pjali8+plQgv8zRqVRNTQIfxJaQ7d0dKtYEizZxswT4e4hAhHZEkr7\ncZ7QZ/TKBOgXCazXydzjPpbzss27nLwxp3cUBXtGjw/wePaZJhuuh7+IUzQt\nx3+8Fh2Ii8rwbdZMwE2rIUKG60K4S5lb8fVHmIJJG55EpAkGlBcAfncA/Baw\nys2gzW0QYFhj8XkfT2zJw6OWLh9/93vBLyjR/q8Sze6mqppK0aYoksfc7I1k\nLiSYbc8e23hqBJb14Q/ZXouxkODsWbKYP3YMpPD5c3xSvY3uVAr2c3223NJn\nvQn1wvBs4xRsVZr06Mp7q5OdKsh7F8soT4uMk8VIUmOO/kqP1TpqvVFy183A\nHq2a3h/Dfm6mSKhjztBSB8OxxHKYTiMP+UKFH0kQw6ejcGkknH55Y/cW0k23\nj8TmyheIVYZddaL5ARnKvFKOucB+vJP+VD8FI9WOkUd5XC1bCzahcq5l/ML8\nlRsE\r\n=Aym8\r\n-----END PGP SIGNATURE-----\r\n"},"types":"types/index.d.ts","gitHead":"e408747ec44fb541081e020a3842212e6a60f485","scripts":{"test":"npm run format && npm run build && npm run test-coverage && npm run test-types","build":"npm run build-bundle && npm run build-mangle","format":"remark . -qfo && prettier --write \"**/{*.js,*.ts}\" && xo --fix","test-api":"node test","test-types":"dtslint types","build-bundle":"browserify index.js -s unified -o unified.js","build-mangle":"browserify index.js -s unified -p tinyify -o unified.min.js","test-coverage":"nyc --reporter lcov tape test"},"_npmUser":{"name":"wooorm","email":"tituswormer@gmail.com"},"prettier":{"semi":false,"useTabs":false,"tabWidth":2,"singleQuote":true,"trailingComma":"none","bracketSpacing":false},"collective":{"url":"https://opencollective.com/unified","type":"opencollective"},"repository":{"url":"git+https://github.com/unifiedjs/unified.git","type":"git"},"_npmVersion":"6.10.1","description":"Interface for processing text using syntax trees","directories":{},"_nodeVersion":"12.2.0","dependencies":{"bail":"^1.0.0","vfile":"^4.0.0","extend":"^3.0.0","trough":"^1.0.0","is-plain-obj":"^2.0.0"},"remarkConfig":{"plugins":["preset-wooorm"]},"_hasShrinkwrap":false,"devDependencies":{"xo":"^0.24.0","nyc":"^14.0.0","tape":"^4.0.0","dtslint":"^0.8.0","tinyify":"^2.5.1","prettier":"^1.0.0","browserify":"^16.0.0","remark-cli":"^6.0.0","typescript":"^3.0.0","remark-preset-wooorm":"^5.0.0"},"_npmOperationalInternal":{"tmp":"tmp/unified_8.3.2_1563368819516_0.4549089013627865","host":"s3://npm-registry-packages"}},"8.4.0":{"name":"unified","version":"8.4.0","keywords":["process","parse","transform","compile","stringify","rehype","retext","remark"],"author":{"url":"https://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"},"license":"MIT","_id":"unified@8.4.0","maintainers":[{"name":"wooorm","email":"tituswormer@gmail.com"}],"contributors":[{"url":"https://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"},{"name":"Junyoung Choi","email":"fluke8259@gmail.com"},{"name":"Hernan Rajchert","email":"hrajchert@gmail.com"},{"name":"Christian Murphy","email":"christian.murphy.42@gmail.com"},{"name":"Vse Mozhet Byt","email":"vsemozhetbyt@gmail.com"},{"name":"Richard Littauer","email":"richard.littauer@gmail.com"}],"homepage":"https://unifiedjs.com","bugs":{"url":"https://github.com/unifiedjs/unified/issues"},"xo":{"rules":{"guard-for-in":"off","unicorn/prefer-type-error":"off"},"esnext":false,"ignores":["unified.js"],"prettier":true},"nyc":{"lines":100,"branches":100,"functions":100,"check-coverage":true},"dist":{"shasum":"5bb8a05c2a0b9dcc56152312ad8e4578a0d90af7","tarball":"https://registry.npmjs.org/unified/-/unified-8.4.0.tgz","fileCount":6,"integrity":"sha512-hQqeCrzqqS3vk8WbvbjYgaxe9WqmZF32Y3lz/kY5A8/5RdJbxoa4yOIAYpSEvqii9n2MTI2OL1+ByoVJYLhlUg==","signatures":[{"sig":"MEQCIC7X10HEk9h70gBnKDDzgb+EHvgjMXM4POaYEc1Gk7pEAiAWdqbhSdTz8MUkPDzvEkxRQ8OK8oC46KTiEjcEAeTSZw==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":65177,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdfLEpCRA9TVsSAnZWagAAN6cP/09i/YSDo+JgrPmM8uNw\nuMsyx0EgA6KTLDCxJqTrqAK7SxhgT1trlRlcZRE0EgWOJCl6/Q5+RQlw/zIs\nDt0O7rlXBPeEQNhJFJDMCS8n0udRIe7IR29mnJvCkMPQ0IR4SqcoNnUx42bH\nGFK8alhZocUOaeHxHVw8LdS/TSlQjDi5hwvG7YWf9zJ7HZl62ALlou8e0VVV\n1sU3dwVy4wgC9qbs4caVyfGvLmXekQXl+3L+hehHbURLDhYVY0vTEjKR3TwG\noIlBICwtv6tZ0gVdMpeht6KpRWk8xH7iQKJNeinkE5a/oBj6aJZnex9Bd9Su\nrp8y3btKgBhAXa8h4omTY+PcGSB9hg5UdD/gLQJkLfw0m2tPVkUov5LSYpEm\nsQFZot+ZJb6bqgqRgxwNUut3pn7n9hm1ZzaTnc299AB4E2/Zjf3uw2aBoPTM\nNBDRdw7SqlVVYwHfToxxZCOEfaqjKCXjt9ZUOjLLhQgcEeaq/+/x+TS8yFCG\nrIX1WuTMbMcVR4udOGFc9icjnodqvsZSlxfRWHvIzc1fYBxUuVU9/so17b2o\nI7jNjRG5QTdC+bQDizlSKbTHTQ6h8dSFbnRmRcBAPW4ViV8YBg4Tqnyo9u3y\nkE9OxLl+b1DmjcPW7yaEyxZMsAoRBn33oCSrXry7d2aHJCFJ/nsw879V1N6w\nqprG\r\n=tTUT\r\n-----END PGP SIGNATURE-----\r\n"},"types":"types/index.d.ts","gitHead":"e4a909d21483d82fd144a79261f4beb7710990ff","scripts":{"test":"npm run format && npm run build && npm run test-coverage && npm run test-types","build":"npm run build-bundle && npm run build-mangle","format":"remark . -qfo && prettier --write \"**/{*.js,*.ts}\" && xo --fix","test-api":"node test","test-types":"dtslint types","build-bundle":"browserify index.js -s unified -o unified.js","build-mangle":"browserify index.js -s unified -p tinyify -o unified.min.js","test-coverage":"nyc --reporter lcov tape test"},"_npmUser":{"name":"wooorm","email":"tituswormer@gmail.com"},"prettier":{"semi":false,"useTabs":false,"tabWidth":2,"singleQuote":true,"trailingComma":"none","bracketSpacing":false},"collective":{"url":"https://opencollective.com/unified","type":"opencollective"},"repository":{"url":"git+https://github.com/unifiedjs/unified.git","type":"git"},"_npmVersion":"6.11.2","description":"Interface for processing text using syntax trees","directories":{},"_nodeVersion":"12.2.0","dependencies":{"bail":"^1.0.0","vfile":"^4.0.0","extend":"^3.0.0","trough":"^1.0.0","is-plain-obj":"^2.0.0"},"remarkConfig":{"plugins":["preset-wooorm"]},"_hasShrinkwrap":false,"devDependencies":{"xo":"^0.24.0","nyc":"^14.0.0","tape":"^4.0.0","dtslint":"^0.9.0","tinyify":"^2.5.1","prettier":"^1.0.0","browserify":"^16.0.0","remark-cli":"^7.0.0","typescript":"^3.0.0","remark-preset-wooorm":"^6.0.0"},"_npmOperationalInternal":{"tmp":"tmp/unified_8.4.0_1568452904242_0.33531447836102113","host":"s3://npm-registry-packages"}},"8.4.1":{"name":"unified","version":"8.4.1","keywords":["process","parse","transform","compile","stringify","rehype","retext","remark"],"author":{"url":"https://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"},"license":"MIT","_id":"unified@8.4.1","maintainers":[{"name":"wooorm","email":"tituswormer@gmail.com"}],"contributors":[{"url":"https://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"},{"name":"Junyoung Choi","email":"fluke8259@gmail.com"},{"name":"Hernan Rajchert","email":"hrajchert@gmail.com"},{"name":"Christian Murphy","email":"christian.murphy.42@gmail.com"},{"name":"Vse Mozhet Byt","email":"vsemozhetbyt@gmail.com"},{"name":"Richard Littauer","email":"richard.littauer@gmail.com"}],"homepage":"https://unifiedjs.com","bugs":{"url":"https://github.com/unifiedjs/unified/issues"},"xo":{"rules":{"guard-for-in":"off","unicorn/prefer-type-error":"off","unicorn/prefer-reflect-apply":"off"},"esnext":false,"ignores":["unified.js"],"prettier":true},"nyc":{"lines":100,"branches":100,"functions":100,"check-coverage":true},"dist":{"shasum":"99bd0393f58a139eaa51832cfbcc0e7f6573a1e1","tarball":"https://registry.npmjs.org/unified/-/unified-8.4.1.tgz","fileCount":6,"integrity":"sha512-YPj/uIIZSO7mMIZQj/5Z3hDl4lshWYRQGs5TgUCjHTVdklUWH+O94mK5Cy77SEcmEUwGhnUcudMuH/zIwporqw==","signatures":[{"sig":"MEUCIQDjalmhYMifQR+jOZ7MA33tK6OvOIaIuSM5KVmAXUTdAwIgCgdy6Doc5rKatv8SUmoFVkZG3+KWMIjEjK3Ybz1MiNQ=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":65576,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdlZkVCRA9TVsSAnZWagAAKu0P+welklhjC3iTzz22vG2S\nKqPMBHbo3G1IpcJUupL30vJZVvatCN7Yu8VMx1buLZnbnr1UZ/HRv7qmNOZd\nfinyHVxetaWnGtsUswCikEA0Dpa02bFjW0AD1QT3qwVbMCa0EbPYMbU/+rUU\nQC63MTQjhVEwA/7HR1FeM1lW2mUN38J3qf7U0m1Hm4W3PxaNjfI5MWlG89PT\naAXriAj/LXzsqOak78KF+DnFp0VZPXByNcRUI8W3rI15LLam1oYkKFE+2FD0\nsVUStGboRH+vLR/ah5AJP8AYXlPAtTifRvbzyhdeF9cgQHTe9A7T4RwMc+iM\nppxpoz6mo6KjkXcEQ6zQYbVQl9EhWlT+0y+sky86AnarNMxO/EmXxeLvQ9Vg\nTXXft9CnlbXGnE/JXoDs7x7Zid2ghMwlRUZMisWQ9Es8keGSxwpXZnsA2xRX\nkmUg5sZCvMlnrjxpd2wh13YqvGLCFjSZpUaWvHs6MWRqQvJzWOSNB/VyPbP4\nco6HnQDcWM3LDwHwYWIY0nO2JZZUm4NuZe3hJhrOUZSLweVyKE3fWG4aYCIg\ny2LWwRxqKRoKW367UWNW1ADm5XEeXgOgutkNOzO9Vu8SCv8wflgoVqPmsdpD\ng3Wk3ASHti5kf0WL87FXDrx1M2Qew98J26AvgC6bcjCWhx8tCIheKaoyJi/u\nJXfr\r\n=DDaC\r\n-----END PGP SIGNATURE-----\r\n"},"types":"types/index.d.ts","gitHead":"af821ce47970096e2d6f8c4211705d608ca6bbb1","scripts":{"test":"npm run format && npm run build && npm run test-coverage && npm run test-types","build":"npm run build-bundle && npm run build-mangle","format":"remark . -qfo && prettier --write \"**/{*.js,*.ts}\" && xo --fix","test-api":"node test","test-types":"dtslint types","build-bundle":"browserify index.js -s unified -o unified.js","build-mangle":"browserify index.js -s unified -p tinyify -o unified.min.js","test-coverage":"nyc --reporter lcov tape test"},"_npmUser":{"name":"wooorm","email":"tituswormer@gmail.com"},"prettier":{"semi":false,"useTabs":false,"tabWidth":2,"singleQuote":true,"trailingComma":"none","bracketSpacing":false},"collective":{"url":"https://opencollective.com/unified","type":"opencollective"},"repository":{"url":"git+https://github.com/unifiedjs/unified.git","type":"git"},"_npmVersion":"6.11.3","description":"Interface for processing text using syntax trees","directories":{},"_nodeVersion":"12.2.0","dependencies":{"bail":"^1.0.0","vfile":"^4.0.0","extend":"^3.0.0","trough":"^1.0.0","is-plain-obj":"^2.0.0"},"remarkConfig":{"plugins":["preset-wooorm"]},"_hasShrinkwrap":false,"devDependencies":{"xo":"^0.25.0","nyc":"^14.0.0","tape":"^4.0.0","dtslint":"^0.9.0","tinyify":"^2.5.1","prettier":"^1.0.0","browserify":"^16.0.0","remark-cli":"^7.0.0","typescript":"^3.0.0","remark-preset-wooorm":"^6.0.0"},"_npmOperationalInternal":{"tmp":"tmp/unified_8.4.1_1570085140631_0.6201881595445307","host":"s3://npm-registry-packages"}},"8.4.2":{"name":"unified","version":"8.4.2","keywords":["process","parse","transform","compile","stringify","rehype","retext","remark"],"author":{"url":"https://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"},"license":"MIT","_id":"unified@8.4.2","maintainers":[{"name":"wooorm","email":"tituswormer@gmail.com"}],"contributors":[{"url":"https://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"},{"name":"Junyoung Choi","email":"fluke8259@gmail.com"},{"name":"Hernan Rajchert","email":"hrajchert@gmail.com"},{"name":"Christian Murphy","email":"christian.murphy.42@gmail.com"},{"name":"Vse Mozhet Byt","email":"vsemozhetbyt@gmail.com"},{"name":"Richard Littauer","email":"richard.littauer@gmail.com"}],"homepage":"https://unifiedjs.com","bugs":{"url":"https://github.com/unifiedjs/unified/issues"},"xo":{"rules":{"guard-for-in":"off","unicorn/prefer-type-error":"off","unicorn/prefer-reflect-apply":"off"},"esnext":false,"ignores":["unified.js"],"prettier":true},"dist":{"shasum":"13ad58b4a437faa2751a4a4c6a16f680c500fff1","tarball":"https://registry.npmjs.org/unified/-/unified-8.4.2.tgz","fileCount":6,"integrity":"sha512-JCrmN13jI4+h9UAyKEoGcDZV+i1E7BLFuG7OsaDvTXI5P0qhHX+vZO/kOhz9jn8HGENDKbwSeB0nVOg4gVStGA==","signatures":[{"sig":"MEUCIHEDAfsjHG9pLu7uKfa0Zy53TEQ/QV0oP0K08yr6eHyXAiEA3Alph9W4++hFe8qpa04Ojl2/jfcKDE9sOABHWgqaM68=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":65480,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdxx9SCRA9TVsSAnZWagAAJ+kP+wRaeqHjsgVKjAmTA9Ud\nDnQlHc6euFCa49QaT02f3VIOXJaiXy9yD+saYkHqWI9T0yZt+yIQDjOy95lH\nrDWmY4DWhul8ovBQyGQhjvLYKNc/tkk8O9C/j1lMqQtWOPZaOkWuLP2kAee7\ntt+9Ibbp4c6EBIL3LYjRrglZo5nQulwy0LV8WHY1MGgryWa2EU+4ZVxYcy4h\n4HcsmAw9mYtLJMwCFRPkWDZqkAIfijrI9mq2XgrazL7pAmsXi7kx3MJAMxQV\n6p17OmsL0k0bUsh/eFpMrIU3q7g9Ry2lqyvMeeVzz4G0q7LWV6tJ46QxkCdQ\nkDd9Z1DRM0wg6hFBJpSq2nAYzIzfiYAz+O1d+d+x06ZPrvEdKcWSQmUh0i+8\nUYwkBrKTQaA6shRmhamnmkEpTlA+em8fhr3vdLn+XMyL/moUsiAvWVBRitCB\nrakELMH8RcWT076QQBN2MZExH56bsdHTZJv6sNZqaGHMbGt2zh3Om9UUqdwh\nGY9ra7+1RY+MP0qH33DrZR2U1XvDdNKspVgwFna04exwPMO3KI4J9UaN3TkL\npoypDksthS2Yhqea2x/oEKHHj5b+0bqvIXWpykL6Ad7gmxLqveMdXuooQ5my\n0vo6zr9i6pP8RrmwEFn+O96vKbVQ8THe5HqiWqNx4AtErVNBvIec3TE8eNHy\n+bvi\r\n=Ibfr\r\n-----END PGP SIGNATURE-----\r\n"},"types":"types/index.d.ts","funding":{"url":"https://opencollective.com/unified","type":"opencollective"},"gitHead":"d5d2f8ce4b21350a38e942e1f09be92c4d9bee02","scripts":{"test":"npm run format && npm run build && npm run test-coverage && npm run test-types","build":"npm run build-bundle && npm run build-mangle","format":"remark . -qfo && prettier --write \"**/{*.js,*.ts}\" && xo --fix","test-api":"node test","test-types":"dtslint types","build-bundle":"browserify index.js -s unified -o unified.js","build-mangle":"browserify index.js -s unified -p tinyify -o unified.min.js","test-coverage":"c8 --check-coverage --lines 100 --functions 100 --branches 100 --reporter lcov tape test"},"_npmUser":{"name":"wooorm","email":"tituswormer@gmail.com"},"prettier":{"semi":false,"useTabs":false,"tabWidth":2,"singleQuote":true,"trailingComma":"none","bracketSpacing":false},"collective":{"url":"https://opencollective.com/unified","type":"opencollective"},"repository":{"url":"git+https://github.com/unifiedjs/unified.git","type":"git"},"_npmVersion":"6.13.0","description":"Interface for processing text using syntax trees","directories":{},"_nodeVersion":"13.0.1","dependencies":{"bail":"^1.0.0","vfile":"^4.0.0","extend":"^3.0.0","trough":"^1.0.0","is-plain-obj":"^2.0.0"},"remarkConfig":{"plugins":["preset-wooorm"]},"_hasShrinkwrap":false,"devDependencies":{"c8":"^6.0.0","xo":"^0.25.0","tape":"^4.0.0","dtslint":"^2.0.0","tinyify":"^2.0.0","prettier":"^1.0.0","browserify":"^16.0.0","remark-cli":"^7.0.0","remark-preset-wooorm":"^6.0.0"},"_npmOperationalInternal":{"tmp":"tmp/unified_8.4.2_1573330770524_0.8831980108029587","host":"s3://npm-registry-packages"}},"9.0.0":{"name":"unified","version":"9.0.0","keywords":["unified","process","parse","transform","compile","stringify","serialize","ast","cst","syntax","tree","content","rehype","retext","remark"],"author":{"url":"https://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"},"license":"MIT","_id":"unified@9.0.0","maintainers":[{"name":"wooorm","email":"tituswormer@gmail.com"}],"contributors":[{"url":"https://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"},{"name":"Junyoung Choi","email":"fluke8259@gmail.com"},{"name":"Hernan Rajchert","email":"hrajchert@gmail.com"},{"name":"Christian Murphy","email":"christian.murphy.42@gmail.com"},{"name":"Vse Mozhet Byt","email":"vsemozhetbyt@gmail.com"},{"name":"Richard Littauer","email":"richard.littauer@gmail.com"}],"homepage":"https://unifiedjs.com","bugs":{"url":"https://github.com/unifiedjs/unified/issues"},"xo":{"rules":{"guard-for-in":"off","unicorn/prefer-type-error":"off","unicorn/prefer-reflect-apply":"off","import/no-extraneous-dependencies":"off"},"esnext":false,"ignores":["types","unified.js"],"prettier":true},"dist":{"shasum":"12b099f97ee8b36792dbad13d278ee2f696eed1d","tarball":"https://registry.npmjs.org/unified/-/unified-9.0.0.tgz","fileCount":6,"integrity":"sha512-ssFo33gljU3PdlWLjNp15Inqb77d6JnJSfyplGJPT/a+fNRNyCBeveBAYJdO5khKdF6WVHa/yYCC7Xl6BDwZUQ==","signatures":[{"sig":"MEUCIQCM/2Ov1OM/JT/nj11Ncb2O1QWmesyN9ImWZdMwwkqvQAIgcbRQcjMxSX6pisg1TmWZPwrDOxNFw0FE/9jgLwEKNfU=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":67151,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJegY+XCRA9TVsSAnZWagAAW88P/07U+MpQof+1nx0PIrnG\nZ2C9544MLuCwmKOMeIHxPwLMLfuQJoltJZodUg6v0BKTVH20jaX3OqywE8u7\n5fwDSYP5jWtBnOmxGuDuIz7/f3ZUHVAPtR6B2xYzkKjlclJccLwmTwmGNcac\nhixXlCx+8vpQWSx9cjUbk+flWsPQkZ2gSMzMC0hQbOtJjcevEHV41oJtRVF0\nsr4zRU0KC/g2ng2MykfZVsa0I+lwVXW/Zq1/MKUvgh/E/A71lPMEWrmG7zq0\nRDI6lEQo1MEIwnAv6hSkx2YbTfxTR6OdMkdtRqIt+X5/rkn+dFVnl0pCFEMV\njOsZ3Qsak2NdcEkRWdTiYkzymXVAxyQWgw2jsJ0TYKFA114kp9gyuHCriiwU\nRl9OLMo7DPXmeZ71PqEh9t9b54QyZEnUOf756Cejd+g7WR1mQrZY8jJrVUsS\nIDgO2WviQpzIykD0N/KwuNTomP03rlpcOdIsBcLZOh2We082mYRAZKpUXd3O\nNO2k1A78YB8LGT0cNB8J6j7CdSUotfO7xcne7UpSMntN7zW2776nI0ET5qBj\nztSqqOI7XhLt08UGCRgrI4V3T7ORSh/vAnkDbCUcy3iGNcCvCp3erqvrNUXT\nXjXHm04eFglGhsFKM2MEs7EXHaLdGxsg+ATh6Y0zzff9NtPjqE+EdsJeyi+k\nWdeQ\r\n=Wn7v\r\n-----END PGP SIGNATURE-----\r\n"},"types":"types/index.d.ts","funding":{"url":"https://opencollective.com/unified","type":"opencollective"},"gitHead":"bfae23c97fbe426892da4276a4108bbde638c72a","scripts":{"test":"npm run format && npm run build && npm run test-coverage && npm run test-types","build":"npm run build-bundle && npm run build-mangle","format":"remark . -qfo && prettier --write \"**/{*.js,*.ts}\" && xo --fix","test-api":"node test","test-types":"dtslint types","build-bundle":"browserify index.js -s unified -o unified.js","build-mangle":"browserify index.js -s unified -p tinyify -o unified.min.js","test-coverage":"c8 --check-coverage --lines 100 --functions 100 --branches 100 --reporter lcov tape test"},"_npmUser":{"name":"wooorm","email":"tituswormer@gmail.com"},"prettier":{"semi":false,"useTabs":false,"tabWidth":2,"singleQuote":true,"trailingComma":"none","bracketSpacing":false},"collective":{"url":"https://opencollective.com/unified","type":"opencollective"},"repository":{"url":"git+https://github.com/unifiedjs/unified.git","type":"git"},"_npmVersion":"6.14.3","description":"Interface for parsing, inspecting, transforming, and serializing content through syntax trees","directories":{},"_nodeVersion":"13.10.1","dependencies":{"bail":"^1.0.0","vfile":"^4.0.0","extend":"^3.0.0","trough":"^1.0.0","is-buffer":"^2.0.0","is-plain-obj":"^2.0.0"},"remarkConfig":{"plugins":["preset-wooorm",["toc",{"heading":"contents"}]]},"_hasShrinkwrap":false,"devDependencies":{"c8":"^7.0.0","xo":"^0.28.0","tape":"^4.0.0","dtslint":"^3.0.0","tinyify":"^2.0.0","prettier":"^2.0.0","browserify":"^16.0.0","remark-cli":"^7.0.0","remark-preset-wooorm":"^6.0.0"},"_npmOperationalInternal":{"tmp":"tmp/unified_9.0.0_1585549206389_0.14493197563569438","host":"s3://npm-registry-packages"}},"9.1.0":{"name":"unified","version":"9.1.0","keywords":["unified","process","parse","transform","compile","stringify","serialize","ast","cst","syntax","tree","content","rehype","retext","remark"],"author":{"url":"https://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"},"license":"MIT","_id":"unified@9.1.0","maintainers":[{"name":"wooorm","email":"tituswormer@gmail.com"}],"contributors":[{"url":"https://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"},{"name":"Junyoung Choi","email":"fluke8259@gmail.com"},{"name":"Hernan Rajchert","email":"hrajchert@gmail.com"},{"name":"Christian Murphy","email":"christian.murphy.42@gmail.com"},{"name":"Vse Mozhet Byt","email":"vsemozhetbyt@gmail.com"},{"name":"Richard Littauer","email":"richard.littauer@gmail.com"}],"homepage":"https://unifiedjs.com","bugs":{"url":"https://github.com/unifiedjs/unified/issues"},"xo":{"rules":{"guard-for-in":"off","unicorn/catch-error-name":"off","unicorn/prefer-type-error":"off","unicorn/prefer-reflect-apply":"off","unicorn/prefer-optional-catch-binding":"off"},"esnext":false,"ignores":["types","unified.js"],"prettier":true},"dist":{"shasum":"7ba82e5db4740c47a04e688a9ca8335980547410","tarball":"https://registry.npmjs.org/unified/-/unified-9.1.0.tgz","fileCount":6,"integrity":"sha512-VXOv7Ic6twsKGJDeZQ2wwPqXs2hM0KNu5Hkg9WgAZbSD1pxhZ7p8swqg583nw1Je2fhwHy6U8aEjiI79x1gvag==","signatures":[{"sig":"MEQCIC3z2Fwutxbqve+P4Xd3n7ISYzidYehc+xazI6PI91u4AiBPqyWEkLMj0LWeXWgUWw8EVrAhPp4+1id5crJjSl0Zbw==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":67479,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfGVsGCRA9TVsSAnZWagAAQb4P+wSXfNbbiGu1qaNsOIQR\nbumxe3xLvawieunFoe1KcTF7yVQSykbd/+GEBqWjfS9xQJr4CY8BzzgKmFf3\n4abCbtulCfot6y4GRMQxZjsJIvB1tA1TRxiiG1PEL/Vf1V8qp0mBYHXGVxby\nwvdfv/+en09nPPJJ5p5AJOB9eKEpbTcnMmOOslJzLTlplPxrjyzC/1u59EsB\nuojjuHGuiHDsCy46vdv7nILSy1M+7pnuXFpWPnHSikOMCuniutMx1ZyKRAUc\nedTuXwocu8gney+1ounWFTc7bar/EFi1nr1VCGjPRw78JtiN1YVYmB1v/DGY\nkKgfVZP5d51IC0jzVPQcFXPJfVnhYD13XXxQJZuJPjB3cExOnXErYsro6fCK\np5WuBRUGQWj9eO5dwWiCtJ5fEGowv89QzOoYgnHcYZ4kUxsbTYK5UchU5cvp\nTh2pBYeVc9nAL0xP3Vp6ZXdvqoLNFNT+XWMIUiuKkbiZ7tNOc9UMp9NXggyS\nDk4fhRrthhk/o4PCnEV+3AXZ62vLQU951oY+JT/COzyBGo1an2H0UiqM2CzN\ne14HhLw3ACq7/YDUUY9qd25PKS3uXS6kD9sIiAB2Kcg6SrHeU/p7ekgaDhlk\nZkSXbh+I+VnYExSyMMCWcbflPdBWLdU96qog8lRuiuOXqclLTlZ72SvdXVUR\ngQgg\r\n=ut6k\r\n-----END PGP SIGNATURE-----\r\n"},"types":"types/index.d.ts","funding":{"url":"https://opencollective.com/unified","type":"opencollective"},"gitHead":"6351742aaa10350f173be594374d1dfd255e0e57","scripts":{"test":"npm run format && npm run build && npm run test-coverage && npm run test-types","build":"npm run build-bundle && npm run build-mangle","format":"remark . -qfo && prettier . --write && xo --fix","test-api":"node test","test-types":"dtslint types","build-bundle":"browserify index.js -s unified -o unified.js","build-mangle":"browserify index.js -s unified -p tinyify -o unified.min.js","test-coverage":"c8 --check-coverage --lines 100 --functions 100 --branches 100 --reporter lcov tape test"},"_npmUser":{"name":"wooorm","email":"tituswormer@gmail.com"},"prettier":{"semi":false,"useTabs":false,"tabWidth":2,"singleQuote":true,"trailingComma":"none","bracketSpacing":false},"collective":{"url":"https://opencollective.com/unified","type":"opencollective"},"repository":{"url":"git+https://github.com/unifiedjs/unified.git","type":"git"},"_npmVersion":"6.14.5","description":"Interface for parsing, inspecting, transforming, and serializing content through syntax trees","directories":{},"_nodeVersion":"14.0.0","dependencies":{"bail":"^1.0.0","vfile":"^4.0.0","extend":"^3.0.0","trough":"^1.0.0","is-buffer":"^2.0.0","is-plain-obj":"^2.0.0"},"remarkConfig":{"plugins":["preset-wooorm"]},"_hasShrinkwrap":false,"devDependencies":{"c8":"^7.0.0","xo":"^0.32.0","tape":"^5.0.0","dtslint":"^3.0.0","tinyify":"^2.0.0","prettier":"^2.0.0","browserify":"^16.0.0","remark-cli":"^8.0.0","remark-preset-wooorm":"^7.0.0"},"_npmOperationalInternal":{"tmp":"tmp/unified_9.1.0_1595497222053_0.8045855162205708","host":"s3://npm-registry-packages"}},"9.2.0":{"name":"unified","version":"9.2.0","keywords":["unified","process","parse","transform","compile","stringify","serialize","ast","cst","syntax","tree","content","rehype","retext","remark"],"author":{"url":"https://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"},"license":"MIT","_id":"unified@9.2.0","maintainers":[{"name":"wooorm","email":"tituswormer@gmail.com"}],"contributors":[{"url":"https://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"},{"name":"Junyoung Choi","email":"fluke8259@gmail.com"},{"name":"Hernan Rajchert","email":"hrajchert@gmail.com"},{"name":"Christian Murphy","email":"christian.murphy.42@gmail.com"},{"name":"Vse Mozhet Byt","email":"vsemozhetbyt@gmail.com"},{"name":"Richard Littauer","email":"richard.littauer@gmail.com"}],"homepage":"https://unifiedjs.com","bugs":{"url":"https://github.com/unifiedjs/unified/issues"},"xo":{"rules":{"guard-for-in":"off","no-unreachable-loop":"off","unicorn/catch-error-name":"off","unicorn/prefer-type-error":"off","unicorn/prefer-reflect-apply":"off","unicorn/prefer-optional-catch-binding":"off"},"esnext":false,"ignores":["types","unified.js"],"prettier":true},"dist":{"shasum":"67a62c627c40589edebbf60f53edfd4d822027f8","tarball":"https://registry.npmjs.org/unified/-/unified-9.2.0.tgz","fileCount":7,"integrity":"sha512-vx2Z0vY+a3YoTj8+pttM3tiJHCwY5UFbYdiWrwBEbHmK8pvsPj2rtAX2BFfgXen8T39CJWblWRDT4L5WGXtDdg==","signatures":[{"sig":"MEQCICHxQeZtrNiqBpfFIXwSeh5WKvsEjbKnn5zEloU4yRKaAiBk0sP7KyEFEHYc4FR4dEAVKxLOutzMA8V8BdPvjTaMnQ==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":81583,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfQA38CRA9TVsSAnZWagAAdx8P/iKy/YJRFwjcu4ytIG5b\n8DvvydIGegy21QNId+NTe/t4wBy3LOvIkx4f9oUbt9BWh2Mw5qWS0fqppdf7\nIEe51UmUeJdBj48HGgA9vF8Ma9CwgMEViZKI+QAy5Dw4DRlYOevdpagGrkDG\n6exMu7NfOyj6iZk0zNnmSouJ+DBs/TwI2iNaNNwaBk33h10aWHdTKiilOCAu\nLI9TulXJt92dDEhcA9XseP4wqT1gsZT0l2LjpFIvsF9u+dyhLmXxANtfv6X/\ncDddPJ9pzzVDQfZIjjWeiRm/zsd1jNO7ahy1MkyhCmHQHUMK7XE7xnNSzAv4\npfoMGM+jJCkznC+mpZb6dAlUl/4HvNlAj4nnc2Im1Mgq59IRbs2OiJWx13Ur\nIKqF/ELiEJSoOUkIqsnTITVitNpuVEaTFkQT+ydISdd60qAzYxO8Y/k9Cm9k\n5ZcizqnZWatfoKql7fk/1H5T6qPPgjJSRahHJGgbFkQsd76lahkf97G78Skg\n02orE5hGOaIkc1h8EYY20pwLHZHlKiV9TDjSr4zDmOy/mZTjOy4lcy3tP+jQ\nctjs1Gdh9v/Y5RxvgjxwleddpZQQYQpxROU4/bYBeYuM7RVWiNFXqAwVLpPw\nVE9JS7+zFWaGrHjJKv6AmtbYL1c4UJh0oIOALimhFrchJe2cnVw+NAfkPtTg\nwjvx\r\n=77SZ\r\n-----END PGP SIGNATURE-----\r\n"},"types":"types/ts3.4/index.d.ts","funding":{"url":"https://opencollective.com/unified","type":"opencollective"},"gitHead":"f27fb1efda44e797929fda8d858269e3cad9292c","scripts":{"test":"npm run format && npm run build && npm run test-coverage && npm run test-types","build":"npm run build-bundle && npm run build-mangle","format":"remark . -qfo && prettier . --write && xo --fix","test-api":"node test","test-types":"npm run test-types-3.4 && npm run test-types-4.0","build-bundle":"browserify index.js -s unified -o unified.js","build-mangle":"browserify index.js -s unified -p tinyify -o unified.min.js","test-coverage":"c8 --check-coverage --lines 100 --functions 100 --branches 100 --reporter lcov tape test","test-types-3.4":"dtslint types/ts3.4","test-types-4.0":"dtslint types/ts4.0"},"_npmUser":{"name":"wooorm","email":"tituswormer@gmail.com"},"prettier":{"semi":false,"useTabs":false,"tabWidth":2,"singleQuote":true,"trailingComma":"none","bracketSpacing":false},"repository":{"url":"git+https://github.com/unifiedjs/unified.git","type":"git"},"_npmVersion":"6.14.8","description":"Interface for parsing, inspecting, transforming, and serializing content through syntax trees","directories":{},"_nodeVersion":"14.7.0","dependencies":{"bail":"^1.0.0","vfile":"^4.0.0","extend":"^3.0.0","trough":"^1.0.0","is-buffer":"^2.0.0","is-plain-obj":"^2.0.0"},"remarkConfig":{"plugins":["preset-wooorm"]},"typesVersions":{">=4.0":{"types/ts3.4/*":["types/ts4.0/*"]}},"_hasShrinkwrap":false,"devDependencies":{"c8":"^7.0.0","xo":"^0.33.0","tape":"^5.0.0","dtslint":"^3.0.0","tinyify":"^3.0.0","prettier":"^2.0.0","browserify":"^16.0.0","remark-cli":"^8.0.0","remark-preset-wooorm":"^7.0.0"},"_npmOperationalInternal":{"tmp":"tmp/unified_9.2.0_1598033403565_0.023751226771384193","host":"s3://npm-registry-packages"}},"9.2.1":{"name":"unified","version":"9.2.1","keywords":["unified","process","parse","transform","compile","stringify","serialize","ast","cst","syntax","tree","content","rehype","retext","remark"],"author":{"url":"https://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"},"license":"MIT","_id":"unified@9.2.1","maintainers":[{"name":"wooorm","email":"tituswormer@gmail.com"}],"contributors":[{"url":"https://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"},{"name":"Junyoung Choi","email":"fluke8259@gmail.com"},{"name":"Hernan Rajchert","email":"hrajchert@gmail.com"},{"name":"Christian Murphy","email":"christian.murphy.42@gmail.com"},{"name":"Vse Mozhet Byt","email":"vsemozhetbyt@gmail.com"},{"name":"Richard Littauer","email":"richard.littauer@gmail.com"}],"homepage":"https://unifiedjs.com","bugs":{"url":"https://github.com/unifiedjs/unified/issues"},"xo":{"rules":{"guard-for-in":"off","no-unreachable-loop":"off","unicorn/prefer-type-error":"off","unicorn/prefer-reflect-apply":"off","unicorn/prefer-number-properties":"off","unicorn/prefer-optional-catch-binding":"off"},"esnext":false,"ignores":["types","unified.js"],"prettier":true},"dist":{"shasum":"ae18d5674c114021bfdbdf73865ca60f410215a3","tarball":"https://registry.npmjs.org/unified/-/unified-9.2.1.tgz","fileCount":7,"integrity":"sha512-juWjuI8Z4xFg8pJbnEZ41b5xjGUWGHqXALmBZ3FC3WX0PIx1CZBIIJ6mXbYMcf6Yw4Fi0rFUTA1cdz/BglbOhA==","signatures":[{"sig":"MEUCIGmaYuTG4l/OqhYTCNmeKrmG0vkwPbL79HqZ5bMA/+nkAiEA1SGLScEnjIajrCLHXJiJH2fa89sHfADx/j4sw092rsc=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":80910,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgN2DECRA9TVsSAnZWagAAoasP/AgmzqNNtLrBWou+B3Vq\ndA0IdldLi4AHo94HiMl6Bv0wmvyvRmgbFBkrsy4SYhx5FacS8y/00cw3Uskz\nWLxj3dC5ROoPnOkoYKA7gxoy2TCN1ebnffmruvpXyCp01dSbblAGXOnPcDMC\n0R4QudR77gPdIipgnx4/UCeG/oAJs6/jEAhMj8aWUvAgN+6sCO7WZGzxNvM0\nom6JPk5rBFZvivVO2NsMkwjdYB2D2E9gxLJbjqMtqXrWIRd0f9KUsQOcUH6Q\nz4xG/cQIcuXX4DS/JzBbOqTx1Df21fweq8kZAs1uT/iYgrHDFWi71kbEI/7R\n3MDuJtZwjztu9r89HRryOhiZmycMztF/todZ/FvNRRFq69O4mfPU+xv6sbHR\nuG15bDfepA90qDT5xgG1OK4HXJ9HEIrFTv2qbLVzOVw4CGxIILsgFw1PK9BM\nzSsZ3xaookTxNDJIJh6pW1a1+C1W8I2MdW2qVbuxnikeG99k/9fb6ce+mrJK\n56bl1DlmeLAITRi5CQHU54MsBHDvZhEwBUCTSdYiANWlEWx0QAQJQgjHaHqU\nFD04rGvGr0YSOnaB94DrVLx8HtLt2vK+TdyOTKIU8SnTZ6ji4RuGk+R/hIO9\nPP4fl4Q0kRLI0sARq6IE+txR6Zp2ut38NKfPhLIcTKrLDpLz1bNY7Z4aYpTD\nrcvn\r\n=e4KN\r\n-----END PGP SIGNATURE-----\r\n"},"types":"types/ts3.4/index.d.ts","funding":{"url":"https://opencollective.com/unified","type":"opencollective"},"gitHead":"0f3b92833fd910c21edef423ad5891af7f11a82e","scripts":{"test":"npm run format && npm run build && npm run test-coverage && npm run test-types","build":"npm run build-bundle && npm run build-mangle","format":"remark . -qfo && prettier . -w --loglevel warn && xo --fix","test-api":"node test","test-types":"npm run test-types-3.4 && npm run test-types-4.0","build-bundle":"browserify index.js -s unified -o unified.js","build-mangle":"browserify index.js -s unified -p tinyify -o unified.min.js","test-coverage":"c8 --check-coverage --lines 100 --functions 100 --branches 100 --reporter lcov tape test","test-types-3.4":"dtslint types/ts3.4","test-types-4.0":"dtslint types/ts4.0"},"_npmUser":{"name":"wooorm","email":"tituswormer@gmail.com"},"prettier":{"semi":false,"useTabs":false,"tabWidth":2,"singleQuote":true,"trailingComma":"none","bracketSpacing":false},"repository":{"url":"git+https://github.com/unifiedjs/unified.git","type":"git"},"_npmVersion":"7.5.2","description":"Interface for parsing, inspecting, transforming, and serializing content through syntax trees","directories":{},"_nodeVersion":"15.1.0","dependencies":{"bail":"^1.0.0","vfile":"^4.0.0","extend":"^3.0.0","trough":"^1.0.0","is-buffer":"^2.0.0","is-plain-obj":"^2.0.0"},"remarkConfig":{"plugins":["preset-wooorm"]},"typesVersions":{">=4.0":{"types/ts3.4/*":["types/ts4.0/*"]}},"_hasShrinkwrap":false,"devDependencies":{"c8":"^7.0.0","xo":"^0.38.0","tape":"^5.0.0","dtslint":"^4.0.0","tinyify":"^3.0.0","prettier":"^2.0.0","browserify":"^17.0.0","remark-cli":"^9.0.0","remark-preset-wooorm":"^8.0.0"},"_npmOperationalInternal":{"tmp":"tmp/unified_9.2.1_1614241988303_0.47410702740213573","host":"s3://npm-registry-packages"}},"9.2.2":{"name":"unified","version":"9.2.2","keywords":["unified","process","parse","transform","compile","stringify","serialize","ast","cst","syntax","tree","content","rehype","retext","remark"],"author":{"url":"https://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"},"license":"MIT","_id":"unified@9.2.2","maintainers":[{"name":"wooorm","email":"tituswormer@gmail.com"}],"contributors":[{"url":"https://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"},{"name":"Junyoung Choi","email":"fluke8259@gmail.com"},{"name":"Hernan Rajchert","email":"hrajchert@gmail.com"},{"name":"Christian Murphy","email":"christian.murphy.42@gmail.com"},{"name":"Vse Mozhet Byt","email":"vsemozhetbyt@gmail.com"},{"name":"Richard Littauer","email":"richard.littauer@gmail.com"}],"homepage":"https://unifiedjs.com","bugs":{"url":"https://github.com/unifiedjs/unified/issues"},"xo":{"rules":{"guard-for-in":"off","no-unreachable-loop":"off","unicorn/prefer-type-error":"off","unicorn/prefer-reflect-apply":"off","unicorn/prefer-number-properties":"off","unicorn/prefer-optional-catch-binding":"off"},"esnext":false,"ignores":["types","unified.js"],"prettier":true},"dist":{"shasum":"67649a1abfc3ab85d2969502902775eb03146975","tarball":"https://registry.npmjs.org/unified/-/unified-9.2.2.tgz","fileCount":6,"integrity":"sha512-Sg7j110mtefBD+qunSLO1lqOEKdrwBFBrR6Qd8f4uwkhWNlbkaqwHse6e7QvD3AP/MNoJdEDLaf8OxYyoWgorQ==","signatures":[{"sig":"MEQCIDsf/PnBMViJWUWsfUQ6b+SsqUdBordlgbJfsCwsjw0oAiBMwKyJbvRoXxLw8bUilvI/SOuFy6mVQxHrvZi8yhYzWw==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":80884,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJg3e+vCRA9TVsSAnZWagAAECYP/3tDQzrkZHM+pXfzg1NS\nF/HH9hZXQIuA684g9QT9FWEoAZ3ROIpEBkBWEcvzQvEzaa5FK08KwxwVm2t1\n7TaD7/ekspGqh3OMIbTRt+6rEsizNLptuCLBE6B/dvTQU1Zp3rEOGjpQqR8H\nDIkQ6c/bUeAUDX0Qeti8KmEtXKX8LD+hFj+x5L6R8p+8+1aehUTBLEoArp5i\nBABLHb8YesrRsymvAFqPUrYvTFJbYOpyvkYEUZTs/HJifIGTlp9f055YD4ik\nJQ4tBEasNK3Ghx7NAOJXgFlysDXAW9Me+vkde//OWTIfRvdK42H54+XA6/ym\nrgQyXf2bxVDeJSfak0hb1yAer4CmQKqb+Qru2Xt7jU036PmQdaltVRU6gWHo\nTIMaDRKY1r4UDcOYDWgTZ4MRhoAxP6bxRo4MbEDZaznujVqmGE9+5j1g0F9M\nex3wmkm0Nla9VYkMxsedpfJX3hlTmoL10K51YL4XPC+a7sb6+HOZ7Sw2K3TY\n3GJBP2PJP/WWmYW10z2ADPFJxz9rwwE5qhJC4idwxedGYcUnBY3NrTZ3Qp7+\nOuHLvCBsFuyiEiN0ycZ0R8i/XmVTcOQxZBq68AFT22fNan2/OMxquAulRtZr\nM9SBipUrdDedN1nIbJVH7j8XR6nbvQtfqjivnTshQAGwp6ukBZerGmdD9Xjw\nqoCx\r\n=AtNO\r\n-----END PGP SIGNATURE-----\r\n"},"types":"types/ts3.4/index.d.ts","readme":"# [![unified][logo]][site]\n\n[![Build][build-badge]][build]\n[![Coverage][coverage-badge]][coverage]\n[![Downloads][downloads-badge]][downloads]\n[![Size][size-badge]][size]\n[![Sponsors][sponsors-badge]][collective]\n[![Backers][backers-badge]][collective]\n[![Chat][chat-badge]][chat]\n\n**unified** is an interface for processing text using syntax trees.\nIt’s what powers [**remark**][remark] (Markdown), [**retext**][retext] (natural\nlanguage), and [**rehype**][rehype] (HTML), and allows for processing between\nformats.\n\n## Intro\n\n**unified** enables new exciting projects like [Gatsby][] to pull in Markdown,\n[MDX][] to embed [JSX][], and [Prettier][] to format it.\nIt’s used in about 500k projects on GitHub and has about 25m downloads each\nmonth on npm: you’re probably using it.\nSome notable users are [Node.js][], [Vercel][], [Netlify][], [GitHub][],\n[Mozilla][], [WordPress][], [Adobe][], [Facebook][], [Google][], and many more.\n\n*   To read about what we are up to, follow us [Twitter][]\n*   For a less technical and more practical introduction to unified, visit\n    [`unifiedjs.com`][site] and peruse its [Learn][] section\n*   Browse [awesome unified][awesome] to find out more about the ecosystem\n*   Questions?\n    Get help on [Discussions][chat]!\n*   Check out [Contribute][] below to find out how to help out, or become a\n    backer or sponsor on [OpenCollective][collective]\n\n## Sponsors\n\nSupport this effort and give back by sponsoring on [OpenCollective][collective]!\n\n<!--lint ignore no-html-->\n\n<table>\n<tr valign=\"middle\">\n<td width=\"20%\" align=\"center\" colspan=\"2\">\n  <a href=\"https://www.gatsbyjs.org\">Gatsby</a> 🥇<br><br>\n  <a href=\"https://www.gatsbyjs.org\"><img src=\"https://avatars1.githubusercontent.com/u/12551863?s=256&v=4\" width=\"128\"></a>\n</td>\n<td width=\"20%\" align=\"center\" colspan=\"2\">\n  <a href=\"https://vercel.com\">Vercel</a> 🥇<br><br>\n  <a href=\"https://vercel.com\"><img src=\"https://avatars1.githubusercontent.com/u/14985020?s=256&v=4\" width=\"128\"></a>\n</td>\n<td width=\"20%\" align=\"center\" colspan=\"2\">\n  <a href=\"https://www.netlify.com\">Netlify</a><br><br>\n  <!--OC has a sharper image-->\n  <a href=\"https://www.netlify.com\"><img src=\"https://images.opencollective.com/netlify/4087de2/logo/256.png\" width=\"128\"></a>\n</td>\n<td width=\"10%\" align=\"center\">\n  <a href=\"https://www.holloway.com\">Holloway</a><br><br>\n  <a href=\"https://www.holloway.com\"><img src=\"https://avatars1.githubusercontent.com/u/35904294?s=128&v=4\" width=\"64\"></a>\n</td>\n<td width=\"10%\" align=\"center\">\n  <a href=\"https://themeisle.com\">ThemeIsle</a><br><br>\n  <a href=\"https://themeisle.com\"><img src=\"https://avatars1.githubusercontent.com/u/58979018?s=128&v=4\" width=\"64\"></a>\n</td>\n<td width=\"10%\" align=\"center\">\n  <a href=\"https://boosthub.io\">Boost Hub</a><br><br>\n  <a href=\"https://boosthub.io\"><img src=\"https://images.opencollective.com/boosthub/6318083/logo/128.png\" width=\"64\"></a>\n</td>\n<td width=\"10%\" align=\"center\">\n  <a href=\"https://expo.io\">Expo</a><br><br>\n  <a href=\"https://expo.io\"><img src=\"https://avatars1.githubusercontent.com/u/12504344?s=128&v=4\" width=\"64\"></a>\n</td>\n</tr>\n<tr valign=\"middle\">\n<td width=\"100%\" align=\"center\" colspan=\"10\">\n  <br>\n  <a href=\"https://opencollective.com/unified\"><strong>You?</strong></a>\n  <br><br>\n</td>\n</tr>\n</table>\n\n## Install\n\n[npm][]:\n\n```sh\nnpm install unified\n```\n\nThis package comes with types.\nIf you’re using TypeScript, make sure to also install\n[`@types/unist`][ts-unist].\n\n## Use\n\n```js\nvar unified = require('unified')\nvar markdown = require('remark-parse')\nvar remark2rehype = require('remark-rehype')\nvar doc = require('rehype-document')\nvar format = require('rehype-format')\nvar html = require('rehype-stringify')\nvar report = require('vfile-reporter')\n\nunified()\n  .use(markdown)\n  .use(remark2rehype)\n  .use(doc, {title: '👋🌍'})\n  .use(format)\n  .use(html)\n  .process('# Hello world!', function (err, file) {\n    console.error(report(err || file))\n    console.log(String(file))\n  })\n```\n\nYields:\n\n```txt\nno issues found\n```\n\n```html\n<!doctype html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <title>👋🌍</title>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  </head>\n  <body>\n    <h1>Hello world!</h1>\n  </body>\n</html>\n```\n\n## Contents\n\n*   [Description](#description)\n*   [API](#api)\n    *   [`processor()`](#processor)\n    *   [`processor.use(plugin[, options])`](#processoruseplugin-options)\n    *   [`processor.parse(file)`](#processorparsefile)\n    *   [`processor.stringify(node[, file])`](#processorstringifynode-file)\n    *   [`processor.run(node[, file][, done])`](#processorrunnode-file-done)\n    *   [`processor.runSync(node[, file])`](#processorrunsyncnode-file)\n    *   [`processor.process(file[, done])`](#processorprocessfile-done)\n    *   [`processor.processSync(file|value)`](#processorprocesssyncfilevalue)\n    *   [`processor.data([key[, value]])`](#processordatakey-value)\n    *   [`processor.freeze()`](#processorfreeze)\n*   [`Plugin`](#plugin)\n    *   [`function attacher([options])`](#function-attacheroptions)\n    *   [`function transformer(node, file[, next])`](#function-transformernode-file-next)\n*   [`Preset`](#preset)\n*   [Contribute](#contribute)\n*   [Acknowledgments](#acknowledgments)\n*   [License](#license)\n\n## Description\n\n**unified** is an interface for processing text using syntax trees.\nSyntax trees are a representation of text understandable to programs.\nThose programs, called [*plugin*][plugin]s, take these trees and inspect and\nmodify them.\nTo get to the syntax tree from text, there is a [*parser*][parser].\nTo get from that back to text, there is a [*compiler*][compiler].\nThis is the [*process*][process] of a *processor*.\n\n```ascii\n| ........................ process ........................... |\n| .......... parse ... | ... run ... | ... stringify ..........|\n\n          +--------+                     +----------+\nInput ->- | Parser | ->- Syntax Tree ->- | Compiler | ->- Output\n          +--------+          |          +----------+\n                              X\n                              |\n                       +--------------+\n                       | Transformers |\n                       +--------------+\n```\n\n###### Processors\n\nEvery **processor** implements another processor.\nTo create a processor, call another processor.\nThe new processor is configured to work the same as its ancestor.\nBut when the descendant processor is configured in the future it does not affect\nthe ancestral processor.\n\nWhen processors are exposed from a module (for example, `unified` itself) they\nshould not be configured directly, as that would change their behavior for all\nmodule users.\nThose processors are [*frozen*][freeze] and they should be called to create a\nnew processor before they are used.\n\n###### Syntax trees\n\nThe **syntax trees** used in **unified** are [**unist**][unist] nodes.\nA [**node**][node] is a plain JavaScript objects with a `type` field.\nThe semantics of nodes and format of syntax trees is defined by other projects.\n\nThere are several [*utilities*][unist-utilities] for working with nodes.\n\n*   [**hast**][hast] — HTML\n*   [**mdast**][mdast] — Markdown\n*   [**nlcst**][nlcst] — Natural language\n*   [**xast**][xast] — XML\n\n###### List of processors\n\nThe following projects process different [*syntax tree*][syntax-tree] formats.\nThey parse text to a syntax tree and compile that back to text.\nThese processors can be used as is, or their parser and compiler can be mixed\nand matched with **unified** and plugins to process between different syntaxes.\n\n*   [**rehype**][rehype] ([*hast*][hast]) — HTML\n*   [**remark**][remark] ([*mdast*][mdast]) — Markdown\n*   [**retext**][retext] ([*nlcst*][nlcst]) — Natural language\n\n###### List of plugins\n\nThe below [**plugins**][plugin] work with **unified**, on all [*syntax\ntree*][syntax-tree] formats:\n\n*   [`unified-diff`](https://github.com/unifiedjs/unified-diff)\n    — Ignore messages for unchanged lines in Travis\n*   [`unified-message-control`](https://github.com/unifiedjs/unified-message-control)\n    — Enable, disable, and ignore messages\n\nSee [**remark**][remark-plugins], [**rehype**][rehype-plugins], and\n[**retext**][retext-plugins] for their lists of plugins.\n\n###### File\n\nWhen processing a document, **metadata** is often gathered about that document.\n[**vfile**][vfile] is a virtual file format that stores data, metadata, and\nmessages about files for **unified** and its plugins.\n\nThere are several [*utilities*][vfile-utilities] for working with these files.\n\n###### Configuration\n\n[*Processors*][processors] are configured with [*plugin*][plugin]s or\nwith the [`data`][data] method.\n\n###### Integrations\n\n**unified** can integrate with the file system with [`unified-engine`][engine].\nCLI apps can be created with [`unified-args`][args], Gulp plugins with\n[`unified-engine-gulp`][gulp], and Atom Linters with\n[`unified-engine-atom`][atom].\n\n[`unified-stream`][stream] provides a streaming interface.\n\n###### Programming interface\n\nThe API provided by **unified** allows multiple files to be processed and gives\naccess to *metadata* (such as lint messages):\n\n```js\nvar unified = require('unified')\nvar markdown = require('remark-parse')\nvar styleGuide = require('remark-preset-lint-markdown-style-guide')\nvar remark2retext = require('remark-retext')\nvar english = require('retext-english')\nvar equality = require('retext-equality')\nvar remark2rehype = require('remark-rehype')\nvar html = require('rehype-stringify')\nvar report = require('vfile-reporter')\n\nunified()\n  .use(markdown)\n  .use(styleGuide)\n  .use(remark2retext, unified().use(english).use(equality))\n  .use(remark2rehype)\n  .use(html)\n  .process('*Emphasis* and _stress_, you guys!', function (err, file) {\n    console.error(report(err || file))\n    console.log(String(file))\n  })\n```\n\nYields:\n\n```txt\n  1:16-1:24  warning  Emphasis should use `*` as a marker                                  emphasis-marker  remark-lint\n  1:30-1:34  warning  `guys` may be insensitive, use `people`, `persons`, `folks` instead  gals-men         retext-equality\n\n⚠ 2 warnings\n```\n\n```html\n<p><em>Emphasis</em> and <em>stress</em>, you guys!</p>\n```\n\n###### Processing between syntaxes\n\n[*Processors*][processors] can be combined in two modes.\n\n**Bridge** mode transforms the [*syntax tree*][syntax-tree] from one format\n(*origin*) to another (*destination*).\nAnother processor runs on the destination tree.\nFinally, the original processor continues transforming the origin tree.\n\n**Mutate** mode also transforms the syntax tree from one format to another.\nBut the original processor continues transforming the destination tree.\n\nIn the previous example (“Programming interface”), `remark-retext` is used in\n*bridge* mode: the origin syntax tree is kept after [**retext**][retext] is\ndone; whereas `remark-rehype` is used in *mutate* mode: it sets a new syntax\ntree and discards the origin tree.\n\n*   [`remark-retext`][remark-retext]\n*   [`remark-rehype`][remark-rehype]\n*   [`rehype-retext`][rehype-retext]\n*   [`rehype-remark`][rehype-remark]\n\n## API\n\n### `processor()`\n\n[*Processor*][processors] describing how to *process* text.\n\n###### Returns\n\n`Function` — New [*unfrozen*][freeze] processor that is configured to work the\nsame as its ancestor.\nWhen the descendant processor is configured in the future it does not affect the\nancestral processor.\n\n###### Example\n\nThe following example shows how a new processor can be created (from the remark\nprocessor) and linked to **stdin**(4) and **stdout**(4).\n\n```js\nvar remark = require('remark')\nvar concat = require('concat-stream')\n\nprocess.stdin.pipe(concat(onconcat))\n\nfunction onconcat(buf) {\n  var doc = remark().processSync(buf).toString()\n\n  process.stdout.write(doc)\n}\n```\n\n### `processor.use(plugin[, options])`\n\n[*Configure*][configuration] the processor to use a [*plugin*][plugin] and\noptionally configure that plugin with options.\n\nIf the processor is already using this plugin, the previous plugin configuration\nis changed based on the options that are passed in.\nThe plugin is not added a second time.\n\n###### Signatures\n\n*   `processor.use(plugin[, options])`\n*   `processor.use(preset)`\n*   `processor.use(list)`\n\n###### Parameters\n\n*   `plugin` ([`Attacher`][plugin])\n*   `options` (`*`, optional) — Configuration for `plugin`\n*   `preset` (`Object`) — Object with an optional `plugins` (set to `list`),\n    and/or an optional `settings` object\n*   `list` (`Array`) — List of plugins, presets, and pairs (`plugin` and\n    `options` in an array)\n\n###### Returns\n\n`processor` — The processor that `use` was called on.\n\n###### Note\n\n`use` cannot be called on [*frozen*][freeze] processors.\nCall the processor first to create a new unfrozen processor.\n\n###### Example\n\nThere are many ways to pass plugins to `.use()`.\nThe below example gives an overview.\n\n```js\nvar unified = require('unified')\n\nunified()\n  // Plugin with options:\n  .use(pluginA, {x: true, y: true})\n  // Passing the same plugin again merges configuration (to `{x: true, y: false, z: true}`):\n  .use(pluginA, {y: false, z: true})\n  // Plugins:\n  .use([pluginB, pluginC])\n  // Two plugins, the second with options:\n  .use([pluginD, [pluginE, {}]])\n  // Preset with plugins and settings:\n  .use({plugins: [pluginF, [pluginG, {}]], settings: {position: false}})\n  // Settings only:\n  .use({settings: {position: false}})\n```\n\n### `processor.parse(file)`\n\nParse text to a [*syntax tree*][syntax-tree].\n\n###### Parameters\n\n*   `file` ([`VFile`][vfile]) — [*File*][file], any value accepted by `vfile()`\n\n###### Returns\n\n[`Node`][node] — Parsed [*syntax tree*][syntax-tree] representing `file`.\n\n###### Note\n\n`parse` freezes the processor if not already [*frozen*][freeze].\n\n`parse` performs the [*parse phase*][description], not the *run phase* or other\nphases.\n\n###### Example\n\nThe below example shows how `parse` can be used to create a syntax tree from a\nfile.\n\n```js\nvar unified = require('unified')\nvar markdown = require('remark-parse')\n\nvar tree = unified().use(markdown).parse('# Hello world!')\n\nconsole.log(tree)\n```\n\nYields:\n\n```js\n{\n  type: 'root',\n  children: [\n    {type: 'heading', depth: 1, children: [Array], position: [Position]}\n  ],\n  position: {\n    start: {line: 1, column: 1, offset: 0},\n    end: {line: 1, column: 15, offset: 14}\n  }\n}\n```\n\n#### `processor.Parser`\n\nA **parser** handles the parsing of text to a [*syntax tree*][syntax-tree].\nUsed in the [*parse phase*][description] and called with a `string` and\n[`VFile`][vfile] representation of the text to parse.\n\n`Parser` can be a function, in which case it must return a [`Node`][node]: the\nsyntax tree representation of the given file.\n\n`Parser` can also be a constructor function (a function with a `parse` field, or\nother fields, in its `prototype`), in which case it’s constructed with `new`.\nInstances must have a `parse` method that is called without arguments and must\nreturn a [`Node`][node].\n\n### `processor.stringify(node[, file])`\n\nCompile a [*syntax tree*][syntax-tree].\n\n###### Parameters\n\n*   `node` ([`Node`][node]) — [*Syntax tree*][syntax-tree] to compile\n*   `file` ([`VFile`][vfile], optional) — [*File*][file], any value accepted by\n    `vfile()`\n\n###### Returns\n\n`string` or `Buffer` (see notes) — Textual representation of the [*syntax\ntree*][syntax-tree]\n\n###### Note\n\n`stringify` freezes the processor if not already [*frozen*][freeze].\n\n`stringify` performs the [*stringify phase*][description], not the *run phase*\nor other phases.\n\nunified typically compiles by serializing: most [*compiler*][compiler]s return\n`string` (or `Buffer`).\nSome compilers, such as the one configured with [`rehype-react`][rehype-react],\nreturn other values (in this case, a React tree).\nIf you’re using a compiler doesn’t serialize, expect different result values.\nWhen using TypeScript, cast the type on your side.\n\n###### Example\n\nThe below example shows how `stringify` can be used to serialize a syntax tree.\n\n```js\nvar unified = require('unified')\nvar html = require('rehype-stringify')\nvar h = require('hastscript')\n\nvar tree = h('h1', 'Hello world!')\n\nvar doc = unified().use(html).stringify(tree)\n\nconsole.log(doc)\n```\n\nYields:\n\n```html\n<h1>Hello world!</h1>\n```\n\n#### `processor.Compiler`\n\nA **compiler** handles the compiling of a [*syntax tree*][syntax-tree] to text.\nUsed in the [*stringify phase*][description] and called with a [`Node`][node]\nand [`VFile`][file] representation of syntax tree to compile.\n\n`Compiler` can be a function, in which case it should return a `string`: the\ntextual representation of the syntax tree.\n\n`Compiler` can also be a constructor function (a function with a `compile`\nfield, or other fields, in its `prototype`), in which case it’s constructed with\n`new`.\nInstances must have a `compile` method that is called without arguments and\nshould return a `string`.\n\n### `processor.run(node[, file][, done])`\n\nRun [*transformers*][transformer] on a [*syntax tree*][syntax-tree].\n\n###### Parameters\n\n*   `node` ([`Node`][node]) — [*Syntax tree*][syntax-tree] to run on\n*   `file` ([`VFile`][vfile], optional) — [*File*][file], any value accepted by\n    `vfile()`\n*   `done` ([`Function`][run-done], optional) — Callback\n\n###### Returns\n\n[`Promise`][promise] if `done` is not given.\nThe returned promise is rejected with a fatal error, or resolved with the\ntransformed [*syntax tree*][syntax-tree].\n\n###### Note\n\n`run` freezes the processor if not already [*frozen*][freeze].\n\n`run` performs the [*run phase*][description], not other phases.\n\n#### `function done(err[, node, file])`\n\nCallback called when [*transformers*][transformer] are done.\nCalled with either an error or results.\n\n###### Parameters\n\n*   `err` (`Error`, optional) — Fatal error\n*   `node` ([`Node`][node], optional) — Transformed [*syntax tree*][syntax-tree]\n*   `file` ([`VFile`][vfile], optional) — [*File*][file]\n\n###### Example\n\nThe below example shows how `run` can be used to transform a syntax tree.\n\n```js\nvar unified = require('unified')\nvar references = require('remark-reference-links')\nvar u = require('unist-builder')\n\nvar tree = u('root', [\n  u('paragraph', [\n    u('link', {href: 'https://example.com'}, [u('text', 'Example Domain')])\n  ])\n])\n\nunified()\n  .use(references)\n  .run(tree, function (err, tree) {\n    if (err) throw err\n    console.log(tree)\n  })\n```\n\nYields:\n\n```js\n{\n  type: 'root',\n  children: [\n    {type: 'paragraph', children: [Array]},\n    {type: 'definition', identifier: '1', title: undefined, url: undefined}\n  ]\n}\n```\n\n### `processor.runSync(node[, file])`\n\nRun [*transformers*][transformer] on a [*syntax tree*][syntax-tree].\n\nAn error is thrown if asynchronous [*plugin*][plugin]s are configured.\n\n###### Parameters\n\n*   `node` ([`Node`][node]) — [*Syntax tree*][syntax-tree] to run on\n*   `file` ([`VFile`][vfile], optional) — [*File*][file], any value accepted by\n    `vfile()`\n\n###### Returns\n\n[`Node`][node] — Transformed [*syntax tree*][syntax-tree].\n\n###### Note\n\n`runSync` freezes the processor if not already [*frozen*][freeze].\n\n`runSync` performs the [*run phase*][description], not other phases.\n\n### `processor.process(file[, done])`\n\n[*Process*][description] the given [*file*][file] as configured on the\nprocessor.\n\n###### Parameters\n\n*   `file` ([`VFile`][vfile]) — [*File*][file], any value accepted by `vfile()`\n*   `done` ([`Function`][process-done], optional) — Callback\n\n###### Returns\n\n[`Promise`][promise] if `done` is not given.\nThe returned promise is rejected with a fatal error, or resolved with the\nprocessed [*file*][file].\n\nThe parsed, transformed, and compiled value is exposed on\n[`file.contents`][vfile-contents] or `file.result` (see notes).\n\n###### Note\n\n`process` freezes the processor if not already [*frozen*][freeze].\n\n`process` performs the [*parse*, *run*, and *stringify* phases][description].\n\nunified typically compiles by serializing: most [*compiler*][compiler]s return\n`string` (or `Buffer`).\nSome compilers, such as the one configured with [`rehype-react`][rehype-react],\nreturn other values (in this case, a React tree).\nIf you’re using a compiler that serializes, the result is available at\n`file.contents`.\nOtherwise, the result is available at `file.result`.\n\n###### Example\n\nThe below example shows how `process` can be used to process a file, whether\ntransformers are asynchronous or not, with promises.\n\n```js\nvar unified = require('unified')\nvar markdown = require('remark-parse')\nvar remark2rehype = require('remark-rehype')\nvar doc = require('rehype-document')\nvar format = require('rehype-format')\nvar html = require('rehype-stringify')\n\nunified()\n  .use(markdown)\n  .use(remark2rehype)\n  .use(doc, {title: '👋🌍'})\n  .use(format)\n  .use(html)\n  .process('# Hello world!')\n  .then(\n    function (file) {\n      console.log(String(file))\n    },\n    function (err) {\n      console.error(String(err))\n    }\n  )\n```\n\nYields:\n\n```html\n<!doctype html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <title>👋🌍</title>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  </head>\n  <body>\n    <h1>Hello world!</h1>\n  </body>\n</html>\n```\n\n#### `function done(err, file)`\n\nCallback called when the [*process*][description] is done.\nCalled with a fatal error, if any, and a [*file*][file].\n\n###### Parameters\n\n*   `err` (`Error`, optional) — Fatal error\n*   `file` ([`VFile`][vfile]) — Processed [*file*][file]\n\n###### Example\n\nThe below example shows how `process` can be used to process a file, whether\ntransformers are asynchronous or not, with a callback.\n\n```js\nvar unified = require('unified')\nvar parse = require('remark-parse')\nvar stringify = require('remark-stringify')\nvar github = require('remark-github')\nvar report = require('vfile-reporter')\n\nunified()\n  .use(parse)\n  .use(github)\n  .use(stringify)\n  .process('@wooorm', function (err, file) {\n    console.error(report(err || file))\n    console.log(String(file))\n  })\n```\n\nYields:\n\n```txt\nno issues found\n```\n\n```markdown\n[**@wooorm**](https://github.com/wooorm)\n```\n\n### `processor.processSync(file|value)`\n\n[*Process*][description] the given [*file*][file] as configured on the\nprocessor.\n\nAn error is thrown if asynchronous [*plugin*][plugin]s are configured.\n\n###### Parameters\n\n*   `file` ([`VFile`][vfile]) — [*File*][file], any value accepted by `vfile()`\n\n###### Returns\n\n([`VFile`][vfile]) — Processed [*file*][file]\n\nThe parsed, transformed, and compiled value is exposed on\n[`file.contents`][vfile-contents] or `file.result` (see notes).\n\n###### Note\n\n`processSync` freezes the processor if not already [*frozen*][freeze].\n\n`processSync` performs the [*parse*, *run*, and *stringify*\nphases][description].\n\nunified typically compiles by serializing: most [*compiler*][compiler]s return\n`string` (or `Buffer`).\nSome compilers, such as the one configured with [`rehype-react`][rehype-react],\nreturn other values (in this case, a React tree).\nIf you’re using a compiler that serializes, the result is available at\n`file.contents`.\nOtherwise, the result is available at `file.result`.\n\n###### Example\n\nThe below example shows how `processSync` can be used to process a file, if all\ntransformers are synchronous.\n\n```js\nvar unified = require('unified')\nvar markdown = require('remark-parse')\nvar remark2rehype = require('remark-rehype')\nvar doc = require('rehype-document')\nvar format = require('rehype-format')\nvar html = require('rehype-stringify')\n\nvar processor = unified()\n  .use(markdown)\n  .use(remark2rehype)\n  .use(doc, {title: '👋🌍'})\n  .use(format)\n  .use(html)\n\nconsole.log(processor.processSync('# Hello world!').toString())\n```\n\nYields:\n\n```html\n<!doctype html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <title>👋🌍</title>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  </head>\n  <body>\n    <h1>Hello world!</h1>\n  </body>\n</html>\n```\n\n### `processor.data([key[, value]])`\n\n[*Configure*][configuration] the processor with information available to all\n[*plugin*][plugin]s.\nInformation is stored in an in-memory key-value store.\n\nTypically, options can be given to a specific plugin, but sometimes it makes\nsense to have information shared with several plugins.\nFor example, a list of HTML elements that are self-closing, which is needed\nduring all [*phases*][description] of the *process*.\n\n###### Signatures\n\n*   `processor = processor.data(key, value)`\n*   `processor = processor.data(values)`\n*   `value = processor.data(key)`\n*   `info = processor.data()`\n\n###### Parameters\n\n*   `key` (`string`, optional) — Identifier\n*   `value` (`*`, optional) — Value to set\n*   `values` (`Object`, optional) — Values to set\n\n###### Returns\n\n*   `processor` — If setting, the processor that `data` is called on\n*   `value` (`*`) — If getting, the value at `key`\n*   `info` (`Object`) — Without arguments, the key-value store\n\n###### Note\n\nSetting information cannot occur on [*frozen*][freeze] processors.\nCall the processor first to create a new unfrozen processor.\n\n###### Example\n\nThe following example show how to get and set information:\n\n```js\nvar unified = require('unified')\n\nvar processor = unified().data('alpha', 'bravo')\n\nprocessor.data('alpha') // => 'bravo'\n\nprocessor.data() // {alpha: 'bravo'}\n\nprocessor.data({charlie: 'delta'})\n\nprocessor.data() // {charlie: 'delta'}\n```\n\n### `processor.freeze()`\n\n**Freeze** a processor.\n*Frozen* processors are meant to be extended and not to be configured directly.\n\nOnce a processor is frozen it cannot be *unfrozen*.\nNew processors working the same way can be created by calling the processor.\n\nIt’s possible to freeze processors explicitly by calling `.freeze()`.\nProcessors freeze implicitly when [`.parse()`][parse], [`.run()`][run],\n[`.runSync()`][run-sync], [`.stringify()`][stringify], [`.process()`][process],\nor [`.processSync()`][process-sync] are called.\n\n###### Returns\n\n`processor` — The processor that `freeze` was called on.\n\n###### Example\n\nThe following example, `index.js`, shows how rehype prevents extensions to\nitself:\n\n```js\nvar unified = require('unified')\nvar parse = require('rehype-parse')\nvar stringify = require('rehype-stringify')\n\nmodule.exports = unified().use(parse).use(stringify).freeze()\n```\n\nThe below example, `a.js`, shows how that processor can be used and configured.\n\n```js\nvar rehype = require('rehype')\nvar format = require('rehype-format')\n// …\n\nrehype()\n  .use(format)\n  // …\n```\n\nThe below example, `b.js`, shows a similar looking example that operates on the\nfrozen rehype interface because it does not call `rehype`.\nIf this behavior was allowed it would result in unexpected behavior so an\nerror is thrown.\n**This is invalid**:\n\n```js\nvar rehype = require('rehype')\nvar format = require('rehype-format')\n// …\n\nrehype\n  .use(format)\n  // …\n```\n\nYields:\n\n```txt\n~/node_modules/unified/index.js:440\n    throw new Error(\n    ^\n\nError: Cannot invoke `use` on a frozen processor.\nCreate a new processor first, by invoking it: use `processor()` instead of `processor`.\n    at assertUnfrozen (~/node_modules/unified/index.js:440:11)\n    at Function.use (~/node_modules/unified/index.js:172:5)\n    at Object.<anonymous> (~/b.js:6:4)\n```\n\n## `Plugin`\n\n**Plugins** [*configure*][configuration] the processors they are applied on in\nthe following ways:\n\n*   They change the processor: such as the [*parser*][parser], the\n    [*compiler*][compiler], or configuring [*data*][data]\n*   They specify how to handle [*syntax trees*][syntax-tree] and [*files*][file]\n\nPlugins are a concept.\nThey materialize as [`attacher`][attacher]s.\n\n###### Example\n\n`move.js`:\n\n```js\nmodule.exports = move\n\nfunction move(options) {\n  var expected = (options || {}).extname\n\n  if (!expected) {\n    throw new Error('Missing `extname` in options')\n  }\n\n  return transformer\n\n  function transformer(tree, file) {\n    if (file.extname && file.extname !== expected) {\n      file.extname = expected\n    }\n  }\n}\n```\n\n`index.md`:\n\n```markdown\n# Hello, world!\n```\n\n`index.js`:\n\n```js\nvar unified = require('unified')\nvar parse = require('remark-parse')\nvar remark2rehype = require('remark-rehype')\nvar stringify = require('rehype-stringify')\nvar vfile = require('to-vfile')\nvar report = require('vfile-reporter')\nvar move = require('./move')\n\nunified()\n  .use(parse)\n  .use(remark2rehype)\n  .use(move, {extname: '.html'})\n  .use(stringify)\n  .process(vfile.readSync('index.md'), function (err, file) {\n    console.error(report(err || file))\n    if (file) {\n      vfile.writeSync(file) // Written to `index.html`.\n    }\n  })\n```\n\nYields:\n\n```txt\nindex.md: no issues found\n```\n\n`index.html`:\n\n```html\n<h1>Hello, world!</h1>\n```\n\n### `function attacher([options])`\n\n**Attachers** are materialized [*plugin*][plugin]s.\nAn attacher is a function that can receive options and\n[*configures*][configuration] the processor.\n\nAttachers change the processor, such as the [*parser*][parser], the\n[*compiler*][compiler], configuring [*data*][data], or by specifying how the\n[*syntax tree*][syntax-tree] or [*file*][file] are handled.\n\n###### Context\n\nThe context object (`this`) is set to the processor the attacher is applied on.\n\n###### Parameters\n\n*   `options` (`*`, optional) — Configuration\n\n###### Returns\n\n[`transformer`][transformer] — Optional.\n\n###### Note\n\nAttachers are called when the processor is [*frozen*][freeze], not when they are\napplied.\n\n### `function transformer(node, file[, next])`\n\n**Transformers** handle [*syntax tree*][syntax-tree]s and [*file*][file]s.\nA transformer is a function that is called each time a syntax tree and file are\npassed through the [*run phase*][description].\nIf an error occurs (either because it’s thrown, returned, rejected, or passed to\n[`next`][next]), the process stops.\n\nThe *run phase* is handled by [`trough`][trough], see its documentation for the\nexact semantics of these functions.\n\n###### Parameters\n\n*   `node` ([`Node`][node]) — [*Syntax tree*][syntax-tree] to handle\n*   `file` ([`VFile`][vfile]) — [*File*][file] to handle\n*   `next` ([`Function`][next], optional)\n\n###### Returns\n\n*   `void` — If nothing is returned, the next transformer keeps using same tree.\n*   `Error` — Fatal error to stop the process\n*   `node` ([`Node`][node]) — New [*syntax tree*][syntax-tree].\n    If returned, the next transformer is given this new tree\n*   `Promise` — Returned to perform an asynchronous operation.\n    The promise **must** be resolved (optionally with a [`Node`][node]) or\n    rejected (optionally with an `Error`)\n\n#### `function next(err[, tree[, file]])`\n\nIf the signature of a [*transformer*][transformer] includes `next` (the third\nargument), the transformer **may** perform asynchronous operations, and **must**\ncall `next()`.\n\n###### Parameters\n\n*   `err` (`Error`, optional) — Fatal error to stop the process\n*   `node` ([`Node`][node], optional) — New [*syntax tree*][syntax-tree].\n    If given, the next transformer is given this new tree\n*   `file` ([`VFile`][vfile], optional) — New [*file*][file].\n    If given, the next transformer is given this new file\n\n## `Preset`\n\n**Presets** are sharable [*configuration*][configuration].\nThey can contain [*plugins*][plugin] and settings.\n\n###### Example\n\n`preset.js`:\n\n```js\nexports.settings = {bullet: '*', emphasis: '*', fences: true}\n\nexports.plugins = [\n  require('remark-preset-lint-recommended'),\n  require('remark-preset-lint-consistent'),\n  require('remark-comment-config'),\n  [require('remark-toc'), {maxDepth: 3, tight: true}],\n  require('remark-license')\n]\n```\n\n`readme.md`:\n\n```markdown\n# Hello, world!\n\n_Emphasis_ and **importance**.\n\n## Table of contents\n\n## API\n\n## License\n```\n\n`index.js`:\n\n```js\nvar remark = require('remark')\nvar vfile = require('to-vfile')\nvar report = require('vfile-reporter')\nvar preset = require('./preset')\n\nremark()\n  .use(preset)\n  .process(vfile.readSync('readme.md'), function (err, file) {\n    console.error(report(err || file))\n\n    if (file) {\n      vfile.writeSync(file)\n    }\n  })\n```\n\nYields:\n\n```txt\nreadme.md: no issues found\n```\n\n`readme.md` now contains:\n\n```markdown\n# Hello, world!\n\n*Emphasis* and **importance**.\n\n## Table of contents\n\n*   [API](#api)\n*   [License](#license)\n\n## API\n\n## License\n\n[MIT](license) © [Titus Wormer](https://wooorm.com)\n```\n\n## Contribute\n\nSee [`contributing.md`][contributing] in [`unifiedjs/.github`][health] for ways\nto get started.\nSee [`support.md`][support] for ways to get help.\nIdeas for new plugins and tools can be posted in [`unifiedjs/ideas`][ideas].\n\nA curated list of awesome unified resources can be found in [**awesome\nunified**][awesome].\n\nThis project has a [code of conduct][coc].\nBy interacting with this repository, organization, or community you agree to\nabide by its terms.\n\n## Acknowledgments\n\nPreliminary work for unified was done [in 2014][preliminary] for\n[**retext**][retext] and inspired by [`ware`][ware].\nFurther incubation happened in [**remark**][remark].\nThe project was finally [externalised][] in 2015 and [published][] as `unified`.\nThe project was authored by [**@wooorm**](https://github.com/wooorm).\n\nAlthough `unified` since moved its plugin architecture to [`trough`][trough],\nthanks to [**@calvinfo**](https://github.com/calvinfo),\n[**@ianstormtaylor**](https://github.com/ianstormtaylor), and others for their\nwork on [`ware`][ware], as it was a huge initial inspiration.\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[logo]: https://raw.githubusercontent.com/unifiedjs/unified/93862e5/logo.svg?sanitize=true\n\n[build-badge]: https://github.com/unifiedjs/unified/workflows/main/badge.svg\n\n[build]: https://github.com/unifiedjs/unified/actions\n\n[coverage-badge]: https://img.shields.io/codecov/c/github/unifiedjs/unified.svg\n\n[coverage]: https://codecov.io/github/unifiedjs/unified\n\n[downloads-badge]: https://img.shields.io/npm/dm/unified.svg\n\n[downloads]: https://www.npmjs.com/package/unified\n\n[size-badge]: https://img.shields.io/bundlephobia/minzip/unified.svg\n\n[size]: https://bundlephobia.com/result?p=unified\n\n[sponsors-badge]: https://opencollective.com/unified/sponsors/badge.svg\n\n[backers-badge]: https://opencollective.com/unified/backers/badge.svg\n\n[collective]: https://opencollective.com/unified\n\n[chat-badge]: https://img.shields.io/badge/chat-discussions-success.svg\n\n[chat]: https://github.com/unifiedjs/unified/discussions\n\n[health]: https://github.com/unifiedjs/.github\n\n[contributing]: https://github.com/unifiedjs/.github/blob/HEAD/contributing.md\n\n[support]: https://github.com/unifiedjs/.github/blob/HEAD/support.md\n\n[coc]: https://github.com/unifiedjs/.github/blob/HEAD/code-of-conduct.md\n\n[awesome]: https://github.com/unifiedjs/awesome-unified\n\n[license]: license\n\n[author]: https://wooorm.com\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[ts-unist]: https://www.npmjs.com/package/@types/unist\n\n[site]: https://unifiedjs.com\n\n[twitter]: https://twitter.com/unifiedjs\n\n[learn]: https://unifiedjs.com/learn/\n\n[rehype]: https://github.com/rehypejs/rehype\n\n[remark]: https://github.com/remarkjs/remark\n\n[retext]: https://github.com/retextjs/retext\n\n[hast]: https://github.com/syntax-tree/hast\n\n[mdast]: https://github.com/syntax-tree/mdast\n\n[nlcst]: https://github.com/syntax-tree/nlcst\n\n[xast]: https://github.com/syntax-tree/xast\n\n[unist]: https://github.com/syntax-tree/unist\n\n[engine]: https://github.com/unifiedjs/unified-engine\n\n[args]: https://github.com/unifiedjs/unified-args\n\n[gulp]: https://github.com/unifiedjs/unified-engine-gulp\n\n[atom]: https://github.com/unifiedjs/unified-engine-atom\n\n[remark-rehype]: https://github.com/remarkjs/remark-rehype\n\n[remark-retext]: https://github.com/remarkjs/remark-retext\n\n[rehype-retext]: https://github.com/rehypejs/rehype-retext\n\n[rehype-remark]: https://github.com/rehypejs/rehype-remark\n\n[unist-utilities]: https://github.com/syntax-tree/unist#list-of-utilities\n\n[vfile]: https://github.com/vfile/vfile\n\n[vfile-contents]: https://github.com/vfile/vfile#vfilecontents\n\n[vfile-utilities]: https://github.com/vfile/vfile#related-tools\n\n[node]: https://github.com/syntax-tree/unist#node\n\n[description]: #description\n\n[syntax-tree]: #syntax-trees\n\n[configuration]: #configuration\n\n[file]: #file\n\n[processors]: #processors\n\n[process]: #processorprocessfile-done\n\n[process-sync]: #processorprocesssyncfilevalue\n\n[parse]: #processorparsefile\n\n[parser]: #processorparser\n\n[stringify]: #processorstringifynode-file\n\n[run]: #processorrunnode-file-done\n\n[run-sync]: #processorrunsyncnode-file\n\n[compiler]: #processorcompiler\n\n[data]: #processordatakey-value\n\n[attacher]: #function-attacheroptions\n\n[transformer]: #function-transformernode-file-next\n\n[next]: #function-nexterr-tree-file\n\n[freeze]: #processorfreeze\n\n[plugin]: #plugin\n\n[run-done]: #function-doneerr-node-file\n\n[process-done]: #function-doneerr-file\n\n[contribute]: #contribute\n\n[rehype-react]: https://github.com/rhysd/rehype-react\n\n[trough]: https://github.com/wooorm/trough#function-fninput-next\n\n[promise]: https://developer.mozilla.org/Web/JavaScript/Reference/Global_Objects/Promise\n\n[remark-plugins]: https://github.com/remarkjs/remark/blob/HEAD/doc/plugins.md#list-of-plugins\n\n[rehype-plugins]: https://github.com/rehypejs/rehype/blob/HEAD/doc/plugins.md#list-of-plugins\n\n[retext-plugins]: https://github.com/retextjs/retext/blob/HEAD/doc/plugins.md#list-of-plugins\n\n[stream]: https://github.com/unifiedjs/unified-stream\n\n[ideas]: https://github.com/unifiedjs/ideas\n\n[preliminary]: https://github.com/retextjs/retext/commit/8fcb1f#diff-168726dbe96b3ce427e7fedce31bb0bc\n\n[externalised]: https://github.com/remarkjs/remark/commit/9892ec#diff-168726dbe96b3ce427e7fedce31bb0bc\n\n[published]: https://github.com/unifiedjs/unified/commit/2ba1cf\n\n[ware]: https://github.com/segmentio/ware\n\n[gatsby]: https://www.gatsbyjs.org\n\n[mdx]: https://mdxjs.com\n\n[jsx]: https://reactjs.org/docs/jsx-in-depth.html\n\n[prettier]: https://prettier.io\n\n[node.js]: https://nodejs.org\n\n[vercel]: https://vercel.com\n\n[netlify]: https://www.netlify.com\n\n[github]: https://github.com\n\n[mozilla]: https://www.mozilla.org\n\n[wordpress]: https://wordpress.com\n\n[adobe]: https://www.adobe.com\n\n[facebook]: https://www.facebook.com\n\n[google]: https://www.google.com\n","funding":{"url":"https://opencollective.com/unified","type":"opencollective"},"gitHead":"0938bde3ea3d78b57ed7f5a54644d542be114100","scripts":{"test":"npm run format && npm run build && npm run test-coverage && npm run test-types","build":"npm run build-bundle && npm run build-mangle","format":"remark . -qfo && prettier . -w --loglevel warn && xo --fix","test-api":"node test","test-types":"npm run test-types-3.4 && npm run test-types-4.0","build-bundle":"browserify index.js -s unified -o unified.js","build-mangle":"browserify index.js -s unified -p tinyify -o unified.min.js","test-coverage":"c8 --check-coverage --lines 100 --functions 100 --branches 100 --reporter lcov tape test","test-types-3.4":"dtslint types/ts3.4","test-types-4.0":"dtslint types/ts4.0"},"_npmUser":{"name":"wooorm","email":"tituswormer@gmail.com"},"prettier":{"semi":false,"useTabs":false,"tabWidth":2,"singleQuote":true,"trailingComma":"none","bracketSpacing":false},"repository":{"url":"git+https://github.com/unifiedjs/unified.git","type":"git"},"_npmVersion":"7.18.1","description":"Interface for parsing, inspecting, transforming, and serializing content through syntax trees","directories":{},"_nodeVersion":"16.2.0","dependencies":{"bail":"^1.0.0","vfile":"^4.0.0","extend":"^3.0.0","trough":"^1.0.0","is-buffer":"^2.0.0","is-plain-obj":"^2.0.0"},"remarkConfig":{"plugins":["preset-wooorm"]},"typesVersions":{">=4.0":{"types/ts3.4/*":["types/ts4.0/*"]}},"_hasShrinkwrap":false,"readmeFilename":"readme.md","devDependencies":{"c8":"^7.0.0","xo":"^0.38.0","tape":"^5.0.0","vfile5":"npm:vfile@5","dtslint":"^4.0.0","tinyify":"^3.0.0","prettier":"^2.0.0","browserify":"^17.0.0","remark-cli":"^9.0.0","remark-preset-wooorm":"^8.0.0"},"_npmOperationalInternal":{"tmp":"tmp/unified_9.2.2_1625157551175_0.17966020279288086","host":"s3://npm-registry-packages"}},"10.0.0-beta.1":{"name":"unified","version":"10.0.0-beta.1","keywords":["unified","process","parse","transform","compile","stringify","serialize","ast","cst","syntax","tree","content","rehype","retext","remark"],"author":{"url":"https://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"},"license":"MIT","_id":"unified@10.0.0-beta.1","maintainers":[{"name":"wooorm","email":"tituswormer@gmail.com"}],"contributors":[{"url":"https://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"},{"name":"Junyoung Choi","email":"fluke8259@gmail.com"},{"name":"Hernan Rajchert","email":"hrajchert@gmail.com"},{"name":"Christian Murphy","email":"christian.murphy.42@gmail.com"},{"name":"Vse Mozhet Byt","email":"vsemozhetbyt@gmail.com"},{"name":"Richard Littauer","email":"richard.littauer@gmail.com"}],"homepage":"https://unifiedjs.com","bugs":{"url":"https://github.com/unifiedjs/unified/issues"},"xo":{"ignores":["types/"],"prettier":true},"dist":{"shasum":"0d5112496749c65d3d4c057edc2b1d118903e2ad","tarball":"https://registry.npmjs.org/unified/-/unified-10.0.0-beta.1.tgz","fileCount":5,"integrity":"sha512-LzygxMx6Bn8agXoZLEcB77dZNhDx+iKDnQHOa91UXSS2vSH2bWTaVtgAuTBvFFwJ+snupAoiiSCYQ2UKsjCiZg==","signatures":[{"sig":"MEUCIQDHInDfFiWMZ9D/pDDpxdwuyQbJaKC4xrrM1nTVQVocCQIgexbAODqOjdgtUqcgFQp7DLoOqRd9ECjj7cBQXJYyRF0=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":66699,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJg5BOrCRA9TVsSAnZWagAA9ioP/0wKLN4T4qIkFTpr3vJb\nclht4Y9QtKAJrRoiC5ZORZKNMwkjuPPsztGpORXw9nBafAVzxCord5sou/ch\nVqhVerlpQafUK74EVVg11f2E7jexuDaaPwSrYal8kT1vRwlnHcv0YAE1SRgH\nKSeKZwYNOwC2pREFLjklvBpMQCr68XUl1A08B241BumfvDnl6aZObjHheSfF\nb8wUWuSmdnRFxC0bbh7lQkcT/nA7jwDwguPb3XVTAL8gsudtdrHcvZzB3x6O\n6uBYTrfkx01Jw1FA39jP47obUKSx8l0wqYjiJVi6lkzsBR8mVSjIPSgjfXuU\nyUgjmKyJp/hevBf5FYdxBABmLgKffLm7PIq6MveXeOz7Suu85JBlYLsAzuba\nZ0olvIr//xz0OW/pppi2uCtm1Kw4ic3SGMZ1gNv35s1OrJL1JV6wJnr6JSBl\nYvgorD1pbZby2TSXYMcEjI1VldTht3l8Pd28kOGSDw/lPuw2cftCKuaTREHQ\nDdVUQAzq9cMulrn0FClL9xh/QDh6xBiCtyNLcfvSk8iSU7Kd5+sFCSmhZiAj\nMO+MgI2ReRq/fxYhBWXySeKcZ3ED1IYWq2wO3kZ68MU9Cwax8EdHgU0/3/AL\nXZRn7C9WISnkwuQp8kX15UOPhVOpTP2eDSQtRgVK2w/CQmpav8LmCiTOqJ7p\nVbdg\r\n=Mvpk\r\n-----END PGP SIGNATURE-----\r\n"},"main":"index.js","type":"module","types":"types/index.d.ts","readme":"# [![unified][logo]][site]\n\n[![Build][build-badge]][build]\n[![Coverage][coverage-badge]][coverage]\n[![Downloads][downloads-badge]][downloads]\n[![Size][size-badge]][size]\n[![Sponsors][sponsors-badge]][collective]\n[![Backers][backers-badge]][collective]\n[![Chat][chat-badge]][chat]\n\n**unified** is an interface for processing text using syntax trees.\nIt’s what powers [**remark**][remark] (Markdown), [**retext**][retext] (natural\nlanguage), and [**rehype**][rehype] (HTML), and allows for processing between\nformats.\n\n## Intro\n\n**unified** enables new exciting projects like [Gatsby][] to pull in Markdown,\n[MDX][] to embed [JSX][], and [Prettier][] to format it.\nIt’s used in about 500k projects on GitHub and has about 25m downloads each\nmonth on npm: you’re probably using it.\nSome notable users are [Node.js][], [Vercel][], [Netlify][], [GitHub][],\n[Mozilla][], [WordPress][], [Adobe][], [Facebook][], [Google][], and many more.\n\n*   To read about what we are up to, follow us [Twitter][]\n*   For a less technical and more practical introduction to unified, visit\n    [`unifiedjs.com`][site] and peruse its [Learn][] section\n*   Browse [awesome unified][awesome] to find out more about the ecosystem\n*   Questions?\n    Get help on [Discussions][chat]!\n*   Check out [Contribute][] below to find out how to help out, or become a\n    backer or sponsor on [OpenCollective][collective]\n\n## Sponsors\n\nSupport this effort and give back by sponsoring on [OpenCollective][collective]!\n\n<!--lint ignore no-html-->\n\n<table>\n<tr valign=\"middle\">\n<td width=\"20%\" align=\"center\" colspan=\"2\">\n  <a href=\"https://www.gatsbyjs.org\">Gatsby</a> 🥇<br><br>\n  <a href=\"https://www.gatsbyjs.org\"><img src=\"https://avatars1.githubusercontent.com/u/12551863?s=256&v=4\" width=\"128\"></a>\n</td>\n<td width=\"20%\" align=\"center\" colspan=\"2\">\n  <a href=\"https://vercel.com\">Vercel</a> 🥇<br><br>\n  <a href=\"https://vercel.com\"><img src=\"https://avatars1.githubusercontent.com/u/14985020?s=256&v=4\" width=\"128\"></a>\n</td>\n<td width=\"20%\" align=\"center\" colspan=\"2\">\n  <a href=\"https://www.netlify.com\">Netlify</a><br><br>\n  <!--OC has a sharper image-->\n  <a href=\"https://www.netlify.com\"><img src=\"https://images.opencollective.com/netlify/4087de2/logo/256.png\" width=\"128\"></a>\n</td>\n<td width=\"10%\" align=\"center\">\n  <a href=\"https://www.holloway.com\">Holloway</a><br><br>\n  <a href=\"https://www.holloway.com\"><img src=\"https://avatars1.githubusercontent.com/u/35904294?s=128&v=4\" width=\"64\"></a>\n</td>\n<td width=\"10%\" align=\"center\">\n  <a href=\"https://themeisle.com\">ThemeIsle</a><br><br>\n  <a href=\"https://themeisle.com\"><img src=\"https://avatars1.githubusercontent.com/u/58979018?s=128&v=4\" width=\"64\"></a>\n</td>\n<td width=\"10%\" align=\"center\">\n  <a href=\"https://boosthub.io\">Boost Hub</a><br><br>\n  <a href=\"https://boosthub.io\"><img src=\"https://images.opencollective.com/boosthub/6318083/logo/128.png\" width=\"64\"></a>\n</td>\n<td width=\"10%\" align=\"center\">\n  <a href=\"https://expo.io\">Expo</a><br><br>\n  <a href=\"https://expo.io\"><img src=\"https://avatars1.githubusercontent.com/u/12504344?s=128&v=4\" width=\"64\"></a>\n</td>\n</tr>\n<tr valign=\"middle\">\n<td width=\"100%\" align=\"center\" colspan=\"10\">\n  <br>\n  <a href=\"https://opencollective.com/unified\"><strong>You?</strong></a>\n  <br><br>\n</td>\n</tr>\n</table>\n\n## Install\n\nThis package is [ESM only](https://gist.github.com/sindresorhus/a39789f98801d908bbc7ff3ecc99d99c):\nNode 12+ is needed to use it and it must be `import`ed instead of `require`d.\n\n[npm][]:\n\n```sh\nnpm install unified\n```\n\n## Use\n\n```js\nimport {unified} from 'unified'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport rehypeDocument from 'rehype-document'\nimport rehypeFormat from 'rehype-format'\nimport rehypeStringify from 'rehype-stringify'\nimport {reporter} from 'vfile-reporter'\n\nunified()\n  .use(remarkParse)\n  .use(remarkRehype)\n  .use(rehypeDocument, {title: '👋🌍'})\n  .use(rehypeFormat)\n  .use(rehypeStringify)\n  .process('# Hello world!')\n  .then(\n    (file) => {\n      console.error(reporter(file))\n      console.log(String(file))\n    },\n    (error) => {\n      // Handle your error here!\n      throw error\n    }\n  )\n```\n\nYields:\n\n```txt\nno issues found\n```\n\n```html\n<!doctype html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <title>👋🌍</title>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  </head>\n  <body>\n    <h1>Hello world!</h1>\n  </body>\n</html>\n```\n\n## Contents\n\n*   [Description](#description)\n*   [API](#api)\n    *   [`processor()`](#processor)\n    *   [`processor.use(plugin[, options])`](#processoruseplugin-options)\n    *   [`processor.parse(file)`](#processorparsefile)\n    *   [`processor.stringify(node[, file])`](#processorstringifynode-file)\n    *   [`processor.run(node[, file][, done])`](#processorrunnode-file-done)\n    *   [`processor.runSync(node[, file])`](#processorrunsyncnode-file)\n    *   [`processor.process(file[, done])`](#processorprocessfile-done)\n    *   [`processor.processSync(file|value)`](#processorprocesssyncfilevalue)\n    *   [`processor.data([key[, value]])`](#processordatakey-value)\n    *   [`processor.freeze()`](#processorfreeze)\n*   [`Plugin`](#plugin)\n    *   [`function attacher([options])`](#function-attacheroptions)\n    *   [`function transformer(node, file[, next])`](#function-transformernode-file-next)\n*   [`Preset`](#preset)\n*   [Contribute](#contribute)\n*   [Acknowledgments](#acknowledgments)\n*   [License](#license)\n\n## Description\n\n**unified** is an interface for processing text using syntax trees.\nSyntax trees are a representation of text understandable to programs.\nThose programs, called [*plugin*][plugin]s, take these trees and inspect and\nmodify them.\nTo get to the syntax tree from text, there is a [*parser*][parser].\nTo get from that back to text, there is a [*compiler*][compiler].\nThis is the [*process*][process] of a *processor*.\n\n```ascii\n| ........................ process ........................... |\n| .......... parse ... | ... run ... | ... stringify ..........|\n\n          +--------+                     +----------+\nInput ->- | Parser | ->- Syntax Tree ->- | Compiler | ->- Output\n          +--------+          |          +----------+\n                              X\n                              |\n                       +--------------+\n                       | Transformers |\n                       +--------------+\n```\n\n###### Processors\n\nEvery **processor** implements another processor.\nTo create a processor, call another processor.\nThe new processor is configured to work the same as its ancestor.\nBut when the descendant processor is configured in the future it does not affect\nthe ancestral processor.\n\nWhen processors are exposed from a module (for example, `unified` itself) they\nshould not be configured directly, as that would change their behavior for all\nmodule users.\nThose processors are [*frozen*][freeze] and they should be called to create a\nnew processor before they are used.\n\n###### Syntax trees\n\nThe **syntax trees** used in **unified** are [**unist**][unist] nodes.\nA [**node**][node] is a plain JavaScript objects with a `type` field.\nThe semantics of nodes and format of syntax trees is defined by other projects.\n\nThere are several [*utilities*][unist-utilities] for working with nodes.\n\n*   [**esast**][esast] — JS\n*   [**hast**][hast] — HTML\n*   [**mdast**][mdast] — Markdown\n*   [**nlcst**][nlcst] — Natural language\n*   [**xast**][xast] — XML\n\n###### List of processors\n\nThe following projects process different [*syntax tree*][syntax-tree] formats.\nThey parse text to a syntax tree and compile that back to text.\nThese processors can be used as is, or their parser and compiler can be mixed\nand matched with **unified** and plugins to process between different syntaxes.\n\n*   [**rehype**][rehype] ([*hast*][hast]) — HTML\n*   [**remark**][remark] ([*mdast*][mdast]) — Markdown\n*   [**retext**][retext] ([*nlcst*][nlcst]) — Natural language\n\n###### List of plugins\n\nThe below [**plugins**][plugin] work with **unified**, on all [*syntax\ntree*][syntax-tree] formats:\n\n*   [`unified-diff`](https://github.com/unifiedjs/unified-diff)\n    — Ignore messages for unchanged lines in Travis\n*   [`unified-message-control`](https://github.com/unifiedjs/unified-message-control)\n    — Enable, disable, and ignore messages\n\nSee [**remark**][remark-plugins], [**rehype**][rehype-plugins], and\n[**retext**][retext-plugins] for their lists of plugins.\n\n###### File\n\nWhen processing a document, **metadata** is often gathered about that document.\n[**vfile**][vfile] is a virtual file format that stores data, metadata, and\nmessages about files for **unified** and its plugins.\n\nThere are several [*utilities*][vfile-utilities] for working with these files.\n\n###### Configuration\n\n[*Processors*][processors] are configured with [*plugin*][plugin]s or\nwith the [`data`][data] method.\n\n###### Integrations\n\n**unified** can integrate with the file system with [`unified-engine`][engine].\nCLI apps can be created with [`unified-args`][args], Gulp plugins with\n[`unified-engine-gulp`][gulp], and Atom Linters with\n[`unified-engine-atom`][atom].\n\n[`unified-stream`][stream] provides a streaming interface.\n\n###### Programming interface\n\nThe API provided by **unified** allows multiple files to be processed and gives\naccess to *metadata* (such as lint messages):\n\n```js\nimport {unified} from 'unified'\nimport remarkParse from 'remark-parse'\nimport remarkPresetLintMarkdownStyleGuide from 'remark-preset-lint-markdown-style-guide'\nimport remarkRetext from 'remark-retext'\nimport retextEnglish from 'retext-english'\nimport retextEquality from 'retext-equality'\nimport remarkRehype from 'remark-rehype'\nimport rehypeStringify from 'rehype-stringify'\nimport {reporter} from 'vfile-reporter'\n\nunified()\n  .use(remarkParse)\n  .use(remarkPresetLintMarkdownStyleGuide)\n  .use(remarkRetext, unified().use(retextEnglish).use(retextEquality))\n  .use(remarkRehype)\n  .use(rehypeStringify)\n  .process('*Emphasis* and _stress_, you guys!')\n  .then(\n    (file) => {\n      console.error(reporter(file))\n      console.log(String(file))\n    },\n    (error) => {\n      // Handle your error here!\n      throw error\n    }\n  )\n```\n\nYields:\n\n```txt\n  1:16-1:24  warning  Emphasis should use `*` as a marker                                  emphasis-marker  remark-lint\n  1:30-1:34  warning  `guys` may be insensitive, use `people`, `persons`, `folks` instead  gals-man         retext-equality\n\n⚠ 2 warnings\n```\n\n```html\n<p><em>Emphasis</em> and <em>stress</em>, you guys!</p>\n```\n\n###### Processing between syntaxes\n\n[*Processors*][processors] can be combined in two modes.\n\n**Bridge** mode transforms the [*syntax tree*][syntax-tree] from one format\n(*origin*) to another (*destination*).\nAnother processor runs on the destination tree.\nFinally, the original processor continues transforming the origin tree.\n\n**Mutate** mode also transforms the syntax tree from one format to another.\nBut the original processor continues transforming the destination tree.\n\nIn the previous example (“Programming interface”), `remark-retext` is used in\n*bridge* mode: the origin syntax tree is kept after [**retext**][retext] is\ndone; whereas `remark-rehype` is used in *mutate* mode: it sets a new syntax\ntree and discards the origin tree.\n\n*   [`remark-retext`][remark-retext]\n*   [`remark-rehype`][remark-rehype]\n*   [`rehype-retext`][rehype-retext]\n*   [`rehype-remark`][rehype-remark]\n\n## API\n\nThis package exports the following identifiers: `unified`.\nThere is no default export.\n\n### `processor()`\n\n[*Processor*][processors] describing how to *process* text.\n\n###### Returns\n\n`Function` — New [*unfrozen*][freeze] processor that is configured to work the\nsame as its ancestor.\nWhen the descendant processor is configured in the future it does not affect the\nancestral processor.\n\n###### Example\n\nThe following example shows how a new processor can be created (from the remark\nprocessor) and linked to **stdin**(4) and **stdout**(4).\n\n```js\nimport {remark} from 'remark'\nimport concatStream from 'concat-stream'\n\nprocess.stdin.pipe(\n  concatStream((buf) => {\n    process.stdout.write(remark().processSync(buf).toString())\n  })\n)\n```\n\n### `processor.use(plugin[, options])`\n\n[*Configure*][configuration] the processor to use a [*plugin*][plugin] and\noptionally configure that plugin with options.\n\nIf the processor is already using this plugin, the previous plugin configuration\nis changed based on the options that are passed in.\nThe plugin is not added a second time.\n\n###### Signatures\n\n*   `processor.use(plugin[, options])`\n*   `processor.use(preset)`\n*   `processor.use(list)`\n\n###### Parameters\n\n*   `plugin` ([`Attacher`][plugin])\n*   `options` (`*`, optional) — Configuration for `plugin`\n*   `preset` (`Object`) — Object with an optional `plugins` (set to `list`),\n    and/or an optional `settings` object\n*   `list` (`Array`) — List of plugins, presets, and pairs (`plugin` and\n    `options` in an array)\n\n###### Returns\n\n`processor` — The processor that `use` was called on.\n\n###### Note\n\n`use` cannot be called on [*frozen*][freeze] processors.\nCall the processor first to create a new unfrozen processor.\n\n###### Example\n\nThere are many ways to pass plugins to `.use()`.\nThe below example gives an overview.\n\n```js\nimport {unified} from 'unified'\n\nunified()\n  // Plugin with options:\n  .use(pluginA, {x: true, y: true})\n  // Passing the same plugin again merges configuration (to `{x: true, y: false, z: true}`):\n  .use(pluginA, {y: false, z: true})\n  // Plugins:\n  .use([pluginB, pluginC])\n  // Two plugins, the second with options:\n  .use([pluginD, [pluginE, {}]])\n  // Preset with plugins and settings:\n  .use({plugins: [pluginF, [pluginG, {}]], settings: {position: false}})\n  // Settings only:\n  .use({settings: {position: false}})\n```\n\n### `processor.parse(file)`\n\nParse text to a [*syntax tree*][syntax-tree].\n\n###### Parameters\n\n*   `file` ([`VFile`][vfile]) — [*File*][file], any value accepted by `vfile()`\n\n###### Returns\n\n[`Node`][node] — Parsed [*syntax tree*][syntax-tree] representing `file`.\n\n###### Note\n\n`parse` freezes the processor if not already [*frozen*][freeze].\n\n`parse` performs the [*parse phase*][description], not the *run phase* or other\nphases.\n\n###### Example\n\nThe below example shows how `parse` can be used to create a syntax tree from a\nfile.\n\n```js\nimport {unified} from 'unified'\nimport remarkParse from 'remark-parse'\n\nconst tree = unified().use(remarkParse).parse('# Hello world!')\n\nconsole.log(tree)\n```\n\nYields:\n\n```js\n{\n  type: 'root',\n  children: [\n    {type: 'heading', depth: 1, children: [Array], position: [Position]}\n  ],\n  position: {\n    start: {line: 1, column: 1, offset: 0},\n    end: {line: 1, column: 15, offset: 14}\n  }\n}\n```\n\n#### `processor.Parser`\n\nA **parser** handles the parsing of text to a [*syntax tree*][syntax-tree].\nUsed in the [*parse phase*][description] and called with a `string` and\n[`VFile`][vfile] representation of the text to parse.\n\n`Parser` can be a function, in which case it must return a [`Node`][node]: the\nsyntax tree representation of the given file.\n\n`Parser` can also be a constructor function (a function with a `parse` field, or\nother fields, in its `prototype`), in which case it’s constructed with `new`.\nInstances must have a `parse` method that is called without arguments and must\nreturn a [`Node`][node].\n\n### `processor.stringify(node[, file])`\n\nCompile a [*syntax tree*][syntax-tree].\n\n###### Parameters\n\n*   `node` ([`Node`][node]) — [*Syntax tree*][syntax-tree] to compile\n*   `file` ([`VFile`][vfile], optional) — [*File*][file], any value accepted by\n    `vfile()`\n\n###### Returns\n\n`string` or `Buffer` (see notes) — Textual representation of the [*syntax\ntree*][syntax-tree]\n\n###### Note\n\n`stringify` freezes the processor if not already [*frozen*][freeze].\n\n`stringify` performs the [*stringify phase*][description], not the *run phase*\nor other phases.\n\nunified typically compiles by serializing: most [*compiler*][compiler]s return\n`string` (or `Buffer`).\nSome compilers, such as the one configured with [`rehype-react`][rehype-react],\nreturn other values (in this case, a React tree).\nIf you’re using a compiler doesn’t serialize, expect different result values.\nWhen using TypeScript, cast the type on your side.\n\n###### Example\n\nThe below example shows how `stringify` can be used to serialize a syntax tree.\n\n```js\nimport {unified} from 'unified'\nimport rehypeStringify from 'rehype-stringify'\nimport {h} from 'hastscript'\n\nconst tree = h('h1', 'Hello world!')\n\nconst doc = unified().use(rehypeStringify).stringify(tree)\n\nconsole.log(doc)\n```\n\nYields:\n\n```html\n<h1>Hello world!</h1>\n```\n\n#### `processor.Compiler`\n\nA **compiler** handles the compiling of a [*syntax tree*][syntax-tree] to text.\nUsed in the [*stringify phase*][description] and called with a [`Node`][node]\nand [`VFile`][file] representation of syntax tree to compile.\n\n`Compiler` can be a function, in which case it should return a `string`: the\ntextual representation of the syntax tree.\n\n`Compiler` can also be a constructor function (a function with a `compile`\nfield, or other fields, in its `prototype`), in which case it’s constructed with\n`new`.\nInstances must have a `compile` method that is called without arguments and\nshould return a `string`.\n\n### `processor.run(node[, file][, done])`\n\nRun [*transformers*][transformer] on a [*syntax tree*][syntax-tree].\n\n###### Parameters\n\n*   `node` ([`Node`][node]) — [*Syntax tree*][syntax-tree] to run on\n*   `file` ([`VFile`][vfile], optional) — [*File*][file], any value accepted by\n    `vfile()`\n*   `done` ([`Function`][run-done], optional) — Callback\n\n###### Returns\n\n[`Promise`][promise] if `done` is not given.\nThe returned promise is rejected with a fatal error, or resolved with the\ntransformed [*syntax tree*][syntax-tree].\n\n###### Note\n\n`run` freezes the processor if not already [*frozen*][freeze].\n\n`run` performs the [*run phase*][description], not other phases.\n\n#### `function done(err[, node, file])`\n\nCallback called when [*transformers*][transformer] are done.\nCalled with either an error or results.\n\n###### Parameters\n\n*   `err` (`Error`, optional) — Fatal error\n*   `node` ([`Node`][node], optional) — Transformed [*syntax tree*][syntax-tree]\n*   `file` ([`VFile`][vfile], optional) — [*File*][file]\n\n###### Example\n\nThe below example shows how `run` can be used to transform a syntax tree.\n\n```js\nimport {unified} from 'unified'\nimport remarkReferenceLinks from 'remark-reference-links'\nimport {u} from 'unist-builder'\n\nconst tree = u('root', [\n  u('paragraph', [\n    u('link', {href: 'https://example.com'}, [u('text', 'Example Domain')])\n  ])\n])\n\nunified()\n  .use(remarkReferenceLinks)\n  .run(tree)\n  .then(\n    (changedTree) => console.log(changedTree),\n    (error) => {\n      // Handle your error here!\n      throw error\n    }\n  )\n```\n\nYields:\n\n```js\n{\n  type: 'root',\n  children: [\n    {type: 'paragraph', children: [Array]},\n    {type: 'definition', identifier: '1', title: undefined, url: undefined}\n  ]\n}\n```\n\n### `processor.runSync(node[, file])`\n\nRun [*transformers*][transformer] on a [*syntax tree*][syntax-tree].\n\nAn error is thrown if asynchronous [*plugin*][plugin]s are configured.\n\n###### Parameters\n\n*   `node` ([`Node`][node]) — [*Syntax tree*][syntax-tree] to run on\n*   `file` ([`VFile`][vfile], optional) — [*File*][file], any value accepted by\n    `vfile()`\n\n###### Returns\n\n[`Node`][node] — Transformed [*syntax tree*][syntax-tree].\n\n###### Note\n\n`runSync` freezes the processor if not already [*frozen*][freeze].\n\n`runSync` performs the [*run phase*][description], not other phases.\n\n### `processor.process(file[, done])`\n\n[*Process*][description] the given [*file*][file] as configured on the\nprocessor.\n\n###### Parameters\n\n*   `file` ([`VFile`][vfile]) — [*File*][file], any value accepted by `vfile()`\n*   `done` ([`Function`][process-done], optional) — Callback\n\n###### Returns\n\n[`Promise`][promise] if `done` is not given.\nThe returned promise is rejected with a fatal error, or resolved with the\nprocessed [*file*][file].\n\nThe parsed, transformed, and compiled value is exposed on\n[`file.value`][vfile-value] or `file.result` (see notes).\n\n###### Note\n\n`process` freezes the processor if not already [*frozen*][freeze].\n\n`process` performs the [*parse*, *run*, and *stringify* phases][description].\n\nunified typically compiles by serializing: most [*compiler*][compiler]s return\n`string` (or `Buffer`).\nSome compilers, such as the one configured with [`rehype-react`][rehype-react],\nreturn other values (in this case, a React tree).\nIf you’re using a compiler that serializes, the result is available at\n`file.value`.\nOtherwise, the result is available at `file.result`.\n\n###### Example\n\nThe below example shows how `process` can be used to process a file, whether\ntransformers are asynchronous or not, with promises.\n\n```js\nimport {unified} from 'unified'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport rehypeDocument from 'rehype-document'\nimport rehypeFormat from 'rehype-format'\nimport rehypeStringify from 'rehype-stringify'\n\nunified()\n  .use(remarkParse)\n  .use(remarkRehype)\n  .use(rehypeDocument, {title: '👋🌍'})\n  .use(rehypeFormat)\n  .use(rehypeStringify)\n  .process('# Hello world!')\n  .then(\n    (file) => console.log(String(file)),\n    (error) => {\n      // Handle your error here!\n      throw error\n    }\n  )\n```\n\nYields:\n\n```html\n<!doctype html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <title>👋🌍</title>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  </head>\n  <body>\n    <h1>Hello world!</h1>\n  </body>\n</html>\n```\n\n#### `function done(err, file)`\n\nCallback called when the [*process*][description] is done.\nCalled with a fatal error, if any, and a [*file*][file].\n\n###### Parameters\n\n*   `err` (`Error`, optional) — Fatal error\n*   `file` ([`VFile`][vfile]) — Processed [*file*][file]\n\n###### Example\n\nThe below example shows how `process` can be used to process a file, whether\ntransformers are asynchronous or not, with a callback.\n\n```js\nimport {unified} from 'unified'\nimport remarkParse from 'remark-parse'\nimport remarkGithub from 'remark-github'\nimport remarkStringify from 'remark-stringify'\nimport {reporter} from 'vfile-reporter'\n\nunified()\n  .use(remarkParse)\n  .use(remarkGithub)\n  .use(remarkStringify)\n  .process('@unifiedjs')\n  .then(\n    (file) => {\n      console.error(reporter(file))\n      console.log(String(file))\n    },\n    (error) => {\n      // Handle your error here!\n      throw error\n    }\n  )\n```\n\nYields:\n\n```txt\nno issues found\n```\n\n```markdown\n[**@unifiedjs**](https://github.com/unifiedjs)\n```\n\n### `processor.processSync(file|value)`\n\n[*Process*][description] the given [*file*][file] as configured on the\nprocessor.\n\nAn error is thrown if asynchronous [*plugin*][plugin]s are configured.\n\n###### Parameters\n\n*   `file` ([`VFile`][vfile]) — [*File*][file], any value accepted by `vfile()`\n\n###### Returns\n\n([`VFile`][vfile]) — Processed [*file*][file]\n\nThe parsed, transformed, and compiled value is exposed on\n[`file.value`][vfile-value] or `file.result` (see notes).\n\n###### Note\n\n`processSync` freezes the processor if not already [*frozen*][freeze].\n\n`processSync` performs the [*parse*, *run*, and *stringify*\nphases][description].\n\nunified typically compiles by serializing: most [*compiler*][compiler]s return\n`string` (or `Buffer`).\nSome compilers, such as the one configured with [`rehype-react`][rehype-react],\nreturn other values (in this case, a React tree).\nIf you’re using a compiler that serializes, the result is available at\n`file.value`.\nOtherwise, the result is available at `file.result`.\n\n###### Example\n\nThe below example shows how `processSync` can be used to process a file, if all\ntransformers are synchronous.\n\n```js\nimport {unified} from 'unified'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport rehypeDocument from 'rehype-document'\nimport rehypeFormat from 'rehype-format'\nimport rehypeStringify from 'rehype-stringify'\n\nconst processor = unified()\n  .use(remarkParse)\n  .use(remarkRehype)\n  .use(rehypeDocument, {title: '👋🌍'})\n  .use(rehypeFormat)\n  .use(rehypeStringify)\n\nconsole.log(processor.processSync('# Hello world!').toString())\n```\n\nYields:\n\n```html\n<!doctype html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <title>👋🌍</title>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  </head>\n  <body>\n    <h1>Hello world!</h1>\n  </body>\n</html>\n```\n\n### `processor.data([key[, value]])`\n\n[*Configure*][configuration] the processor with information available to all\n[*plugin*][plugin]s.\nInformation is stored in an in-memory key-value store.\n\nTypically, options can be given to a specific plugin, but sometimes it makes\nsense to have information shared with several plugins.\nFor example, a list of HTML elements that are self-closing, which is needed\nduring all [*phases*][description] of the *process*.\n\n###### Signatures\n\n*   `processor = processor.data(key, value)`\n*   `processor = processor.data(values)`\n*   `value = processor.data(key)`\n*   `info = processor.data()`\n\n###### Parameters\n\n*   `key` (`string`, optional) — Identifier\n*   `value` (`*`, optional) — Value to set\n*   `values` (`Object`, optional) — Values to set\n\n###### Returns\n\n*   `processor` — If setting, the processor that `data` is called on\n*   `value` (`*`) — If getting, the value at `key`\n*   `info` (`Object`) — Without arguments, the key-value store\n\n###### Note\n\nSetting information cannot occur on [*frozen*][freeze] processors.\nCall the processor first to create a new unfrozen processor.\n\n###### Example\n\nThe following example show how to get and set information:\n\n```js\nimport {unified} from 'unified'\n\nconst processor = unified().data('alpha', 'bravo')\n\nprocessor.data('alpha') // => 'bravo'\n\nprocessor.data() // => {alpha: 'bravo'}\n\nprocessor.data({charlie: 'delta'})\n\nprocessor.data() // => {charlie: 'delta'}\n```\n\n### `processor.freeze()`\n\n**Freeze** a processor.\n*Frozen* processors are meant to be extended and not to be configured directly.\n\nOnce a processor is frozen it cannot be *unfrozen*.\nNew processors working the same way can be created by calling the processor.\n\nIt’s possible to freeze processors explicitly by calling `.freeze()`.\nProcessors freeze implicitly when [`.parse()`][parse], [`.run()`][run],\n[`.runSync()`][run-sync], [`.stringify()`][stringify], [`.process()`][process],\nor [`.processSync()`][process-sync] are called.\n\n###### Returns\n\n`processor` — The processor that `freeze` was called on.\n\n###### Example\n\nThe following example, `index.js`, shows how rehype prevents extensions to\nitself:\n\n```js\nimport {unified} from 'unified'\nimport remarkParse from 'rehype-parse'\nimport remarkStringify from 'rehype-stringify'\n\nexport const rehype = unified().use(remarkParse).use(remarkStringify).freeze()\n```\n\nThe below example, `a.js`, shows how that processor can be used and configured.\n\n```js\nimport {rehype} from 'rehype'\nimport rehypeFormat from 'rehype-format'\n// …\n\nrehype()\n  .use(rehypeFormat)\n  // …\n```\n\nThe below example, `b.js`, shows a similar looking example that operates on the\nfrozen rehype interface because it does not call `rehype`.\nIf this behavior was allowed it would result in unexpected behavior so an\nerror is thrown.\n**This is invalid**:\n\n```js\nimport {rehype} from 'rehype'\nimport rehypeFormat from 'rehype-format'\n// …\n\nrehype\n  .use(rehypeFormat)\n  // …\n```\n\nYields:\n\n```txt\n~/node_modules/unified/index.js:426\n    throw new Error(\n    ^\n\nError: Cannot call `use` on a frozen processor.\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.\n    at assertUnfrozen (~/node_modules/unified/index.js:426:11)\n    at Function.use (~/node_modules/unified/index.js:165:5)\n    at ~/b.js:6:4\n```\n\n## `Plugin`\n\n**Plugins** [*configure*][configuration] the processors they are applied on in\nthe following ways:\n\n*   They change the processor: such as the [*parser*][parser], the\n    [*compiler*][compiler], or configuring [*data*][data]\n*   They specify how to handle [*syntax trees*][syntax-tree] and [*files*][file]\n\nPlugins are a concept.\nThey materialize as [`attacher`][attacher]s.\n\n###### Example\n\n`move.js`:\n\n```js\nexport function move(options = {}) {\n  const {extname} = options\n\n  if (!extname) {\n    throw new Error('Missing `extname` in options')\n  }\n\n  return transformer\n\n  function transformer(tree, file) {\n    if (file.extname && file.extname !== extname) {\n      file.extname = extname\n    }\n  }\n}\n```\n\n`index.md`:\n\n```markdown\n# Hello, world!\n```\n\n`index.js`:\n\n```js\nimport {unified} from 'unified'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport rehypeStringify from 'rehype-stringify'\nimport {toVFile} from 'to-vfile'\nimport {reporter} from 'vfile-reporter'\nimport {move} from './move.js'\n\nunified()\n  .use(remarkParse)\n  .use(remarkRehype)\n  .use(move, {extname: '.html'})\n  .use(rehypeStringify)\n  .process(toVFile.readSync('index.md'))\n  .then(\n    (file) => {\n      console.error(reporter(file))\n      toVFile.writeSync(file) // Written to `index.html`.\n    },\n    (error) => {\n      // Handle your error here!\n      throw error\n    }\n  )\n```\n\nYields:\n\n```txt\nindex.md: no issues found\n```\n\n…and in `index.html`:\n\n```html\n<h1>Hello, world!</h1>\n```\n\n### `function attacher([options])`\n\n**Attachers** are materialized [*plugin*][plugin]s.\nAn attacher is a function that can receive options and\n[*configures*][configuration] the processor.\n\nAttachers change the processor, such as the [*parser*][parser], the\n[*compiler*][compiler], configuring [*data*][data], or by specifying how the\n[*syntax tree*][syntax-tree] or [*file*][file] are handled.\n\n###### Context\n\nThe context object (`this`) is set to the processor the attacher is applied on.\n\n###### Parameters\n\n*   `options` (`*`, optional) — Configuration\n\n###### Returns\n\n[`transformer`][transformer] — Optional.\n\n###### Note\n\nAttachers are called when the processor is [*frozen*][freeze], not when they are\napplied.\n\n### `function transformer(node, file[, next])`\n\n**Transformers** handle [*syntax tree*][syntax-tree]s and [*file*][file]s.\nA transformer is a function that is called each time a syntax tree and file are\npassed through the [*run phase*][description].\nIf an error occurs (either because it’s thrown, returned, rejected, or passed to\n[`next`][next]), the process stops.\n\nThe *run phase* is handled by [`trough`][trough], see its documentation for the\nexact semantics of these functions.\n\n###### Parameters\n\n*   `node` ([`Node`][node]) — [*Syntax tree*][syntax-tree] to handle\n*   `file` ([`VFile`][vfile]) — [*File*][file] to handle\n*   `next` ([`Function`][next], optional)\n\n###### Returns\n\n*   `void` — If nothing is returned, the next transformer keeps using same tree.\n*   `Error` — Fatal error to stop the process\n*   `node` ([`Node`][node]) — New [*syntax tree*][syntax-tree].\n    If returned, the next transformer is given this new tree\n*   `Promise` — Returned to perform an asynchronous operation.\n    The promise **must** be resolved (optionally with a [`Node`][node]) or\n    rejected (optionally with an `Error`)\n\n#### `function next(err[, tree[, file]])`\n\nIf the signature of a [*transformer*][transformer] includes `next` (the third\nargument), the transformer **may** perform asynchronous operations, and **must**\ncall `next()`.\n\n###### Parameters\n\n*   `err` (`Error`, optional) — Fatal error to stop the process\n*   `node` ([`Node`][node], optional) — New [*syntax tree*][syntax-tree].\n    If given, the next transformer is given this new tree\n*   `file` ([`VFile`][vfile], optional) — New [*file*][file].\n    If given, the next transformer is given this new file\n\n## `Preset`\n\n**Presets** are sharable [*configuration*][configuration].\nThey can contain [*plugins*][plugin] and settings.\n\n###### Example\n\n`preset.js`:\n\n```js\nimport remarkPresetLintRecommended from 'remark-preset-lint-recommended'\nimport remarkPresetLintConsistent from 'remark-preset-lint-consistent'\nimport remarkCommentConfig from 'remark-comment-config'\nimport remarkToc from 'remark-toc'\nimport remarkLicense from 'remark-license'\n\nexport const preset = {\n  settings: {bullet: '*', emphasis: '*', fences: true},\n  plugins: [\n    remarkPresetLintRecommended,\n    remarkPresetLintConsistent,\n    remarkCommentConfig,\n    [remarkToc, {maxDepth: 3, tight: true}],\n    remarkLicense\n  ]\n}\n```\n\n`example.md`:\n\n```markdown\n# Hello, world!\n\n_Emphasis_ and **importance**.\n\n## Table of contents\n\n## API\n\n## License\n```\n\n`index.js`:\n\n```js\nimport {remark} from 'remark'\nimport {toVFile} from 'to-vfile'\nimport {reporter} from 'vfile-reporter'\nimport {preset} from './preset.js'\n\nremark()\n  .use(preset)\n  .process(toVFile.readSync('example.md'))\n  .then(\n    (file) => {\n      console.error(reporter(file))\n      toVFile.writeSync(file)\n    },\n    (error) => {\n      // Handle your error here!\n      throw error\n    }\n  )\n```\n\nYields:\n\n```txt\nexample.md: no issues found\n```\n\n`example.md` now contains:\n\n```markdown\n# Hello, world!\n\n*Emphasis* and **importance**.\n\n## Table of contents\n\n*   [API](#api)\n*   [License](#license)\n\n## API\n\n## License\n\n[MIT](license) © [Titus Wormer](https://wooorm.com)\n```\n\n## Contribute\n\nSee [`contributing.md`][contributing] in [`unifiedjs/.github`][health] for ways\nto get started.\nSee [`support.md`][support] for ways to get help.\nIdeas for new plugins and tools can be posted in [`unifiedjs/ideas`][ideas].\n\nA curated list of awesome unified resources can be found in [**awesome\nunified**][awesome].\n\nThis project has a [code of conduct][coc].\nBy interacting with this repository, organization, or community you agree to\nabide by its terms.\n\n## Acknowledgments\n\nPreliminary work for unified was done [in 2014][preliminary] for\n[**retext**][retext] and inspired by [`ware`][ware].\nFurther incubation happened in [**remark**][remark].\nThe project was finally [externalised][] in 2015 and [published][] as `unified`.\nThe project was authored by [**@wooorm**](https://github.com/wooorm).\n\nAlthough `unified` since moved its plugin architecture to [`trough`][trough],\nthanks to [**@calvinfo**](https://github.com/calvinfo),\n[**@ianstormtaylor**](https://github.com/ianstormtaylor), and others for their\nwork on [`ware`][ware], as it was a huge initial inspiration.\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[logo]: https://raw.githubusercontent.com/unifiedjs/unified/93862e5/logo.svg?sanitize=true\n\n[build-badge]: https://github.com/unifiedjs/unified/workflows/main/badge.svg\n\n[build]: https://github.com/unifiedjs/unified/actions\n\n[coverage-badge]: https://img.shields.io/codecov/c/github/unifiedjs/unified.svg\n\n[coverage]: https://codecov.io/github/unifiedjs/unified\n\n[downloads-badge]: https://img.shields.io/npm/dm/unified.svg\n\n[downloads]: https://www.npmjs.com/package/unified\n\n[size-badge]: https://img.shields.io/bundlephobia/minzip/unified.svg\n\n[size]: https://bundlephobia.com/result?p=unified\n\n[sponsors-badge]: https://opencollective.com/unified/sponsors/badge.svg\n\n[backers-badge]: https://opencollective.com/unified/backers/badge.svg\n\n[collective]: https://opencollective.com/unified\n\n[chat-badge]: https://img.shields.io/badge/chat-discussions-success.svg\n\n[chat]: https://github.com/unifiedjs/unified/discussions\n\n[health]: https://github.com/unifiedjs/.github\n\n[contributing]: https://github.com/unifiedjs/.github/blob/HEAD/contributing.md\n\n[support]: https://github.com/unifiedjs/.github/blob/HEAD/support.md\n\n[coc]: https://github.com/unifiedjs/.github/blob/HEAD/code-of-conduct.md\n\n[awesome]: https://github.com/unifiedjs/awesome-unified\n\n[license]: license\n\n[author]: https://wooorm.com\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[site]: https://unifiedjs.com\n\n[twitter]: https://twitter.com/unifiedjs\n\n[learn]: https://unifiedjs.com/learn/\n\n[rehype]: https://github.com/rehypejs/rehype\n\n[remark]: https://github.com/remarkjs/remark\n\n[retext]: https://github.com/retextjs/retext\n\n[esast]: https://github.com/syntax-tree/esast\n\n[hast]: https://github.com/syntax-tree/hast\n\n[mdast]: https://github.com/syntax-tree/mdast\n\n[nlcst]: https://github.com/syntax-tree/nlcst\n\n[xast]: https://github.com/syntax-tree/xast\n\n[unist]: https://github.com/syntax-tree/unist\n\n[engine]: https://github.com/unifiedjs/unified-engine\n\n[args]: https://github.com/unifiedjs/unified-args\n\n[gulp]: https://github.com/unifiedjs/unified-engine-gulp\n\n[atom]: https://github.com/unifiedjs/unified-engine-atom\n\n[remark-rehype]: https://github.com/remarkjs/remark-rehype\n\n[remark-retext]: https://github.com/remarkjs/remark-retext\n\n[rehype-retext]: https://github.com/rehypejs/rehype-retext\n\n[rehype-remark]: https://github.com/rehypejs/rehype-remark\n\n[unist-utilities]: https://github.com/syntax-tree/unist#list-of-utilities\n\n[vfile]: https://github.com/vfile/vfile\n\n[vfile-value]: https://github.com/vfile/vfile#vfilevalue\n\n[vfile-utilities]: https://github.com/vfile/vfile#list-of-utilities\n\n[node]: https://github.com/syntax-tree/unist#node\n\n[description]: #description\n\n[syntax-tree]: #syntax-trees\n\n[configuration]: #configuration\n\n[file]: #file\n\n[processors]: #processors\n\n[process]: #processorprocessfile-done\n\n[process-sync]: #processorprocesssyncfilevalue\n\n[parse]: #processorparsefile\n\n[parser]: #processorparser\n\n[stringify]: #processorstringifynode-file\n\n[run]: #processorrunnode-file-done\n\n[run-sync]: #processorrunsyncnode-file\n\n[compiler]: #processorcompiler\n\n[data]: #processordatakey-value\n\n[attacher]: #function-attacheroptions\n\n[transformer]: #function-transformernode-file-next\n\n[next]: #function-nexterr-tree-file\n\n[freeze]: #processorfreeze\n\n[plugin]: #plugin\n\n[run-done]: #function-doneerr-node-file\n\n[process-done]: #function-doneerr-file\n\n[contribute]: #contribute\n\n[rehype-react]: https://github.com/rehypejs/rehype-react\n\n[trough]: https://github.com/wooorm/trough#function-fninput-next\n\n[promise]: https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise\n\n[remark-plugins]: https://github.com/remarkjs/remark/blob/HEAD/doc/plugins.md#list-of-plugins\n\n[rehype-plugins]: https://github.com/rehypejs/rehype/blob/HEAD/doc/plugins.md#list-of-plugins\n\n[retext-plugins]: https://github.com/retextjs/retext/blob/HEAD/doc/plugins.md#list-of-plugins\n\n[stream]: https://github.com/unifiedjs/unified-stream\n\n[ideas]: https://github.com/unifiedjs/ideas\n\n[preliminary]: https://github.com/retextjs/retext/commit/8fcb1f#diff-168726dbe96b3ce427e7fedce31bb0bc\n\n[externalised]: https://github.com/remarkjs/remark/commit/9892ec#diff-168726dbe96b3ce427e7fedce31bb0bc\n\n[published]: https://github.com/unifiedjs/unified/commit/2ba1cf\n\n[ware]: https://github.com/segmentio/ware\n\n[gatsby]: https://www.gatsbyjs.org\n\n[mdx]: https://mdxjs.com\n\n[jsx]: https://reactjs.org/docs/jsx-in-depth.html\n\n[prettier]: https://prettier.io\n\n[node.js]: https://nodejs.org\n\n[vercel]: https://vercel.com\n\n[netlify]: https://www.netlify.com\n\n[github]: https://github.com\n\n[mozilla]: https://www.mozilla.org\n\n[wordpress]: https://wordpress.com\n\n[adobe]: https://www.adobe.com\n\n[facebook]: https://www.facebook.com\n\n[google]: https://www.google.com\n","funding":{"url":"https://opencollective.com/unified","type":"opencollective"},"gitHead":"5167c49ce7e02fcd518adae0acda80ccd4e97400","scripts":{"test":"npm run format && npm run test-coverage && npm run test-types","format":"remark . -qfo && prettier . -w --loglevel warn && xo --fix","test-api":"node --unhandled-rejections=strict --conditions development test/index.js","test-types":"dtslint types","test-coverage":"c8 --check-coverage --branches 100 --functions 100 --lines 100 --statements 100 --reporter lcov node --unhandled-rejections=strict --conditions development test/index.js"},"_npmUser":{"name":"wooorm","email":"tituswormer@gmail.com"},"prettier":{"semi":false,"useTabs":false,"tabWidth":2,"singleQuote":true,"trailingComma":"none","bracketSpacing":false},"repository":{"url":"git+https://github.com/unifiedjs/unified.git","type":"git"},"_npmVersion":"7.18.1","description":"Interface for parsing, inspecting, transforming, and serializing content through syntax trees","directories":{},"sideEffects":false,"_nodeVersion":"16.2.0","dependencies":{"bail":"^2.0.0","vfile":"^5.0.0","extend":"^3.0.0","trough":"^2.0.0","is-buffer":"^2.0.0","@types/unist":"^2.0.0","is-plain-obj":"^4.0.0"},"remarkConfig":{"plugins":["preset-wooorm"]},"_hasShrinkwrap":false,"readmeFilename":"readme.md","devDependencies":{"c8":"^7.0.0","xo":"^0.39.0","tape":"^5.0.0","dtslint":"^4.0.0","prettier":"^2.0.0","remark-cli":"^9.0.0","remark-preset-wooorm":"^8.0.0"},"_npmOperationalInternal":{"tmp":"tmp/unified_10.0.0-beta.1_1625559979033_0.3057768374655947","host":"s3://npm-registry-packages"}},"10.0.0":{"name":"unified","version":"10.0.0","keywords":["unified","process","parse","transform","compile","stringify","serialize","ast","cst","syntax","tree","content","rehype","retext","remark"],"author":{"url":"https://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"},"license":"MIT","_id":"unified@10.0.0","maintainers":[{"name":"wooorm","email":"tituswormer@gmail.com"}],"contributors":[{"url":"https://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"},{"name":"Junyoung Choi","email":"fluke8259@gmail.com"},{"name":"Hernan Rajchert","email":"hrajchert@gmail.com"},{"name":"Christian Murphy","email":"christian.murphy.42@gmail.com"},{"name":"Vse Mozhet Byt","email":"vsemozhetbyt@gmail.com"},{"name":"Richard Littauer","email":"richard.littauer@gmail.com"}],"homepage":"https://unifiedjs.com","bugs":{"url":"https://github.com/unifiedjs/unified/issues"},"xo":{"rules":{"promise/param-names":"off"},"ignores":["types/"],"prettier":true},"dist":{"shasum":"e391bf4e8745422902fdbedcb59732647f5ee438","tarball":"https://registry.npmjs.org/unified/-/unified-10.0.0.tgz","fileCount":7,"integrity":"sha512-6d3q5HdD4GVTZU9S/9yNiziL8chISFxnZtW1lietmYfglJiPxa5oVWwkb8kA3S7A4Wqubju+uvcYjmDUASXFDw==","signatures":[{"sig":"MEYCIQDxuxeD9UaZMUT+dNI3y8WLIvxOcMDMaGw2LsSrOAx9RgIhAJsjjh9KZlU0EbLLEpoOpuEtWTU26uRRIaMO5U20u7Z4","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":75230,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJg7+mlCRA9TVsSAnZWagAAW/AP/25fLdCNUT1JKBdxH7P3\nIQz9O/biwiHL6vy9ch2UjVoY58dL/TqqYMnXENUs96UBwikTFth8fmW2KxWw\n+Bm0UCaM2mJgcRXmBf+Y1d0mXai6rPnNG5CQSOwGHPh1KLBqgE9U7YXFiW47\nhCD1F3tS6xkNEq58Bv6YNenM7Z6MPX7aPZWWwJWECRK0gGIwvCUqhYB6mIes\nMw4818yW6I/SGuEOrHUKGkPPMGoykQBGKbmr99eY4TqzabvFFs8AsmfAYThs\nwUNjY6/EyJq2sCFH5ZJIkwyvzy92AzCvJ+CboDszNTiiTgF4jrIFfsyoBl4O\ne8uaDbHWvtCxEqECIAM0bUpLWRKgGBDGpQueY7Se3LdQSVWiU/gGOp6viaoL\nBGyl8N1mBtIv9q5Z+6zA7hRBea29i9XLBZKOoPZMJi042sZ7x3xNzCQdx5mW\nrQFb3jgO4krEDJtmJhM9GNAtvMhLXCx/k99ETnz/7EHCCSwmcjhePIStmELf\n8xsBHi33cj4ojtyCDWywGBXMtNe5SMwxwWy0oFQI0A50sChwfQPZxJdZEckV\nB8yGRPi1IbWiPsLupnx9QnjfukUKR2xLR5s5m2jRweVPy+pvu4yVOa33MDEs\nbHzug13WIoDrEmDyqRd5yWZLLeQz2lRumugSuB2UXZ+QNCBtfuesHUDMG/FO\ntEx8\r\n=dbJu\r\n-----END PGP SIGNATURE-----\r\n"},"main":"index.js","type":"module","types":"index.d.ts","funding":{"url":"https://opencollective.com/unified","type":"opencollective"},"gitHead":"4919517cf6bd25e801322c3e0ba817753435e4fd","scripts":{"test":"npm run build && npm run format && npm run test-coverage","build":"rimraf \"test/**/*.d.ts\" && tsc && tsd && type-coverage","format":"remark . -qfo && prettier . -w --loglevel warn && xo --fix","test-api":"node --unhandled-rejections=strict --conditions development test/index.js","test-coverage":"c8 --check-coverage --branches 100 --functions 100 --lines 100 --statements 100 --reporter lcov node --unhandled-rejections=strict --conditions development test/index.js"},"_npmUser":{"name":"wooorm","email":"tituswormer@gmail.com"},"prettier":{"semi":false,"useTabs":false,"tabWidth":2,"singleQuote":true,"trailingComma":"none","bracketSpacing":false},"repository":{"url":"git+https://github.com/unifiedjs/unified.git","type":"git"},"_npmVersion":"7.18.1","description":"Interface for parsing, inspecting, transforming, and serializing content through syntax trees","directories":{},"sideEffects":false,"_nodeVersion":"16.2.0","dependencies":{"bail":"^2.0.0","vfile":"^5.0.0","extend":"^3.0.0","trough":"^2.0.0","is-buffer":"^2.0.0","@types/unist":"^2.0.0","is-plain-obj":"^4.0.0"},"remarkConfig":{"plugins":["preset-wooorm"]},"typeCoverage":{"detail":true,"strict":true,"atLeast":100,"ignoreCatch":true},"_hasShrinkwrap":false,"devDependencies":{"c8":"^7.0.0","xo":"^0.39.0","tsd":"^0.17.0","tape":"^5.0.0","rimraf":"^3.0.0","prettier":"^2.0.0","remark-cli":"^9.0.0","typescript":"^4.0.0","@types/tape":"^4.0.0","@types/extend":"^3.0.0","type-coverage":"^2.0.0","remark-preset-wooorm":"^8.0.0"},"_npmOperationalInternal":{"tmp":"tmp/unified_10.0.0_1626335653097_0.6199882527724585","host":"s3://npm-registry-packages"}},"10.0.1":{"name":"unified","version":"10.0.1","keywords":["unified","process","parse","transform","compile","stringify","serialize","ast","cst","syntax","tree","content","rehype","retext","remark"],"author":{"url":"https://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"},"license":"MIT","_id":"unified@10.0.1","maintainers":[{"name":"wooorm","email":"tituswormer@gmail.com"}],"contributors":[{"url":"https://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"},{"name":"Junyoung Choi","email":"fluke8259@gmail.com"},{"name":"Hernan Rajchert","email":"hrajchert@gmail.com"},{"name":"Christian Murphy","email":"christian.murphy.42@gmail.com"},{"name":"Vse Mozhet Byt","email":"vsemozhetbyt@gmail.com"},{"name":"Richard Littauer","email":"richard.littauer@gmail.com"}],"homepage":"https://unifiedjs.com","bugs":{"url":"https://github.com/unifiedjs/unified/issues"},"xo":{"rules":{"promise/param-names":"off"},"ignores":["types/"],"prettier":true},"dist":{"shasum":"2c1ea2e9990307fa83edcd55eff4a12a542964ff","tarball":"https://registry.npmjs.org/unified/-/unified-10.0.1.tgz","fileCount":7,"integrity":"sha512-jaGLXHUAxokkOJAy4a+iE3EXpmrkOw7d21XKt+/hzmBb29J/4b1mQ4ZIbUFO/gsEiq7Sjrs5yWsGQrJHylj+YQ==","signatures":[{"sig":"MEUCIQCfUjX8Kq2ARyRQa9cjeYHbir6EzqjhpzKZjOlt6gM3mAIgS0hBqVI+rWc22G557+X+x2xc4NzUxn6hQWfuZNG5XbA=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":75237,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJg99JzCRA9TVsSAnZWagAAL+8QAID85W90q0gsWoStGz2r\nA0TNmSNC/IfgjSO/iXaRCQoezsrDBxZonCeiEMN7zTIO5/Hha7FdrVeC88Wn\nDoAvLqqOTUZl6HwdsWkCIxvz9g6lwtgcWzo8/9OmVd/09XTliHRkrwC7Y4vr\nHcMj764sYFe8thMw7/9YUWNaA5XXFf7Igq7E8/Kf+bkAI9YfCvuwRPG91EXT\nbVy4rtV/7t2bcA18oAadrjqSNeb8udOpKRDa1QuV2nC0l/siGqL8QSWc8oIV\ndhYY1VBJM0qh8OZ7qYlDjGl7PhW6ATiijGQZBQ6mN46PHV5/bCLqT5EdcK7s\nebVhT2VC7mbLAOlRDlMrGDfJBPzrBoiU/jRLe2N/NyWR68w4jCzzTXjaEaCg\nRInlGjMLTr64jfwEmOJ1shAzHQDmTu9oM3COwksakrJ1GjWvoXJqZgy1dO0B\n8tDuE7IJ64drOEHWCqC7clnRi/inOF0IZg64zfAz5EL2XAP5hdY1mDT51zxd\nsmV6R6jWcfdVKnGq6sAHBQZCheTCJZ+CQHJ0/Ru6XgW4ZJFdaFTLvgSdybdo\nML2O8AJ94pXcise1M5IrAmVHMIQFN49ThWcd+HLrQ7YP5CC+ooSz9ma05pl/\nyXWYVYKiDcPBMP3sGkoydEQyYZdzzdy8GPRA6InW8T40HixNF6UvXOHPEVP/\n+kEL\r\n=Hr1l\r\n-----END PGP SIGNATURE-----\r\n"},"main":"index.js","type":"module","types":"index.d.ts","funding":{"url":"https://opencollective.com/unified","type":"opencollective"},"gitHead":"cf8653b90482860da7aa97c8b8d33e38f6a7f064","scripts":{"test":"npm run build && npm run format && npm run test-coverage","build":"rimraf \"test/**/*.d.ts\" && tsc && tsd && type-coverage","format":"remark . -qfo && prettier . -w --loglevel warn && xo --fix","test-api":"node --unhandled-rejections=strict --conditions development test/index.js","test-coverage":"c8 --check-coverage --branches 100 --functions 100 --lines 100 --statements 100 --reporter lcov node --unhandled-rejections=strict --conditions development test/index.js"},"_npmUser":{"name":"wooorm","email":"tituswormer@gmail.com"},"prettier":{"semi":false,"useTabs":false,"tabWidth":2,"singleQuote":true,"trailingComma":"none","bracketSpacing":false},"repository":{"url":"git+https://github.com/unifiedjs/unified.git","type":"git"},"_npmVersion":"7.18.1","description":"Interface for parsing, inspecting, transforming, and serializing content through syntax trees","directories":{},"sideEffects":false,"_nodeVersion":"16.2.0","dependencies":{"bail":"^2.0.0","vfile":"^5.0.0","extend":"^3.0.0","trough":"^2.0.0","is-buffer":"^2.0.0","@types/unist":"^2.0.0","is-plain-obj":"^4.0.0"},"remarkConfig":{"plugins":["preset-wooorm"]},"typeCoverage":{"detail":true,"strict":true,"atLeast":100,"ignoreCatch":true},"_hasShrinkwrap":false,"devDependencies":{"c8":"^7.0.0","xo":"^0.42.0","tsd":"^0.17.0","tape":"^5.0.0","rimraf":"^3.0.0","prettier":"^2.0.0","remark-cli":"^9.0.0","typescript":"^4.0.0","@types/tape":"^4.0.0","@types/extend":"^3.0.0","type-coverage":"^2.0.0","remark-preset-wooorm":"^8.0.0"},"_npmOperationalInternal":{"tmp":"tmp/unified_10.0.1_1626854003730_0.3178089366609338","host":"s3://npm-registry-packages"}},"10.1.0":{"name":"unified","version":"10.1.0","keywords":["unified","process","parse","transform","compile","stringify","serialize","ast","cst","syntax","tree","content","rehype","retext","remark"],"author":{"url":"https://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"},"license":"MIT","_id":"unified@10.1.0","maintainers":[{"name":"wooorm","email":"tituswormer@gmail.com"}],"contributors":[{"url":"https://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"},{"name":"Junyoung Choi","email":"fluke8259@gmail.com"},{"name":"Hernan Rajchert","email":"hrajchert@gmail.com"},{"name":"Christian Murphy","email":"christian.murphy.42@gmail.com"},{"name":"Vse Mozhet Byt","email":"vsemozhetbyt@gmail.com"},{"name":"Richard Littauer","email":"richard.littauer@gmail.com"}],"homepage":"https://unifiedjs.com","bugs":{"url":"https://github.com/unifiedjs/unified/issues"},"xo":{"rules":{"promise/param-names":"off"},"ignores":["types/"],"prettier":true},"dist":{"shasum":"4e65eb38fc2448b1c5ee573a472340f52b9346fe","tarball":"https://registry.npmjs.org/unified/-/unified-10.1.0.tgz","fileCount":7,"integrity":"sha512-4U3ru/BRXYYhKbwXV6lU6bufLikoAavTwev89H5UxY8enDFaAT2VXmIXYNm6hb5oHPng/EXr77PVyDFcptbk5g==","signatures":[{"sig":"MEUCIEOwpFETqw0AJPO6A9Qv4I04Fwe0cUeXhEznpYpkgHDGAiEAwbGxP23jnbbsHy52NCrO3/TVPkitwQ1T+kjAYxOnaZs=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":84301,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhA87zCRA9TVsSAnZWagAA+lUP/1TY81gEGk4O4x/oNHpL\nLkx+0nBxBPM3iAygCkxn5o1OqmPKOEMHzbqlFPSaVX/svcAe8twtxU0H9sgu\nm2d8jQ80541XJFOhX/gcKky6ICeiWLaPErVTHsdQkmFIp4o+BsktXGf8kAyQ\n6BikMT9dVaejGBInHmZRVN+FiCmzPHGZ+8wVyQhnio0uBOTpEoztR58cSKwJ\nuoY6geteSnVow/UgsWiTmClCF8P0w1UvVEXYbWx3lzcHJtas6oaQMdIFB0vF\n0R36aa02kozjy1jlDUVPler6TCz0R6EUUcYxTMkW6Kt1/zWHkuvgGiCl97FG\nQKt68R0aUdwMjolDWrDuyzKU0jPTsUUVUWtwaavpc9MgIvMbT5wdHobdYpQu\nmFGf+s9KW7IwVtUOIuonPfJxPm5cwHiYQ2caaeT8MT2jmyMmuGQ7TLIYq0Vv\nfDQlZnVQfZRabLiBD9Lec+QXZre+Rc04EH2pKRBCaka/eVAPzc+AqW2rrZz/\nosuT5Gdki2t5rWERTLzflo+bCbAx8FR+NsnsvHP5GNaTeQAafNdCMm72sc7F\nfcIApkmQSsEz4kKNu4CBZMFhXOTcyAAodZ2FkZ1Izu2v15Fve1sl5oCzjdEg\n+Ndovth/MnlWwU3pk7ifAqqFRmPs6ud2JP25MoGDPZrUAC2As3bklKHwxm6A\nV/y3\r\n=IIcM\r\n-----END PGP SIGNATURE-----\r\n"},"main":"index.js","type":"module","types":"index.d.ts","funding":{"url":"https://opencollective.com/unified","type":"opencollective"},"gitHead":"28475cafefb7e764ceb296090139579004f50c4a","scripts":{"test":"npm run build && npm run format && npm run test-coverage","build":"rimraf \"test/**/*.d.ts\" && tsc && tsd && type-coverage","format":"remark . -qfo && prettier . -w --loglevel warn && xo --fix","test-api":"node --unhandled-rejections=strict --conditions development test/index.js","test-coverage":"c8 --check-coverage --branches 100 --functions 100 --lines 100 --statements 100 --reporter lcov node --unhandled-rejections=strict --conditions development test/index.js"},"_npmUser":{"name":"wooorm","email":"tituswormer@gmail.com"},"prettier":{"semi":false,"useTabs":false,"tabWidth":2,"singleQuote":true,"trailingComma":"none","bracketSpacing":false},"repository":{"url":"git+https://github.com/unifiedjs/unified.git","type":"git"},"_npmVersion":"7.18.1","description":"Interface for parsing, inspecting, transforming, and serializing content through syntax trees","directories":{},"sideEffects":false,"_nodeVersion":"16.2.0","dependencies":{"bail":"^2.0.0","vfile":"^5.0.0","extend":"^3.0.0","trough":"^2.0.0","is-buffer":"^2.0.0","@types/unist":"^2.0.0","is-plain-obj":"^4.0.0"},"remarkConfig":{"plugins":["preset-wooorm"]},"typeCoverage":{"detail":true,"strict":true,"atLeast":100,"ignoreCatch":true},"_hasShrinkwrap":false,"devDependencies":{"c8":"^7.0.0","xo":"^0.42.0","tsd":"^0.17.0","tape":"^5.0.0","rimraf":"^3.0.0","prettier":"^2.0.0","remark-cli":"^9.0.0","typescript":"^4.0.0","@types/tape":"^4.0.0","@types/extend":"^3.0.0","type-coverage":"^2.0.0","remark-preset-wooorm":"^8.0.0"},"_npmOperationalInternal":{"tmp":"tmp/unified_10.1.0_1627639539346_0.5004425820967304","host":"s3://npm-registry-packages"}},"10.1.1":{"name":"unified","version":"10.1.1","keywords":["unified","process","parse","transform","compile","stringify","serialize","ast","cst","syntax","tree","content","rehype","retext","remark"],"author":{"url":"https://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"},"license":"MIT","_id":"unified@10.1.1","maintainers":[{"name":"wooorm","email":"tituswormer@gmail.com"}],"contributors":[{"url":"https://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"},{"name":"Junyoung Choi","email":"fluke8259@gmail.com"},{"name":"Hernan Rajchert","email":"hrajchert@gmail.com"},{"name":"Christian Murphy","email":"christian.murphy.42@gmail.com"},{"name":"Vse Mozhet Byt","email":"vsemozhetbyt@gmail.com"},{"name":"Richard Littauer","email":"richard.littauer@gmail.com"}],"homepage":"https://unifiedjs.com","bugs":{"url":"https://github.com/unifiedjs/unified/issues"},"xo":{"rules":{"promise/param-names":"off"},"ignores":["types/"],"prettier":true},"dist":{"shasum":"345e349e3ab353ab612878338eb9d57b4dea1d46","tarball":"https://registry.npmjs.org/unified/-/unified-10.1.1.tgz","fileCount":7,"integrity":"sha512-v4ky1+6BN9X3pQrOdkFIPWAaeDsHPE1svRDxq7YpTc2plkIqFMwukfqM+l0ewpP9EfwARlt9pPFAeWYhHm8X9w==","signatures":[{"sig":"MEUCIDB8U0YUf7F+NVfJoBFpw1lyOekhP9MtbXjyrAPhPb+sAiEA2FuXt9DZ4l1lsKUOUs/DVrlesyM48RcbWgPZf20ukdk=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":85472,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhlowWCRA9TVsSAnZWagAAQnMP+wf+IG7cuR7Yver3Gsg/\niZllp1zwNlFfzfiL2d88mQ/arFtJ2rICgCJGInkAQIQgQDKDd6hPD0O84atg\ncu/nQe9GNYTtU7NT/hzNItoqGFR2jfyfqsl1jbrluHrXZSnsPHdlaEbUNTdC\n/6I3ruaEqSS3egc4IMJ4H1KplDVNEuKx1ORE3UHNQY3nDV8qkLobgGxl3cvj\nOt5xCV82nE2bti5PJ0D/XeSgBHTGOBhnmksJoZgCjRqWi5VD+KcbYu0L5U0/\n8MNadgDKL93vGY74OqFNsLiOLmI1Ny1SQKoe6WcJ/I7J0J9ooddF8HS5s+hN\nZy4KMKXvVm1gnOIIirQ6AmXK66h47kLWp1K6TIetep8EkGdpN2wPtWj1ryXC\nHcF9PqJzrRrcavBMLcHrPjl4RVpVMf9TGLaSaR2OcmqpSXJAw8SVFRb0LD4L\nFwUFxrL6MtDZNF8KxlMlOWJXonTNBUx7FlGa0zXm1idnH6F3rcfBkDx4oSSQ\nSSK1ob3PqDpSqsbUACqYwx7vlVRPYtpug+v0mQ2zCQw3//m7Ujf4RuIO/Bnp\nCS7owIQac2NyIhjd8PDdfIAxbMnel0iXE/0bDtD15vw1oJt0Pkd82aDvZ5yp\n9Ags1yJC7ztbLQAPjouSC1+mUj6EitbPflfuahIdDNkDB1ZPRzOxBHdVF4KU\ngu0y\r\n=2f3x\r\n-----END PGP SIGNATURE-----\r\n"},"main":"index.js","type":"module","types":"index.d.ts","funding":{"url":"https://opencollective.com/unified","type":"opencollective"},"gitHead":"e7a9d19a617fd0146c4eaaaa2f90841d6a580462","scripts":{"test":"npm run build && npm run format && npm run test-coverage","build":"rimraf \"test/**/*.d.ts\" && tsc && tsd && type-coverage","format":"remark . -qfo && prettier . -w --loglevel warn && xo --fix","test-api":"node --unhandled-rejections=strict --conditions development test/index.js","test-coverage":"c8 --check-coverage --branches 100 --functions 100 --lines 100 --statements 100 --reporter lcov node --unhandled-rejections=strict --conditions development test/index.js"},"_npmUser":{"name":"wooorm","email":"tituswormer@gmail.com"},"prettier":{"semi":false,"useTabs":false,"tabWidth":2,"singleQuote":true,"trailingComma":"none","bracketSpacing":false},"repository":{"url":"git+https://github.com/unifiedjs/unified.git","type":"git"},"_npmVersion":"8.1.0","description":"Interface for parsing, inspecting, transforming, and serializing content through syntax trees","directories":{},"sideEffects":false,"_nodeVersion":"17.0.1","dependencies":{"bail":"^2.0.0","vfile":"^5.0.0","extend":"^3.0.0","trough":"^2.0.0","is-buffer":"^2.0.0","@types/unist":"^2.0.0","is-plain-obj":"^4.0.0"},"remarkConfig":{"plugins":["preset-wooorm"]},"typeCoverage":{"detail":true,"strict":true,"atLeast":100,"ignoreCatch":true},"_hasShrinkwrap":false,"devDependencies":{"c8":"^7.0.0","xo":"^0.46.0","tsd":"^0.19.0","tape":"^5.0.0","rimraf":"^3.0.0","prettier":"^2.0.0","remark-cli":"^10.0.0","typescript":"^4.0.0","@types/tape":"^4.0.0","@types/extend":"^3.0.0","type-coverage":"^2.0.0","remark-preset-wooorm":"^9.0.0"},"_npmOperationalInternal":{"tmp":"tmp/unified_10.1.1_1637256214633_0.15694059281728778","host":"s3://npm-registry-packages"}},"10.1.2":{"name":"unified","version":"10.1.2","keywords":["unified","process","parse","transform","compile","stringify","serialize","ast","cst","syntax","tree","content","rehype","retext","remark"],"author":{"url":"https://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"},"license":"MIT","_id":"unified@10.1.2","maintainers":[{"name":"wooorm","email":"tituswormer@gmail.com"}],"contributors":[{"url":"https://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"},{"name":"Junyoung Choi","email":"fluke8259@gmail.com"},{"name":"Hernan Rajchert","email":"hrajchert@gmail.com"},{"name":"Christian Murphy","email":"christian.murphy.42@gmail.com"},{"name":"Vse Mozhet Byt","email":"vsemozhetbyt@gmail.com"},{"name":"Richard Littauer","email":"richard.littauer@gmail.com"}],"homepage":"https://unifiedjs.com","bugs":{"url":"https://github.com/unifiedjs/unified/issues"},"xo":{"rules":{"promise/param-names":"off","@typescript-eslint/ban-types":"off"},"ignores":["types/"],"prettier":true},"dist":{"shasum":"b1d64e55dafe1f0b98bb6c719881103ecf6c86df","tarball":"https://registry.npmjs.org/unified/-/unified-10.1.2.tgz","fileCount":7,"integrity":"sha512-pUSWAi/RAnVy1Pif2kAoeWNBa3JVrx0MId2LASj8G+7AiHWoKZNTomq6LG326T68U7/e263X6fTdcXIy7XnF7Q==","signatures":[{"sig":"MEYCIQCuKNh9u3tV5D/EWUdj4rS5UHRmCd3NtcGtUnw+cpg+1AIhAI1RueFNxK4b9yT6AhUh8AwrJsnaof5Rvqi8fUHSRdMZ","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":85657,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiJyG9ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmphWw//R8af4Qg9i0trBTkkYIDEk7sy/BvpjpbvPSIUD+lAJCBJmf+I\r\nOe0OOqi4EtjYGOKAtT0nrQFeOsTFsNKugewBeE3TzpzI0Webqm4yVgeexrTp\r\nnsq0/7sa5KJg9UG4Z5OalNnZQ3KEg89gsJePEbm1/Y9fdyvpyRvxYBaZtK7a\r\nUDw5mdOVY1arTxIk2KFwARNRLwpyoMNuzul8zePGgh3j676m7xuI7SJX20Ze\r\nwC6hl+GrPhRVqktGNdMOc8wZO44unSzxmxlPnNXnqxCP6syuciyxD/qr6z3z\r\nFLXJUnBAPySzTE4lnJH9gPCKhZRy7hxflZWhyRN7SBZVG0+LlL9yB7AlOk16\r\nZEccNgH4/1bqacov+orSN5vcr7rS5l2t8xioGVUEWGgJRkXhTdc+StjftIoZ\r\n6UIDZpzbBYAdwXZYF6sMSZdOaTcl13dxaNUKzVFTg5nl+0g/ExZ3S2MyJvG3\r\nVym4lxAQDBOi7O+PEIhPCqLs2xw2ZZ7EP0DXGdtbUBqNYhlSO54ZZ3VOnhaq\r\nsxCUpJIBia+Gqo/1CPegQl6wGsn7DAKE6bT+hIL4dk/vwUP+5gm5rE4Az5cj\r\na3wVwiCjw8RhR0m3Qfk1i9IOdSyFkEdyjfYUz6FZuSWQ9CoyzCujo+dZtujz\r\n1Eo+qzJp9CGMESb3P53oTJqIZygGi0RWGzs=\r\n=vizw\r\n-----END PGP SIGNATURE-----\r\n"},"main":"index.js","type":"module","types":"index.d.ts","funding":{"url":"https://opencollective.com/unified","type":"opencollective"},"gitHead":"b9358691047ad72e6390dfc3c3eedc15509e01fa","scripts":{"test":"npm run build && npm run format && npm run test-coverage","build":"rimraf \"test/**/*.d.ts\" && tsc && tsd && type-coverage","format":"remark . -qfo && prettier . -w --loglevel warn && xo --fix","test-api":"node --unhandled-rejections=strict --conditions development test/index.js","test-coverage":"c8 --check-coverage --branches 100 --functions 100 --lines 100 --statements 100 --reporter lcov node --unhandled-rejections=strict --conditions development test/index.js"},"_npmUser":{"name":"wooorm","email":"tituswormer@gmail.com"},"prettier":{"semi":false,"useTabs":false,"tabWidth":2,"singleQuote":true,"trailingComma":"none","bracketSpacing":false},"repository":{"url":"git+https://github.com/unifiedjs/unified.git","type":"git"},"_npmVersion":"8.5.1","description":"Interface for parsing, inspecting, transforming, and serializing content through syntax trees","directories":{},"sideEffects":false,"_nodeVersion":"17.4.0","dependencies":{"bail":"^2.0.0","vfile":"^5.0.0","extend":"^3.0.0","trough":"^2.0.0","is-buffer":"^2.0.0","@types/unist":"^2.0.0","is-plain-obj":"^4.0.0"},"remarkConfig":{"plugins":["preset-wooorm"]},"typeCoverage":{"detail":true,"strict":true,"atLeast":100,"ignoreCatch":true},"_hasShrinkwrap":false,"devDependencies":{"c8":"^7.0.0","xo":"^0.48.0","tsd":"^0.19.0","tape":"^5.0.0","rimraf":"^3.0.0","prettier":"^2.0.0","remark-cli":"^10.0.0","typescript":"^4.0.0","@types/tape":"^4.0.0","@types/extend":"^3.0.0","type-coverage":"^2.0.0","remark-preset-wooorm":"^9.0.0"},"_npmOperationalInternal":{"tmp":"tmp/unified_10.1.2_1646731708986_0.9554134344659668","host":"s3://npm-registry-packages"}},"11.0.0":{"name":"unified","version":"11.0.0","keywords":["ast","compile","content","cst","parse","process","rehype","remark","retext","serialize","stringify","syntax","transform","tree","unified"],"author":{"url":"https://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"},"license":"MIT","_id":"unified@11.0.0","maintainers":[{"name":"wooorm","email":"tituswormer@gmail.com"}],"contributors":[{"url":"https://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"},{"name":"Junyoung Choi","email":"fluke8259@gmail.com"},{"name":"Hernan Rajchert","email":"hrajchert@gmail.com"},{"name":"Christian Murphy","email":"christian.murphy.42@gmail.com"},{"name":"Vse Mozhet Byt","email":"vsemozhetbyt@gmail.com"},{"name":"Richard Littauer","email":"richard.littauer@gmail.com"}],"homepage":"https://unifiedjs.com","bugs":{"url":"https://github.com/unifiedjs/unified/issues"},"xo":{"rules":{"unicorn/no-this-assignment":"off"},"prettier":true,"overrides":[{"files":["**/*.ts"],"rules":{"@typescript-eslint/ban-types":"off","@typescript-eslint/naming-convention":"off","@typescript-eslint/consistent-type-definitions":"off"}}]},"dist":{"shasum":"3cc00006664739cf3947d676ea6a6edc461795ea","tarball":"https://registry.npmjs.org/unified/-/unified-11.0.0.tgz","fileCount":9,"integrity":"sha512-65zgPyv0vyXnJpw4fbGmoXjP0/6cBmnnesl4lSPGU2tYuzLWtuicRBFcaV6kgzitGrBHj6pgXYomMw1VQe/cQg==","signatures":[{"sig":"MEUCIQClN55+1uEgh63N2f2q+gDMLJHU29P3zQsdx96A1SqdTwIgXEArSDJ/1sZqdPR/DSpBJTCWapD4BRA9w8vaJ8HGVCs=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":118167},"type":"module","types":"./index.d.ts","exports":"./index.js","funding":{"url":"https://opencollective.com/unified","type":"opencollective"},"gitHead":"98ab67534dd4e07fe4032afc1154c1ee8c81dd10","scripts":{"test":"npm run build && npm run format && npm run test-coverage","build":"tsc --build --clean && tsc --build && node script/fix-types.js && type-coverage && tsd","format":"remark . --frail --output --quiet && prettier . --log-level warn --write && xo --fix","prepack":"npm run build && npm run format","test-api":"node --conditions development test/index.js","test-coverage":"c8 --100 --check-coverage --reporter lcov npm run test-api"},"_npmUser":{"name":"wooorm","email":"tituswormer@gmail.com"},"prettier":{"semi":false,"useTabs":false,"tabWidth":2,"singleQuote":true,"trailingComma":"none","bracketSpacing":false},"repository":{"url":"git+https://github.com/unifiedjs/unified.git","type":"git"},"_npmVersion":"9.7.2","description":"parse, inspect, transform, and serialize content through syntax trees","directories":{},"sideEffects":false,"_nodeVersion":"20.0.0","dependencies":{"bail":"^2.0.0","vfile":"^6.0.0","devlop":"^1.0.0","trough":"^2.0.0","@types/unist":"^3.0.0","is-plain-obj":"^4.0.0","@ungap/structured-clone":"^1.0.0"},"remarkConfig":{"plugins":["remark-preset-wooorm",["remark-lint-no-html",false]]},"typeCoverage":{"detail":true,"strict":true,"atLeast":100,"ignoreCatch":true},"_hasShrinkwrap":false,"devDependencies":{"c8":"^8.0.0","xo":"^0.56.0","tsd":"^0.28.0","prettier":"^3.0.0","remark-cli":"^11.0.0","typescript":"^5.0.0","@types/hast":"^3.0.0","@types/node":"^20.0.0","@types/mdast":"^4.0.0","type-coverage":"^2.0.0","remark-preset-wooorm":"^9.0.0","@types/ungap__structured-clone":"^0.3.0"},"_npmOperationalInternal":{"tmp":"tmp/unified_11.0.0_1692089670559_0.6342577700626175","host":"s3://npm-registry-packages"}},"11.0.1":{"name":"unified","version":"11.0.1","keywords":["ast","compile","content","cst","parse","process","rehype","remark","retext","serialize","stringify","syntax","transform","tree","unified"],"author":{"url":"https://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"},"license":"MIT","_id":"unified@11.0.1","maintainers":[{"name":"wooorm","email":"tituswormer@gmail.com"}],"contributors":[{"url":"https://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"},{"name":"Junyoung Choi","email":"fluke8259@gmail.com"},{"name":"Hernan Rajchert","email":"hrajchert@gmail.com"},{"name":"Christian Murphy","email":"christian.murphy.42@gmail.com"},{"name":"Vse Mozhet Byt","email":"vsemozhetbyt@gmail.com"},{"name":"Richard Littauer","email":"richard.littauer@gmail.com"}],"homepage":"https://unifiedjs.com","bugs":{"url":"https://github.com/unifiedjs/unified/issues"},"xo":{"rules":{"unicorn/no-this-assignment":"off"},"prettier":true,"overrides":[{"files":["**/*.ts"],"rules":{"@typescript-eslint/ban-types":"off","@typescript-eslint/naming-convention":"off","@typescript-eslint/consistent-type-definitions":"off"}}]},"dist":{"shasum":"8c4bd13fdd088cd8caf6135637dfcc01170cda7e","tarball":"https://registry.npmjs.org/unified/-/unified-11.0.1.tgz","fileCount":9,"integrity":"sha512-v4p/Tcbn44UjLtASIyrKi29qqSbWY+u3awY5M6fTMVuT3KQ9DfWd4q/JaFGoNEDtQt8+e4yg150oHx34ABwrsg==","signatures":[{"sig":"MEUCIDMA3G84rUo6dN0mUDsFeEtxp8GXjVUfQwuU2X8TEcv5AiEAlmuQBNVCBNBAqqaXXcAT7r8UInaC6JGlqBzcVDchL+g=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":118284},"type":"module","types":"./index.d.ts","exports":"./index.js","funding":{"url":"https://opencollective.com/unified","type":"opencollective"},"gitHead":"9ba8e23fe9b70d740d9e210d8e1dd937d8239224","scripts":{"test":"npm run build && npm run format && npm run test-coverage","build":"tsc --build --clean && tsc --build && node script/fix-types.js && type-coverage && tsd","format":"remark . --frail --output --quiet && prettier . --log-level warn --write && xo --fix","prepack":"npm run build && npm run format","test-api":"node --conditions development test/index.js","test-coverage":"c8 --100 --check-coverage --reporter lcov npm run test-api"},"_npmUser":{"name":"wooorm","email":"tituswormer@gmail.com"},"prettier":{"semi":false,"useTabs":false,"tabWidth":2,"singleQuote":true,"trailingComma":"none","bracketSpacing":false},"repository":{"url":"git+https://github.com/unifiedjs/unified.git","type":"git"},"_npmVersion":"9.7.2","description":"parse, inspect, transform, and serialize content through syntax trees","directories":{},"sideEffects":false,"_nodeVersion":"20.0.0","dependencies":{"bail":"^2.0.0","vfile":"^6.0.0","devlop":"^1.0.0","trough":"^2.0.0","@types/unist":"^3.0.0","is-plain-obj":"^4.0.0","@ungap/structured-clone":"^1.0.0"},"remarkConfig":{"plugins":["remark-preset-wooorm",["remark-lint-no-html",false]]},"typeCoverage":{"detail":true,"strict":true,"atLeast":100,"ignoreCatch":true},"_hasShrinkwrap":false,"devDependencies":{"c8":"^8.0.0","xo":"^0.56.0","tsd":"^0.28.0","prettier":"^3.0.0","remark-cli":"^11.0.0","typescript":"^5.0.0","@types/hast":"^3.0.0","@types/node":"^20.0.0","@types/mdast":"^4.0.0","type-coverage":"^2.0.0","remark-preset-wooorm":"^9.0.0","@types/ungap__structured-clone":"^0.3.0"},"_npmOperationalInternal":{"tmp":"tmp/unified_11.0.1_1692273243377_0.23506623582976616","host":"s3://npm-registry-packages"}},"11.0.2":{"name":"unified","version":"11.0.2","keywords":["ast","compile","content","cst","parse","process","rehype","remark","retext","serialize","stringify","syntax","transform","tree","unified"],"author":{"url":"https://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"},"license":"MIT","_id":"unified@11.0.2","maintainers":[{"name":"wooorm","email":"tituswormer@gmail.com"}],"contributors":[{"url":"https://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"},{"name":"Junyoung Choi","email":"fluke8259@gmail.com"},{"name":"Hernan Rajchert","email":"hrajchert@gmail.com"},{"name":"Christian Murphy","email":"christian.murphy.42@gmail.com"},{"name":"Vse Mozhet Byt","email":"vsemozhetbyt@gmail.com"},{"name":"Richard Littauer","email":"richard.littauer@gmail.com"}],"homepage":"https://unifiedjs.com","bugs":{"url":"https://github.com/unifiedjs/unified/issues"},"xo":{"rules":{"unicorn/no-this-assignment":"off"},"prettier":true,"overrides":[{"files":["**/*.ts"],"rules":{"@typescript-eslint/ban-types":"off","@typescript-eslint/naming-convention":"off","@typescript-eslint/consistent-type-definitions":"off"}}]},"dist":{"shasum":"9a5db5c46059fdffd949ab8612b473e1ee268b31","tarball":"https://registry.npmjs.org/unified/-/unified-11.0.2.tgz","fileCount":9,"integrity":"sha512-Zta++onvS/dJ6xUvXQOR5q8XJZOkiMCE5wQ8Yv9mLR25pxRS567EX0GO6HZRxxNV/lznwfsvRZ/1pqe9K9QLeQ==","signatures":[{"sig":"MEUCIA8SHNUPvs71MsEEFyt/PH2fS1MAkl1RWCoALeGuT8gaAiEA3Sqd+DGF4adjg6PX35BqBzGvE1aA8RupEMXJq1EeLmI=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":118384},"type":"module","types":"./index.d.ts","exports":"./index.js","funding":{"url":"https://opencollective.com/unified","type":"opencollective"},"gitHead":"66bc279044fa48eacd8b417a4af873976ce37143","scripts":{"test":"npm run build && npm run format && npm run test-coverage","build":"tsc --build --clean && tsc --build && node script/fix-types.js && type-coverage && tsd","format":"remark . --frail --output --quiet && prettier . --log-level warn --write && xo --fix","prepack":"npm run build && npm run format","test-api":"node --conditions development test/index.js","test-coverage":"c8 --100 --check-coverage --reporter lcov npm run test-api"},"_npmUser":{"name":"wooorm","email":"tituswormer@gmail.com"},"prettier":{"semi":false,"useTabs":false,"tabWidth":2,"singleQuote":true,"trailingComma":"none","bracketSpacing":false},"repository":{"url":"git+https://github.com/unifiedjs/unified.git","type":"git"},"_npmVersion":"9.7.2","description":"parse, inspect, transform, and serialize content through syntax trees","directories":{},"sideEffects":false,"_nodeVersion":"20.0.0","dependencies":{"bail":"^2.0.0","vfile":"^6.0.0","devlop":"^1.0.0","trough":"^2.0.0","@types/unist":"^3.0.0","is-plain-obj":"^4.0.0","@ungap/structured-clone":"^1.0.0"},"remarkConfig":{"plugins":["remark-preset-wooorm",["remark-lint-no-html",false]]},"typeCoverage":{"detail":true,"strict":true,"atLeast":100,"ignoreCatch":true},"_hasShrinkwrap":false,"devDependencies":{"c8":"^8.0.0","xo":"^0.56.0","tsd":"^0.28.0","prettier":"^3.0.0","remark-cli":"^11.0.0","typescript":"^5.0.0","@types/hast":"^3.0.0","@types/node":"^20.0.0","@types/mdast":"^4.0.0","type-coverage":"^2.0.0","remark-preset-wooorm":"^9.0.0","@types/ungap__structured-clone":"^0.3.0"},"_npmOperationalInternal":{"tmp":"tmp/unified_11.0.2_1692550954330_0.20456517599431168","host":"s3://npm-registry-packages"}},"11.0.3":{"name":"unified","version":"11.0.3","keywords":["ast","compile","content","cst","parse","process","rehype","remark","retext","serialize","stringify","syntax","transform","tree","unified"],"author":{"url":"https://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"},"license":"MIT","_id":"unified@11.0.3","maintainers":[{"name":"wooorm","email":"tituswormer@gmail.com"}],"contributors":[{"url":"https://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"},{"name":"Junyoung Choi","email":"fluke8259@gmail.com"},{"name":"Hernan Rajchert","email":"hrajchert@gmail.com"},{"name":"Christian Murphy","email":"christian.murphy.42@gmail.com"},{"name":"Vse Mozhet Byt","email":"vsemozhetbyt@gmail.com"},{"name":"Richard Littauer","email":"richard.littauer@gmail.com"}],"homepage":"https://unifiedjs.com","bugs":{"url":"https://github.com/unifiedjs/unified/issues"},"xo":{"rules":{"unicorn/no-this-assignment":"off"},"prettier":true,"overrides":[{"files":["**/*.ts"],"rules":{"@typescript-eslint/ban-types":"off","@typescript-eslint/naming-convention":"off","@typescript-eslint/consistent-type-definitions":"off"}}]},"dist":{"shasum":"e141be0fe466a2d28b2160f62712bc9cbc08fdd4","tarball":"https://registry.npmjs.org/unified/-/unified-11.0.3.tgz","fileCount":9,"integrity":"sha512-jlCV402P+YDcFcB2VcN/n8JasOddqIiaxv118wNBoZXEhOn+lYG7BR4Bfg2BwxvlK58dwbuH2w7GX2esAjL6Mg==","signatures":[{"sig":"MEUCIQDmuRD/Mymu+O1JujTjqDlbhQ4TW76wvLiVQ+fznYhO1AIgeI7WSbI+1huJlAh5DNAQDrHs8+AK8witPDJtV/WAnEE=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":141014},"type":"module","types":"./index.d.ts","exports":"./index.js","funding":{"url":"https://opencollective.com/unified","type":"opencollective"},"gitHead":"67949bb47abe4da52a20f1472ef9b0a9f0a6d123","scripts":{"test":"npm run build && npm run format && npm run test-coverage","build":"tsc --build --clean && tsc --build && node script/fix-types.js && type-coverage && tsd","format":"remark . --frail --output --quiet && prettier . --log-level warn --write && xo --fix","prepack":"npm run build && npm run format","test-api":"node --conditions development test/index.js","test-coverage":"c8 --100 --check-coverage --reporter lcov npm run test-api"},"_npmUser":{"name":"wooorm","email":"tituswormer@gmail.com"},"prettier":{"semi":false,"useTabs":false,"tabWidth":2,"singleQuote":true,"trailingComma":"none","bracketSpacing":false},"repository":{"url":"git+https://github.com/unifiedjs/unified.git","type":"git"},"_npmVersion":"9.8.0","description":"parse, inspect, transform, and serialize content through syntax trees","directories":{},"sideEffects":false,"_nodeVersion":"20.5.1","dependencies":{"bail":"^2.0.0","vfile":"^6.0.0","devlop":"^1.0.0","extend":"^3.0.0","trough":"^2.0.0","@types/unist":"^3.0.0","is-plain-obj":"^4.0.0"},"remarkConfig":{"plugins":["remark-preset-wooorm",["remark-lint-no-html",false]]},"typeCoverage":{"detail":true,"strict":true,"atLeast":100,"ignoreCatch":true},"_hasShrinkwrap":false,"devDependencies":{"c8":"^8.0.0","xo":"^0.56.0","tsd":"^0.29.0","prettier":"^3.0.0","remark-cli":"^11.0.0","typescript":"^5.0.0","@types/hast":"^3.0.0","@types/node":"^20.0.0","@types/mdast":"^4.0.0","@types/extend":"^3.0.0","type-coverage":"^2.0.0","remark-preset-wooorm":"^9.0.0"},"_npmOperationalInternal":{"tmp":"tmp/unified_11.0.3_1693927378715_0.05401967245764583","host":"s3://npm-registry-packages"}},"11.0.4":{"name":"unified","version":"11.0.4","keywords":["ast","compile","content","cst","parse","process","rehype","remark","retext","serialize","stringify","syntax","transform","tree","unified"],"author":{"url":"https://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"},"license":"MIT","_id":"unified@11.0.4","maintainers":[{"name":"wooorm","email":"tituswormer@gmail.com"}],"contributors":[{"url":"https://wooorm.com","name":"Titus Wormer","email":"tituswormer@gmail.com"},{"name":"Junyoung Choi","email":"fluke8259@gmail.com"},{"name":"Hernan Rajchert","email":"hrajchert@gmail.com"},{"name":"Christian Murphy","email":"christian.murphy.42@gmail.com"},{"name":"Vse Mozhet Byt","email":"vsemozhetbyt@gmail.com"},{"name":"Richard Littauer","email":"richard.littauer@gmail.com"}],"homepage":"https://unifiedjs.com","bugs":{"url":"https://github.com/unifiedjs/unified/issues"},"xo":{"rules":{"unicorn/no-this-assignment":"off"},"prettier":true,"overrides":[{"files":["**/*.ts"],"rules":{"@typescript-eslint/ban-types":"off","@typescript-eslint/naming-convention":"off","@typescript-eslint/consistent-type-definitions":"off"}}]},"dist":{"shasum":"f4be0ac0fe4c88cb873687c07c64c49ed5969015","tarball":"https://registry.npmjs.org/unified/-/unified-11.0.4.tgz","fileCount":11,"integrity":"sha512-apMPnyLjAX+ty4OrNap7yumyVAMlKx5IWU2wlzzUdYJO9A8f1p9m/gywF/GM2ZDFcjQPrx59Mc90KwmxsoklxQ==","signatures":[{"sig":"MEYCIQC2XXliUDG+WNUtX4m7e6dkIvlU16kFyEnP4TKmuZN6SgIhAJ39f4T2VCmGtbjdsuM1Hir2VmsRUC+o8igyTa624HFm","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":146561},"type":"module","types":"./index.d.ts","exports":"./index.js","funding":{"url":"https://opencollective.com/unified","type":"opencollective"},"gitHead":"b69689bba52a918d87aa62f295ccffa8d9aa8ef8","scripts":{"test":"npm run build && npm run format && npm run test-coverage","build":"tsc --build --clean && tsc --build && node script/fix-types.js && type-coverage && tsd","format":"remark . --frail --output --quiet && prettier . --log-level warn --write && xo --fix","prepack":"npm run build && npm run format","test-api":"node --conditions development test/index.js","test-coverage":"c8 --100 --check-coverage --reporter lcov npm run test-api"},"_npmUser":{"name":"wooorm","email":"tituswormer@gmail.com"},"prettier":{"semi":false,"useTabs":false,"tabWidth":2,"singleQuote":true,"trailingComma":"none","bracketSpacing":false},"repository":{"url":"git+https://github.com/unifiedjs/unified.git","type":"git"},"_npmVersion":"10.2.0","description":"parse, inspect, transform, and serialize content through syntax trees","directories":{},"sideEffects":false,"_nodeVersion":"21.0.0","dependencies":{"bail":"^2.0.0","vfile":"^6.0.0","devlop":"^1.0.0","extend":"^3.0.0","trough":"^2.0.0","@types/unist":"^3.0.0","is-plain-obj":"^4.0.0"},"remarkConfig":{"plugins":["remark-preset-wooorm",["remark-lint-no-html",false]]},"typeCoverage":{"detail":true,"strict":true,"atLeast":100,"ignoreCatch":true},"_hasShrinkwrap":false,"devDependencies":{"c8":"^8.0.0","xo":"^0.56.0","tsd":"^0.29.0","prettier":"^3.0.0","remark-cli":"^11.0.0","typescript":"^5.0.0","@types/hast":"^3.0.0","@types/node":"^20.0.0","@types/mdast":"^4.0.0","@types/extend":"^3.0.0","type-coverage":"^2.0.0","remark-preset-wooorm":"^9.0.0"},"_npmOperationalInternal":{"tmp":"tmp/unified_11.0.4_1698319414256_0.9626812917400207","host":"s3://npm-registry-packages"}},"11.0.5":{"name":"unified","version":"11.0.5","description":"parse, inspect, transform, and serialize content through syntax trees","license":"MIT","keywords":["ast","compile","content","cst","parse","process","rehype","remark","retext","serialize","stringify","syntax","transform","tree","unified"],"homepage":"https://unifiedjs.com","repository":{"type":"git","url":"git+https://github.com/unifiedjs/unified.git"},"bugs":{"url":"https://github.com/unifiedjs/unified/issues"},"funding":{"type":"opencollective","url":"https://opencollective.com/unified"},"author":{"name":"Titus Wormer","email":"tituswormer@gmail.com","url":"https://wooorm.com"},"contributors":[{"name":"Titus Wormer","email":"tituswormer@gmail.com","url":"https://wooorm.com"},{"name":"Junyoung Choi","email":"fluke8259@gmail.com"},{"name":"Hernan Rajchert","email":"hrajchert@gmail.com"},{"name":"Christian Murphy","email":"christian.murphy.42@gmail.com"},{"name":"Vse Mozhet Byt","email":"vsemozhetbyt@gmail.com"},{"name":"Richard Littauer","email":"richard.littauer@gmail.com"}],"sideEffects":false,"type":"module","exports":"./index.js","dependencies":{"@types/unist":"^3.0.0","bail":"^2.0.0","devlop":"^1.0.0","extend":"^3.0.0","is-plain-obj":"^4.0.0","trough":"^2.0.0","vfile":"^6.0.0"},"devDependencies":{"@types/extend":"^3.0.0","@types/hast":"^3.0.0","@types/mdast":"^4.0.0","@types/node":"^20.0.0","c8":"^10.0.0","prettier":"^3.0.0","remark-cli":"^12.0.0","remark-preset-wooorm":"^10.0.0","tsd":"^0.31.0","type-coverage":"^2.0.0","typescript":"^5.0.0","xo":"^0.58.0"},"scripts":{"build":"tsc --build --clean && tsc --build && node script/fix-types.js && type-coverage && tsd","format":"remark . --frail --output --quiet && prettier . --log-level warn --write && xo --fix","prepack":"npm run build && npm run format","test":"npm run build && npm run format && npm run test-coverage","test-api":"node --conditions development test/index.js","test-coverage":"c8 --100 --check-coverage --reporter lcov npm run test-api"},"prettier":{"bracketSpacing":false,"singleQuote":true,"semi":false,"tabWidth":2,"trailingComma":"none","useTabs":false},"remarkConfig":{"plugins":["remark-preset-wooorm",["remark-lint-no-html",false]]},"typeCoverage":{"atLeast":100,"detail":true,"ignoreCatch":true,"strict":true},"xo":{"overrides":[{"files":["**/*.ts"],"rules":{"@typescript-eslint/ban-types":"off","@typescript-eslint/consistent-type-definitions":"off","@typescript-eslint/naming-convention":"off","import/no-duplicates":"off"}}],"prettier":true,"rules":{"unicorn/no-this-assignment":"off"}},"_id":"unified@11.0.5","gitHead":"242105bd6e18c61ca10f37d99529b89f1be37518","types":"./index.d.ts","_nodeVersion":"22.0.0","_npmVersion":"10.8.1","dist":{"integrity":"sha512-xKvGhPWw3k84Qjh8bI3ZeJjqnyadK+GEFtazSfZv/rKeTkTjOJho6mFqh2SM96iIcZokxiOpg78GazTSg8+KHA==","shasum":"f66677610a5c0a9ee90cab2b8d4d66037026d9e1","tarball":"https://registry.npmjs.org/unified/-/unified-11.0.5.tgz","fileCount":11,"unpackedSize":145932,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIHyAbJe+7NVaTRj5oMZr/UFWPuDfsiB0Hh9+TqYZU1tfAiEAmgYGHWdlnyPAilACDGN4sbec4FsX1b1QJehHDnEhJwM="}]},"_npmUser":{"name":"wooorm","email":"tituswormer@gmail.com"},"directories":{},"maintainers":[{"name":"remcohaszing","email":"remcohaszing@gmail.com"},{"name":"wooorm","email":"tituswormer@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/unified_11.0.5_1718800423279_0.5839531672048552"},"_hasShrinkwrap":false}},"time":{"created":"2015-07-31T09:33:35.699Z","modified":"2024-06-19T12:33:43.698Z","1.0.0":"2015-07-31T09:33:35.699Z","2.0.0":"2015-09-16T11:51:57.961Z","2.1.0":"2015-10-10T15:18:29.036Z","2.1.1":"2015-10-14T18:19:18.664Z","2.1.2":"2015-10-23T20:20:14.313Z","2.1.3":"2016-01-24T08:20:25.265Z","2.1.4":"2016-01-24T08:25:37.665Z","3.0.0":"2016-02-13T13:11:24.331Z","4.0.0":"2016-05-24T14:09:58.133Z","4.0.1":"2016-05-24T16:58:29.035Z","4.1.0":"2016-06-11T21:24:38.572Z","4.1.1":"2016-06-12T12:51:52.637Z","4.1.2":"2016-06-13T18:38:39.246Z","4.2.0":"2016-08-01T16:01:47.158Z","4.2.1":"2016-08-02T07:09:22.168Z","5.0.0":"2016-08-21T15:14:24.434Z","5.1.0":"2016-10-10T20:18:51.186Z","6.0.0":"2017-02-23T11:21:44.879Z","6.1.0":"2017-02-24T10:31:22.809Z","6.1.1":"2017-02-28T20:59:30.247Z","6.1.2":"2017-04-10T20:04:25.245Z","6.1.3":"2017-04-30T12:05:20.913Z","6.1.4":"2017-05-23T15:24:21.891Z","6.1.5":"2017-06-16T17:11:51.359Z","6.1.6":"2017-11-16T23:35:33.166Z","6.2.0":"2018-05-02T12:39:45.552Z","7.0.0":"2018-05-10T13:19:04.658Z","7.0.1":"2018-11-02T17:44:41.021Z","7.0.2":"2018-11-15T09:31:43.695Z","7.1.0":"2018-12-13T09:04:53.622Z","8.0.0":"2019-06-25T15:43:15.092Z","8.0.1":"2019-07-02T08:54:47.189Z","8.1.0":"2019-07-11T08:31:05.955Z","8.2.0":"2019-07-13T21:12:56.757Z","8.3.0":"2019-07-15T17:46:27.496Z","8.3.1":"2019-07-16T08:16:23.402Z","8.3.2":"2019-07-17T13:06:59.642Z","8.4.0":"2019-09-14T09:21:44.422Z","8.4.1":"2019-10-03T06:45:40.766Z","8.4.2":"2019-11-09T20:19:30.638Z","9.0.0":"2020-03-30T06:20:06.560Z","9.1.0":"2020-07-23T09:40:22.216Z","9.2.0":"2020-08-21T18:10:03.815Z","9.2.1":"2021-02-25T08:33:08.477Z","9.2.2":"2021-07-01T16:39:11.345Z","10.0.0-beta.1":"2021-07-06T08:26:19.195Z","10.0.0":"2021-07-15T07:54:13.251Z","10.0.1":"2021-07-21T07:53:23.881Z","10.1.0":"2021-07-30T10:05:39.510Z","10.1.1":"2021-11-18T17:23:34.786Z","10.1.2":"2022-03-08T09:28:29.205Z","11.0.0":"2023-08-15T08:54:30.744Z","11.0.1":"2023-08-17T11:54:03.545Z","11.0.2":"2023-08-20T17:02:34.585Z","11.0.3":"2023-09-05T15:22:58.951Z","11.0.4":"2023-10-26T11:23:34.441Z","11.0.5":"2024-06-19T12:33:43.464Z"},"maintainers":[{"name":"remcohaszing","email":"remcohaszing@gmail.com"},{"name":"wooorm","email":"tituswormer@gmail.com"}],"author":{"name":"Titus Wormer","email":"tituswormer@gmail.com","url":"https://wooorm.com"},"repository":{"type":"git","url":"git+https://github.com/unifiedjs/unified.git"},"keywords":["ast","compile","content","cst","parse","process","rehype","remark","retext","serialize","stringify","syntax","transform","tree","unified"],"license":"MIT","homepage":"https://unifiedjs.com","bugs":{"url":"https://github.com/unifiedjs/unified/issues"},"readme":"# [![unified][logo]][site]\n\n[![Build][build-badge]][build]\n[![Coverage][coverage-badge]][coverage]\n[![Downloads][downloads-badge]][downloads]\n[![Size][size-badge]][size]\n[![Sponsors][sponsors-badge]][collective]\n[![Backers][backers-badge]][collective]\n[![Chat][chat-badge]][chat]\n\n**unified** lets you inspect and transform content with plugins.\n\n## Contents\n\n* [What is this?](#what-is-this)\n* [When should I use this?](#when-should-i-use-this)\n* [Install](#install)\n* [Use](#use)\n* [Overview](#overview)\n* [API](#api)\n  * [`processor()`](#processor)\n  * [`processor.compiler`](#processorcompiler)\n  * [`processor.data([key[, value]])`](#processordatakey-value)\n  * [`processor.freeze()`](#processorfreeze)\n  * [`processor.parse(file)`](#processorparsefile)\n  * [`processor.parser`](#processorparser)\n  * [`processor.process(file[, done])`](#processorprocessfile-done)\n  * [`processor.processSync(file)`](#processorprocesssyncfile)\n  * [`processor.run(tree[, file][, done])`](#processorruntree-file-done)\n  * [`processor.runSync(tree[, file])`](#processorrunsynctree-file)\n  * [`processor.stringify(tree[, file])`](#processorstringifytree-file)\n  * [`processor.use(plugin[, options])`](#processoruseplugin-options)\n  * [`CompileResultMap`](#compileresultmap)\n  * [`CompileResults`](#compileresults)\n  * [`Compiler`](#compiler)\n  * [`Data`](#data)\n  * [`Parser`](#parser)\n  * [`Pluggable`](#pluggable)\n  * [`PluggableList`](#pluggablelist)\n  * [`Plugin`](#plugin)\n  * [`PluginTuple`](#plugintuple)\n  * [`Preset`](#preset)\n  * [`ProcessCallback`](#processcallback)\n  * [`Processor`](#processor-1)\n  * [`RunCallback`](#runcallback)\n  * [`Settings`](#settings)\n  * [`TransformCallback`](#transformcallback)\n  * [`Transformer`](#transformer)\n* [Types](#types)\n* [Compatibility](#compatibility)\n* [Contribute](#contribute)\n* [Sponsor](#sponsor)\n* [Acknowledgments](#acknowledgments)\n* [License](#license)\n\n## What is this?\n\nunified is two things:\n\n* **unified** is a collective of 500+ free and open source packages that work\n  with content as structured data (ASTs)\n* `unified` (this project) is the core package, used in 1.3m+ projects on GH,\n  to process content with plugins\n\nSeveral ecosystems are built on unified around different kinds of content.\nNotably, [remark][] (markdown), [rehype][] (HTML), and [retext][] (natural\nlanguage).\nThese ecosystems can be connected together.\n\n* for more about us, see [`unifiedjs.com`][site]\n* for updates, see [@unifiedjs][twitter] on Twitter\n* for questions, see [support][]\n* to help, see [contribute][] and [sponsor][] below\n\n## When should I use this?\n\nIn some cases, you are already using unified.\nFor example, it’s used in MDX, Gatsby, Docusaurus, etc.\nIn those cases, you don’t need to add `unified` yourself but you can include\nplugins into those projects.\n\nBut the real fun (for some) is to get your hands dirty and work with syntax\ntrees and build with it yourself.\nYou can create those projects, or things like Prettier, or your own site\ngenerator.\nYou can connect utilities together and make your own plugins that check for\nproblems and transform from one thing to another.\n\nWhen you are dealing with one type of content (such as markdown), you can use\nthe main package of that ecosystem instead (so `remark`).\nWhen you are dealing with different kinds of content (such as markdown and\nHTML), it’s recommended to use `unified` itself, and pick and choose the plugins\nyou need.\n\n## Install\n\nThis package is [ESM only][esm].\nIn Node.js (version 16+), install with [npm][]:\n\n```sh\nnpm install unified\n```\n\nIn Deno with [`esm.sh`][esmsh]:\n\n```js\nimport {unified} from 'https://esm.sh/unified@11'\n```\n\nIn browsers with [`esm.sh`][esmsh]:\n\n```html\n<script type=\"module\">\n  import {unified} from 'https://esm.sh/unified@11?bundle'\n</script>\n```\n\n## Use\n\n```js\nimport rehypeDocument from 'rehype-document'\nimport rehypeFormat from 'rehype-format'\nimport rehypeStringify from 'rehype-stringify'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport {unified} from 'unified'\nimport {reporter} from 'vfile-reporter'\n\nconst file = await unified()\n  .use(remarkParse)\n  .use(remarkRehype)\n  .use(rehypeDocument, {title: '👋🌍'})\n  .use(rehypeFormat)\n  .use(rehypeStringify)\n  .process('# Hello world!')\n\nconsole.error(reporter(file))\nconsole.log(String(file))\n```\n\nYields:\n\n```txt\nno issues found\n```\n\n```html\n<!doctype html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <title>👋🌍</title>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  </head>\n  <body>\n    <h1>Hello world!</h1>\n  </body>\n</html>\n```\n\n<!-- Old name: -->\n\n<a name=\"description\"></a>\n\n## Overview\n\n`unified` is an interface for processing content with syntax trees.\nSyntax trees are a representation of content understandable to programs.\nThose programs, called *[plugins][api-plugin]*, take these trees and inspect and\nmodify them.\nTo get to the syntax tree from text, there is a *[parser][api-parser]*.\nTo get from that back to text, there is a *[compiler][api-compiler]*.\nThis is the *[process][api-process]* of a *processor*.\n\n```ascii\n| ........................ process ........................... |\n| .......... parse ... | ... run ... | ... stringify ..........|\n\n          +--------+                     +----------+\nInput ->- | Parser | ->- Syntax Tree ->- | Compiler | ->- Output\n          +--------+          |          +----------+\n                              X\n                              |\n                       +--------------+\n                       | Transformers |\n                       +--------------+\n```\n\n###### Processors\n\nProcessors process content.\nOn its own, `unified` (the root processor) doesn’t work.\nIt needs to be configured with plugins to work.\nFor example:\n\n```js\nconst processor = unified()\n  .use(remarkParse)\n  .use(remarkRehype)\n  .use(rehypeDocument, {title: '👋🌍'})\n  .use(rehypeFormat)\n  .use(rehypeStringify)\n```\n\nThat processor can do different things.\nIt can:\n\n* …parse markdown (`parse`)\n* …turn parsed markdown into HTML and format the HTML (`run`)\n* …compile HTML (`stringify`)\n* …do all of the above (`process`)\n\nEvery processor implements another processor.\nTo create a processor, call another processor.\nThe new processor is configured to work the same as its ancestor.\nBut when the descendant processor is configured in the future it does not affect\nthe ancestral processor.\n\nWhen processors are exposed from a module (for example, `unified` itself) they\nshould not be configured directly, as that would change their behavior for all\nmodule users.\nThose processors are *[frozen][api-freeze]* and they should be called to create\na new processor before they are used.\n\n###### File\n\nWhen processing a document, metadata is gathered about that document.\n[`vfile`][vfile] is the file format that stores data, metadata, and messages\nabout files for unified and plugins.\n\nThere are several [utilities][vfile-utilities] for working with these files.\n\n###### Syntax tree\n\nThe syntax trees used in unified are [unist][] nodes.\nA tree represents a whole document and each [node][] is a plain JavaScript\nobject with a `type` field.\nThe semantics of nodes and the format of syntax trees is defined by other\nprojects:\n\n* [esast][] — JavaScript\n* [hast][] — HTML\n* [mdast][] — markdown\n* [nlcst][] — natural language\n* [xast][] — XML\n\nThere are many utilities for working with trees listed in each aforementioned\nproject and maintained in the [`syntax-tree`][syntax-tree] organization.\nThese utilities are a level lower than unified itself and are building blocks\nthat can be used to make plugins.\n\n<!-- Old name: -->\n\n<a name=\"list-of-processors\"></a>\n\n###### Ecosystems\n\nAround each syntax tree is an ecosystem that focusses on that particular kind\nof content.\nAt their core, they parse text to a tree and compile that tree back to text.\nThey also provide plugins that work with the syntax tree, without requiring\nthat the end user has knowledge about that tree.\n\n* [rehype][] (hast) — HTML\n* [remark][] (mdast) — markdown\n* [retext][] (nlcst) — natural language\n\n<a name=\"list-of-plugins\"></a>\n\n###### Plugins\n\nEach aforementioned ecosystem comes with a large set of plugins that you can\npick and choose from to do all kinds of things.\n\n* [List of remark plugins][remark-plugins] ·\n  [`remarkjs/awesome-remark`][awesome-remark] ·\n  [`remark-plugin` topic][topic-remark-plugin]\n* [List of rehype plugins][rehype-plugins] ·\n  [`rehypejs/awesome-rehype`][awesome-rehype] ·\n  [`rehype-plugin` topic][topic-rehype-plugin]\n* [List of retext plugins][retext-plugins] ·\n  [`retextjs/awesome-retext`][awesome-retext] ·\n  [`retext-plugin` topic][topic-retext-plugin]\n\nThere are also a few plugins that work in any ecosystem:\n\n* [`unified-diff`](https://github.com/unifiedjs/unified-diff)\n  — ignore unrelated messages in GitHub Actions and Travis\n* [`unified-infer-git-meta`](https://github.com/unifiedjs/unified-infer-git-meta)\n  — infer metadata of a document from Git\n* [`unified-message-control`](https://github.com/unifiedjs/unified-message-control)\n  — enable, disable, and ignore messages from content\n\n###### Configuration\n\nProcessors are configured with [plugins][api-plugin] or with the\n[`data`][api-data] method.\nMost plugins also accept configuration through options.\nSee each plugin’s readme for more info.\n\n###### Integrations\n\nunified can integrate with the file system through\n[`unified-engine`][unified-engine].\nCLI apps can be created with [`unified-args`][unified-args], Gulp plugins with\n[`unified-engine-gulp`][unified-engine-gulp], and language servers with\n[`unified-language-server`][unified-language-server].\nA streaming interface can be created with [`unified-stream`][unified-stream].\n\n###### Programming interface\n\nThe [API][] provided by `unified` allows multiple files to be processed and\ngives access to metadata (such as lint messages):\n\n```js\nimport rehypeStringify from 'rehype-stringify'\nimport remarkParse from 'remark-parse'\nimport remarkPresetLintMarkdownStyleGuide from 'remark-preset-lint-markdown-style-guide'\nimport remarkRehype from 'remark-rehype'\nimport remarkRetext from 'remark-retext'\nimport retextEnglish from 'retext-english'\nimport retextEquality from 'retext-equality'\nimport {unified} from 'unified'\nimport {reporter} from 'vfile-reporter'\n\nconst file = await unified()\n  .use(remarkParse)\n  .use(remarkPresetLintMarkdownStyleGuide)\n  .use(remarkRetext, unified().use(retextEnglish).use(retextEquality))\n  .use(remarkRehype)\n  .use(rehypeStringify)\n  .process('*Emphasis* and _stress_, you guys!')\n\nconsole.error(reporter(file))\nconsole.log(String(file))\n```\n\nYields:\n\n```txt\n1:16-1:24 warning Emphasis should use `*` as a marker                                 emphasis-marker remark-lint\n1:30-1:34 warning `guys` may be insensitive, use `people`, `persons`, `folks` instead gals-man        retext-equality\n\n⚠ 2 warnings\n```\n\n```html\n<p><em>Emphasis</em> and <em>stress</em>, you guys!</p>\n```\n\n<!-- Old name: -->\n\n<a name=\"processing-between-syntaxes\"></a>\n\n###### Transforming between ecosystems\n\nEcosystems can be combined in two modes.\n\n**Bridge** mode transforms the tree from one format (*origin*) to another\n(*destination*).\nA different processor runs on the destination tree.\nAfterwards, the original processor continues with the origin tree.\n\n**Mutate** mode also transforms the syntax tree from one format to another.\nBut the original processor continues transforming the destination tree.\n\nIn the previous example (“Programming interface”), `remark-retext` is used in\nbridge mode: the origin syntax tree is kept after retext is done; whereas\n`remark-rehype` is used in mutate mode: it sets a new syntax tree and discards\nthe origin tree.\n\nThe following plugins lets you combine ecosystems:\n\n* [`remark-retext`][remark-retext] — turn markdown into natural language\n* [`remark-rehype`][remark-rehype] — turn markdown into HTML\n* [`rehype-retext`][rehype-retext] — turn HTML into natural language\n* [`rehype-remark`][rehype-remark] — turn HTML into markdown\n\n## API\n\nThis package exports the identifier `unified` (the root `processor`).\nThere is no default export.\n\n### `processor()`\n\nCreate a new processor.\n\n###### Returns\n\nNew *[unfrozen][api-freeze]* processor ([`processor`][api-processor]).\n\nThis processor is configured to work the same as its ancestor.\nWhen the descendant processor is configured in the future it does not affect\nthe ancestral processor.\n\n###### Example\n\nThis example shows how a new processor can be created (from `remark`) and linked\nto **stdin**(4) and **stdout**(4).\n\n```js\nimport process from 'node:process'\nimport concatStream from 'concat-stream'\nimport {remark} from 'remark'\n\nprocess.stdin.pipe(\n  concatStream(function (buf) {\n    process.stdout.write(String(remark().processSync(buf)))\n  })\n)\n```\n\n### `processor.compiler`\n\nCompiler to use ([`Compiler`][api-compiler], optional).\n\n### `processor.data([key[, value]])`\n\nConfigure the processor with info available to all plugins.\nInformation is stored in an object.\n\nTypically, options can be given to a specific plugin, but sometimes it makes\nsense to have information shared with several plugins.\nFor example, a list of HTML elements that are self-closing, which is needed\nduring all [phases][overview].\n\n> 👉 **Note**: setting information cannot occur on *[frozen][api-freeze]*\n> processors.\n> Call the processor first to create a new unfrozen processor.\n\n> 👉 **Note**: to register custom data in TypeScript, augment the\n> [`Data`][api-data] interface.\n\n###### Signatures\n\n* `processor = processor.data(key, value)`\n* `processor = processor.data(dataset)`\n* `value = processor.data(key)`\n* `dataset = processor.data()`\n\n###### Parameters\n\n* `key` ([`keyof Data`][api-data], optional) — field to get\n* `value` ([`Data[key]`][api-data]) — value to set\n* `values` ([`Data`][api-data]) — values to set\n\n###### Returns\n\nThe current processor when setting ([`processor`][api-processor]), the value at\n`key` when getting ([`Data[key]`][api-data]), or the entire dataset when\ngetting without key ([`Data`][api-data]).\n\n###### Example\n\nThis example show how to get and set info:\n\n```js\nimport {unified} from 'unified'\n\nconst processor = unified().data('alpha', 'bravo')\n\nprocessor.data('alpha') // => 'bravo'\n\nprocessor.data() // => {alpha: 'bravo'}\n\nprocessor.data({charlie: 'delta'})\n\nprocessor.data() // => {charlie: 'delta'}\n```\n\n### `processor.freeze()`\n\nFreeze a processor.\n\nFrozen processors are meant to be extended and not to be configured directly.\n\nWhen a processor is frozen it cannot be unfrozen.\nNew processors working the same way can be created by calling the processor.\n\nIt’s possible to freeze processors explicitly by calling `.freeze()`.\nProcessors freeze automatically when `.parse()`, `.run()`, `.runSync()`,\n`.stringify()`, `.process()`, or `.processSync()` are called.\n\n###### Returns\n\nThe current processor ([`processor`][api-processor]).\n\n###### Example\n\nThis example, `index.js`, shows how `rehype` prevents extensions to itself:\n\n```js\nimport rehypeParse from 'rehype-parse'\nimport rehypeStringify from 'rehype-stringify'\nimport {unified} from 'unified'\n\nexport const rehype = unified().use(rehypeParse).use(rehypeStringify).freeze()\n```\n\nThat processor can be used and configured like so:\n\n```js\nimport {rehype} from 'rehype'\nimport rehypeFormat from 'rehype-format'\n// …\n\nrehype()\n  .use(rehypeFormat)\n  // …\n```\n\nA similar looking example is broken as operates on the frozen interface.\nIf this behavior was allowed it would result in unexpected behavior so an error\nis thrown.\n**This is not valid**:\n\n```js\nimport {rehype} from 'rehype'\nimport rehypeFormat from 'rehype-format'\n// …\n\nrehype\n  .use(rehypeFormat)\n  // …\n```\n\nYields:\n\n```txt\n~/node_modules/unified/index.js:426\n    throw new Error(\n    ^\n\nError: Cannot call `use` on a frozen processor.\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.\n    at assertUnfrozen (~/node_modules/unified/index.js:426:11)\n    at Function.use (~/node_modules/unified/index.js:165:5)\n    …\n```\n\n### `processor.parse(file)`\n\nParse text to a syntax tree.\n\n> 👉 **Note**: `parse` freezes the processor if not already\n> *[frozen][api-freeze]*.\n\n> 👉 **Note**: `parse` performs the [parse phase][overview], not the run phase\n> or other phases.\n\n###### Parameters\n\n* `file` ([`Compatible`][vfile-compatible]) — file to parse; typically\n  `string` or [`VFile`][vfile]; any value accepted as `x` in `new VFile(x)`\n\n###### Returns\n\nSyntax tree representing `file` ([`Node`][node]).\n\n###### Example\n\nThis example shows how `parse` can be used to create a tree from a file.\n\n```js\nimport remarkParse from 'remark-parse'\nimport {unified} from 'unified'\n\nconst tree = unified().use(remarkParse).parse('# Hello world!')\n\nconsole.log(tree)\n```\n\nYields:\n\n```js\n{\n  type: 'root',\n  children: [\n    {type: 'heading', depth: 1, children: [Array], position: [Object]}\n  ],\n  position: {\n    start: {line: 1, column: 1, offset: 0},\n    end: {line: 1, column: 15, offset: 14}\n  }\n}\n```\n\n### `processor.parser`\n\nParser to use ([`Parser`][api-parser], optional).\n\n### `processor.process(file[, done])`\n\nProcess the given file as configured on the processor.\n\n> 👉 **Note**: `process` freezes the processor if not already\n> *[frozen][api-freeze]*.\n\n> 👉 **Note**: `process` performs the [parse, run, and stringify\n> phases][overview].\n\n###### Signatures\n\n* `processor.process(file, done)`\n* `Promise<VFile> = processor.process(file?)`\n\n###### Parameters\n\n* `file` ([`Compatible`][vfile-compatible], optional) — file; typically\n  `string` or [`VFile`][vfile]; any value accepted as `x` in `new VFile(x)`\n* `done` ([`ProcessCallback`][api-process-callback], optional) — callback\n\n###### Returns\n\nNothing if `done` is given (`undefined`).\nOtherwise a promise, rejected with a fatal error or resolved with the\nprocessed file ([`Promise<VFile>`][vfile]).\n\nThe parsed, transformed, and compiled value is available at `file.value` (see\nnote).\n\n> 👉 **Note**: unified typically compiles by serializing: most\n> compilers return `string` (or `Uint8Array`).\n> Some compilers, such as the one configured with\n> [`rehype-react`][rehype-react], return other values (in this case, a React\n> tree).\n> If you’re using a compiler that doesn’t serialize, expect different result\n> values.\n>\n> To register custom results in TypeScript, add them to\n> [`CompileResultMap`][api-compile-result-map].\n\n###### Example\n\nThis example shows how `process` can be used to process a file:\n\n```js\nimport rehypeDocument from 'rehype-document'\nimport rehypeFormat from 'rehype-format'\nimport rehypeStringify from 'rehype-stringify'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport {unified} from 'unified'\n\nconst file = await unified()\n  .use(remarkParse)\n  .use(remarkRehype)\n  .use(rehypeDocument, {title: '👋🌍'})\n  .use(rehypeFormat)\n  .use(rehypeStringify)\n  .process('# Hello world!')\n\nconsole.log(String(file))\n```\n\nYields:\n\n```html\n<!doctype html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <title>👋🌍</title>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  </head>\n  <body>\n    <h1>Hello world!</h1>\n  </body>\n</html>\n```\n\n### `processor.processSync(file)`\n\nProcess the given file as configured on the processor.\n\nAn error is thrown if asynchronous transforms are configured.\n\n> 👉 **Note**: `processSync` freezes the processor if not already\n> *[frozen][api-freeze]*.\n\n> 👉 **Note**: `processSync` performs the [parse, run, and stringify\n> phases][overview].\n\n###### Parameters\n\n* `file` ([`Compatible`][vfile-compatible], optional) — file; typically\n  `string` or [`VFile`][vfile]; any value accepted as `x` in `new VFile(x)`\n\n###### Returns\n\nThe processed file ([`VFile`][vfile]).\n\nThe parsed, transformed, and compiled value is available at `file.value` (see\nnote).\n\n> 👉 **Note**: unified typically compiles by serializing: most\n> compilers return `string` (or `Uint8Array`).\n> Some compilers, such as the one configured with\n> [`rehype-react`][rehype-react], return other values (in this case, a React\n> tree).\n> If you’re using a compiler that doesn’t serialize, expect different result\n> values.\n>\n> To register custom results in TypeScript, add them to\n> [`CompileResultMap`][api-compile-result-map].\n\n###### Example\n\nThis example shows how `processSync` can be used to process a file, if all\ntransformers are synchronous.\n\n```js\nimport rehypeDocument from 'rehype-document'\nimport rehypeFormat from 'rehype-format'\nimport rehypeStringify from 'rehype-stringify'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport {unified} from 'unified'\n\nconst processor = unified()\n  .use(remarkParse)\n  .use(remarkRehype)\n  .use(rehypeDocument, {title: '👋🌍'})\n  .use(rehypeFormat)\n  .use(rehypeStringify)\n\nconsole.log(String(processor.processSync('# Hello world!')))\n```\n\nYields:\n\n```html\n<!doctype html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <title>👋🌍</title>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  </head>\n  <body>\n    <h1>Hello world!</h1>\n  </body>\n</html>\n```\n\n### `processor.run(tree[, file][, done])`\n\nRun *[transformers][api-transformer]* on a syntax tree.\n\n> 👉 **Note**: `run` freezes the processor if not already\n> *[frozen][api-freeze]*.\n\n> 👉 **Note**: `run` performs the [run phase][overview], not other phases.\n\n###### Signatures\n\n* `processor.run(tree, done)`\n* `processor.run(tree, file, done)`\n* `Promise<Node> = processor.run(tree, file?)`\n\n###### Parameters\n\n* `tree` ([`Node`][node]) — tree to transform and inspect\n* `file` ([`Compatible`][vfile-compatible], optional) — file associated\n  with `node`; any value accepted as `x` in `new VFile(x)`\n* `done` ([`RunCallback`][api-run-callback], optional) — callback\n\n###### Returns\n\nNothing if `done` is given (`undefined`).\nOtherwise, a promise rejected with a fatal error or resolved with the\ntransformed tree ([`Promise<Node>`][node]).\n\n###### Example\n\nThis example shows how `run` can be used to transform a tree:\n\n```js\nimport remarkReferenceLinks from 'remark-reference-links'\nimport {unified} from 'unified'\nimport {u} from 'unist-builder'\n\nconst tree = u('root', [\n  u('paragraph', [\n    u('link', {href: 'https://example.com'}, [u('text', 'Example Domain')])\n  ])\n])\n\nconst changedTree = await unified().use(remarkReferenceLinks).run(tree)\n\nconsole.log(changedTree)\n```\n\nYields:\n\n```js\n{\n  type: 'root',\n  children: [\n    {type: 'paragraph', children: [Array]},\n    {type: 'definition', identifier: '1', title: '', url: undefined}\n  ]\n}\n```\n\n### `processor.runSync(tree[, file])`\n\nRun *[transformers][api-transformer]* on a syntax tree.\n\nAn error is thrown if asynchronous transforms are configured.\n\n> 👉 **Note**: `runSync` freezes the processor if not already\n> *[frozen][api-freeze]*.\n\n> 👉 **Note**: `runSync` performs the [run phase][overview], not other phases.\n\n###### Parameters\n\n* `tree` ([`Node`][node]) — tree to transform and inspect\n* `file` ([`Compatible`][vfile-compatible], optional) — file associated\n  with `node`; any value accepted as `x` in `new VFile(x)`\n\n###### Returns\n\nTransformed tree ([`Node`][node]).\n\n### `processor.stringify(tree[, file])`\n\nCompile a syntax tree.\n\n> 👉 **Note**: `stringify` freezes the processor if not already\n> *[frozen][api-freeze]*.\n\n> 👉 **Note**: `stringify` performs the [stringify phase][overview], not the run\n> phase or other phases.\n\n###### Parameters\n\n* `tree` ([`Node`][node]) — tree to compile\n* `file` ([`Compatible`][vfile-compatible], optional) — file associated\n  with `node`; any value accepted as `x` in `new VFile(x)`\n\n###### Returns\n\nTextual representation of the tree (`Uint8Array` or `string`, see note).\n\n> 👉 **Note**: unified typically compiles by serializing: most compilers\n> return `string` (or `Uint8Array`).\n> Some compilers, such as the one configured with\n> [`rehype-react`][rehype-react], return other values (in this case, a\n> React tree).\n> If you’re using a compiler that doesn’t serialize, expect different\n> result values.\n>\n> To register custom results in TypeScript, add them to\n> [`CompileResultMap`][api-compile-result-map].\n\n###### Example\n\nThis example shows how `stringify` can be used to serialize a syntax tree:\n\n```js\nimport {h} from 'hastscript'\nimport rehypeStringify from 'rehype-stringify'\nimport {unified} from 'unified'\n\nconst tree = h('h1', 'Hello world!')\n\nconst document = unified().use(rehypeStringify).stringify(tree)\n\nconsole.log(document)\n```\n\nYields:\n\n```html\n<h1>Hello world!</h1>\n```\n\n### `processor.use(plugin[, options])`\n\nConfigure the processor to use a plugin, a list of usable values, or a preset.\n\nIf the processor is already using a plugin, the previous plugin configuration\nis changed based on the options that are passed in.\nIn other words, the plugin is not added a second time.\n\n> 👉 **Note**: `use` cannot be called on [*frozen*][api-freeze] processors.\n> Call the processor first to create a new unfrozen processor.\n\n###### Signatures\n\n* `processor.use(preset?)`\n* `processor.use(list)`\n* `processor.use(plugin[, ...parameters])`\n\n###### Parameters\n\n* `preset` ([`Preset`][api-preset]) — plugins and settings\n* `list` ([`PluggableList`][api-pluggable-list]) — list of usable things\n* `plugin` ([`Plugin`][api-plugin]) — plugin\n* `parameters` (`Array<unknown>`) — configuration for `plugin`, typically a\n  single options object\n\n###### Returns\n\nCurrent processor ([`processor`][api-processor]).\n\n###### Example\n\nThere are many ways to pass plugins to `.use()`.\nThis example gives an overview:\n\n```js\nimport {unified} from 'unified'\n\nunified()\n  // Plugin with options:\n  .use(pluginA, {x: true, y: true})\n  // Passing the same plugin again merges configuration (to `{x: true, y: false, z: true}`):\n  .use(pluginA, {y: false, z: true})\n  // Plugins:\n  .use([pluginB, pluginC])\n  // Two plugins, the second with options:\n  .use([pluginD, [pluginE, {}]])\n  // Preset with plugins and settings:\n  .use({plugins: [pluginF, [pluginG, {}]], settings: {position: false}})\n  // Settings only:\n  .use({settings: {position: false}})\n```\n\n### `CompileResultMap`\n\nInterface of known results from compilers (TypeScript type).\n\nNormally, compilers result in text ([`Value`][vfile-value] of `vfile`).\nWhen you compile to something else, such as a React node (as in,\n`rehype-react`), you can augment this interface to include that type.\n\n```ts\nimport type {ReactNode} from 'somewhere'\n\ndeclare module 'unified' {\n  interface CompileResultMap {\n    // Register a new result (value is used, key should match it).\n    ReactNode: ReactNode\n  }\n}\n\nexport {} // You may not need this, but it makes sure the file is a module.\n```\n\nUse [`CompileResults`][api-compile-results] to access the values.\n\n###### Type\n\n```ts\ninterface CompileResultMap {\n  // Note: if `Value` from `VFile` is changed, this should too.\n  Uint8Array: Uint8Array\n  string: string\n}\n```\n\n### `CompileResults`\n\nAcceptable results from compilers (TypeScript type).\n\nTo register custom results, add them to\n[`CompileResultMap`][api-compile-result-map].\n\n###### Type\n\n```ts\ntype CompileResults = CompileResultMap[keyof CompileResultMap]\n```\n\n### `Compiler`\n\nA **compiler** handles the compiling of a syntax tree to something else\n(in most cases, text) (TypeScript type).\n\nIt is used in the stringify phase and called with a [`Node`][node]\nand [`VFile`][vfile] representation of the document to compile.\nIt should return the textual representation of the given tree (typically\n`string`).\n\n> 👉 **Note**: unified typically compiles by serializing: most compilers\n> return `string` (or `Uint8Array`).\n> Some compilers, such as the one configured with\n> [`rehype-react`][rehype-react], return other values (in this case, a\n> React tree).\n> If you’re using a compiler that doesn’t serialize, expect different\n> result values.\n>\n> To register custom results in TypeScript, add them to\n> [`CompileResultMap`][api-compile-result-map].\n\n###### Type\n\n```ts\ntype Compiler<\n  Tree extends Node = Node,\n  Result extends CompileResults = CompileResults\n> = (tree: Tree, file: VFile) => Result\n```\n\n### `Data`\n\nInterface of known data that can be supported by all plugins (TypeScript type).\n\nTypically, options can be given to a specific plugin, but sometimes it makes\nsense to have information shared with several plugins.\nFor example, a list of HTML elements that are self-closing, which is needed\nduring all phases.\n\nTo type this, do something like:\n\n```ts\ndeclare module 'unified' {\n  interface Data {\n    htmlVoidElements?: Array<string> | undefined\n  }\n}\n\nexport {} // You may not need this, but it makes sure the file is a module.\n```\n\n###### Type\n\n```ts\ninterface Data {\n  settings?: Settings | undefined\n}\n```\n\nSee [`Settings`][api-settings] for more info.\n\n### `Parser`\n\nA **parser** handles the parsing of text to a syntax tree (TypeScript type).\n\nIt is used in the parse phase and is called with a `string` and\n[`VFile`][vfile] of the document to parse.\nIt must return the syntax tree representation of the given file\n([`Node`][node]).\n\n###### Type\n\n```ts\ntype Parser<Tree extends Node = Node> = (document: string, file: VFile) => Tree\n```\n\n### `Pluggable`\n\nUnion of the different ways to add plugins and settings (TypeScript type).\n\n###### Type\n\n```ts\ntype Pluggable =\n  | Plugin<Array<any>, any, any>\n  | PluginTuple<Array<any>, any, any>\n  | Preset\n```\n\nSee [`Plugin`][api-plugin], [`PluginTuple`][api-plugin-tuple],\nand [`Preset`][api-preset] for more info.\n\n### `PluggableList`\n\nList of plugins and presets (TypeScript type).\n\n###### Type\n\n```ts\ntype PluggableList = Array<Pluggable>\n```\n\nSee [`Pluggable`][api-pluggable] for more info.\n\n### `Plugin`\n\nSingle plugin (TypeScript type).\n\nPlugins configure the processors they are applied on in the following ways:\n\n* they change the processor, such as the parser, the compiler, or by\n  configuring data\n* they specify how to handle trees and files\n\nIn practice, they are functions that can receive options and configure the\nprocessor (`this`).\n\n> 👉 **Note**: plugins are called when the processor is *frozen*, not when they\n> are applied.\n\n###### Type\n\n```ts\ntype Plugin<\n  PluginParameters extends unknown[] = [],\n  Input extends Node | string | undefined = Node,\n  Output = Input\n> = (\n  this: Processor,\n  ...parameters: PluginParameters\n) => Input extends string // Parser.\n  ? Output extends Node | undefined\n    ? undefined | void\n    : never\n  : Output extends CompileResults // Compiler.\n  ? Input extends Node | undefined\n    ? undefined | void\n    : never\n  : // Inspect/transform.\n      | Transformer<\n          Input extends Node ? Input : Node,\n          Output extends Node ? Output : Node\n        >\n      | undefined\n      | void\n```\n\nSee [`Transformer`][api-transformer] for more info.\n\n###### Example\n\n`move.js`:\n\n```js\n/**\n * @typedef Options\n *   Configuration (required).\n * @property {string} extname\n *   File extension to use (must start with `.`).\n */\n\n/** @type {import('unified').Plugin<[Options]>} */\nexport function move(options) {\n  if (!options || !options.extname) {\n    throw new Error('Missing `options.extname`')\n  }\n\n  return function (_, file) {\n    if (file.extname && file.extname !== options.extname) {\n      file.extname = options.extname\n    }\n  }\n}\n```\n\n`example.md`:\n\n```markdown\n# Hello, world!\n```\n\n`example.js`:\n\n```js\nimport rehypeStringify from 'rehype-stringify'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport {read, write} from 'to-vfile'\nimport {unified} from 'unified'\nimport {reporter} from 'vfile-reporter'\nimport {move} from './move.js'\n\nconst file = await unified()\n  .use(remarkParse)\n  .use(remarkRehype)\n  .use(move, {extname: '.html'})\n  .use(rehypeStringify)\n  .process(await read('example.md'))\n\nconsole.error(reporter(file))\nawait write(file) // Written to `example.html`.\n```\n\nYields:\n\n```txt\nexample.md: no issues found\n```\n\n…and in `example.html`:\n\n```html\n<h1>Hello, world!</h1>\n```\n\n### `PluginTuple`\n\nTuple of a plugin and its configuration (TypeScript type).\n\nThe first item is a plugin, the rest are its parameters.\n\n###### Type\n\n```ts\ntype PluginTuple<\n  TupleParameters extends unknown[] = [],\n  Input extends Node | string | undefined = undefined,\n  Output = undefined\n> = [\n  plugin: Plugin<TupleParameters, Input, Output>,\n  ...parameters: TupleParameters\n]\n```\n\nSee [`Plugin`][api-plugin] for more info.\n\n### `Preset`\n\nSharable configuration (TypeScript type).\n\nThey can contain plugins and settings.\n\n###### Fields\n\n* `plugins` ([`PluggableList`][api-pluggable-list], optional)\n  — list of plugins and presets\n* `settings` ([`Data`][api-data], optional)\n  — shared settings for parsers and compilers\n\n###### Example\n\n`preset.js`:\n\n```js\nimport remarkCommentConfig from 'remark-comment-config'\nimport remarkLicense from 'remark-license'\nimport remarkPresetLintConsistent from 'remark-preset-lint-consistent'\nimport remarkPresetLintRecommended from 'remark-preset-lint-recommended'\nimport remarkToc from 'remark-toc'\n\n/** @type {import('unified').Preset} */\nconst preset = {\n  plugins: [\n    remarkPresetLintRecommended,\n    remarkPresetLintConsistent,\n    remarkCommentConfig,\n    [remarkToc, {maxDepth: 3, tight: true}],\n    remarkLicense\n  ]\n  settings: {bullet: '*', emphasis: '*', fences: true},\n}\n\nexport default preset\n```\n\n`example.md`:\n\n```markdown\n# Hello, world!\n\n_Emphasis_ and **importance**.\n\n## Table of contents\n\n## API\n\n## License\n```\n\n`example.js`:\n\n```js\nimport {remark} from 'remark'\nimport {read, write} from 'to-vfile'\nimport {reporter} from 'vfile-reporter'\nimport preset from './preset.js'\n\nconst file = await remark()\n  .use(preset)\n  .process(await read('example.md'))\n\nconsole.error(reporter(file))\nawait write(file)\n```\n\nYields:\n\n```txt\nexample.md: no issues found\n```\n\n`example.md` now contains:\n\n```markdown\n# Hello, world!\n\n*Emphasis* and **importance**.\n\n## Table of contents\n\n*   [API](#api)\n*   [License](#license)\n\n## API\n\n## License\n\n[MIT](license) © [Titus Wormer](https://wooorm.com)\n```\n\n### `ProcessCallback`\n\nCallback called when the process is done (TypeScript type).\n\nCalled with either an error or a result.\n\n###### Parameters\n\n* `error` (`Error`, optional)\n  — fatal error\n* `file` ([`VFile`][vfile], optional)\n  — processed file\n\n###### Returns\n\nNothing (`undefined`).\n\n###### Example\n\nThis example shows how `process` can be used to process a file with a callback.\n\n```js\nimport remarkGithub from 'remark-github'\nimport remarkParse from 'remark-parse'\nimport remarkStringify from 'remark-stringify'\nimport {unified} from 'unified'\nimport {reporter} from 'vfile-reporter'\n\nunified()\n  .use(remarkParse)\n  .use(remarkGithub)\n  .use(remarkStringify)\n  .process('@unifiedjs', function (error, file) {\n    if (error) throw error\n    if (file) {\n      console.error(reporter(file))\n      console.log(String(file))\n    }\n  })\n```\n\nYields:\n\n```txt\nno issues found\n```\n\n```markdown\n[**@unifiedjs**](https://github.com/unifiedjs)\n```\n\n### `Processor`\n\nType of a [`processor`][api-processor] (TypeScript type).\n\n### `RunCallback`\n\nCallback called when transformers are done (TypeScript type).\n\nCalled with either an error or results.\n\n###### Parameters\n\n* `error` (`Error`, optional)\n  — fatal error\n* `tree` ([`Node`][node], optional)\n  — transformed tree\n* `file` ([`VFile`][vfile], optional)\n  — file\n\n###### Returns\n\nNothing (`undefined`).\n\n### `Settings`\n\nInterface of known extra options, that can be supported by parser and\ncompilers.\n\nThis exists so that users can use packages such as `remark`, which configure\nboth parsers and compilers (in this case `remark-parse` and\n`remark-stringify`), and still provide options for them.\n\nWhen you make parsers or compilers, that could be packaged up together, you\nshould support `this.data('settings')` as input and merge it with explicitly\npassed `options`.\nThen, to type it, using `remark-stringify` as an example, do something like:\n\n```ts\ndeclare module 'unified' {\n  interface Settings {\n    bullet: '*' | '+' | '-'\n    // …\n  }\n}\n\nexport {} // You may not need this, but it makes sure the file is a module.\n```\n\n###### Type\n\n```ts\ninterface Settings {}\n```\n\n### `TransformCallback`\n\nCallback passed to transforms (TypeScript type).\n\nIf the signature of a `transformer` accepts a third argument, the transformer\nmay perform asynchronous operations, and must call it.\n\n###### Parameters\n\n* `error` (`Error`, optional)\n  — fatal error to stop the process\n* `tree` ([`Node`][node], optional)\n  — new, changed, tree\n* `file` ([`VFile`][vfile], optional)\n  — new, changed, file\n\n###### Returns\n\nNothing (`undefined`).\n\n### `Transformer`\n\nTransformers handle syntax trees and files (TypeScript type).\n\nThey are functions that are called each time a syntax tree and file are\npassed through the run phase.\nWhen an error occurs in them (either because it’s thrown, returned,\nrejected, or passed to `next`), the process stops.\n\nThe run phase is handled by [`trough`][trough], see its documentation for\nthe exact semantics of these functions.\n\n> 👉 **Note**: you should likely ignore `next`: don’t accept it.\n> it supports callback-style async work.\n> But promises are likely easier to reason about.\n\n###### Type\n\n```ts\ntype Transformer<\n  Input extends Node = Node,\n  Output extends Node = Input\n> = (\n  tree: Input,\n  file: VFile,\n  next: TransformCallback<Output>\n) =>\n  | Promise<Output | undefined>\n  | Output\n  | Error\n  | undefined\n```\n\n## Types\n\nThis package is fully typed with [TypeScript][].\nIt exports the additional types\n[`CompileResultMap`][api-compile-result-map],\n[`CompileResults`][api-compile-results],\n[`Compiler`][api-compiler],\n[`Data`][api-data],\n[`Parser`][api-parser],\n[`Pluggable`][api-pluggable],\n[`PluggableList`][api-pluggable-list],\n[`Plugin`][api-plugin],\n[`PluginTuple`][api-plugin-tuple],\n[`Preset`][api-preset],\n[`ProcessCallback`][api-process-callback],\n[`Processor`][api-processor],\n[`RunCallback`][api-run-callback],\n[`Settings`][api-settings],\n[`TransformCallback`][api-transform-callback],\nand [`Transformer`][api-transformer]\n\nFor TypeScript to work, it is particularly important to type your plugins\ncorrectly.\nWe strongly recommend using the `Plugin` type with its generics and to use the\nnode types for the syntax trees provided by our packages (as in,\n[`@types/hast`][types-hast], [`@types/mdast`][types-mdast],\n[`@types/nlcst`][types-nlcst]).\n\n```js\n/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n */\n\n/**\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [someField]\n *   Some option (optional).\n */\n\n// To type options:\n/** @type {import('unified').Plugin<[(Options | null | undefined)?]>} */\nexport function myPluginAcceptingOptions(options) {\n  const settings = options || {}\n  // `settings` is now `Options`.\n}\n\n// To type a plugin that works on a certain tree, without options:\n/** @type {import('unified').Plugin<[], MdastRoot>} */\nexport function myRemarkPlugin() {\n  return function (tree, file) {\n    // `tree` is `MdastRoot`.\n  }\n}\n\n// To type a plugin that transforms one tree into another:\n/** @type {import('unified').Plugin<[], MdastRoot, HastRoot>} */\nexport function remarkRehype() {\n  return function (tree) {\n    // `tree` is `MdastRoot`.\n    // Result must be `HastRoot`.\n  }\n}\n\n// To type a plugin that defines a parser:\n/** @type {import('unified').Plugin<[], string, MdastRoot>} */\nexport function remarkParse(options) {}\n\n// To type a plugin that defines a compiler:\n/** @type {import('unified').Plugin<[], HastRoot, string>} */\nexport function rehypeStringify(options) {}\n```\n\n## Compatibility\n\nProjects maintained by the unified collective are compatible with maintained\nversions of Node.js.\n\nWhen we cut a new major release, we drop support for unmaintained versions of\nNode.\nThis means we try to keep the current release line, `unified@^11`, compatible\nwith Node.js 16.\n\n## Contribute\n\nSee [`contributing.md`][contributing] in [`unifiedjs/.github`][health] for ways\nto get started.\nSee [`support.md`][support] for ways to get help.\n\nThis project has a [code of conduct][coc].\nBy interacting with this repository, organization, or community you agree to\nabide by its terms.\n\nFor info on how to submit a security report, see our\n[security policy][security].\n\n## Sponsor\n\nSupport this effort and give back by sponsoring on [OpenCollective][collective]!\n\n<table>\n<tr valign=\"middle\">\n<td width=\"20%\" align=\"center\" rowspan=\"2\" colspan=\"2\">\n  <a href=\"https://vercel.com\">Vercel</a><br><br>\n  <a href=\"https://vercel.com\"><img src=\"https://avatars1.githubusercontent.com/u/14985020?s=256&v=4\" width=\"128\"></a>\n</td>\n<td width=\"20%\" align=\"center\" rowspan=\"2\" colspan=\"2\">\n  <a href=\"https://motif.land\">Motif</a><br><br>\n  <a href=\"https://motif.land\"><img src=\"https://avatars1.githubusercontent.com/u/74457950?s=256&v=4\" width=\"128\"></a>\n</td>\n<td width=\"20%\" align=\"center\" rowspan=\"2\" colspan=\"2\">\n  <a href=\"https://www.hashicorp.com\">HashiCorp</a><br><br>\n  <a href=\"https://www.hashicorp.com\"><img src=\"https://avatars1.githubusercontent.com/u/761456?s=256&v=4\" width=\"128\"></a>\n</td>\n<td width=\"20%\" align=\"center\" rowspan=\"2\" colspan=\"2\">\n  <a href=\"https://americanexpress.io\">American Express</a><br><br>\n  <a href=\"https://americanexpress.io\"><img src=\"https://avatars1.githubusercontent.com/u/3853301?s=256&v=4\" width=\"128\"></a>\n</td>\n<td width=\"20%\" align=\"center\" rowspan=\"2\" colspan=\"2\">\n  <a href=\"https://www.gitbook.com\">GitBook</a><br><br>\n  <a href=\"https://www.gitbook.com\"><img src=\"https://avatars1.githubusercontent.com/u/7111340?s=256&v=4\" width=\"128\"></a>\n</td>\n</tr>\n<tr valign=\"middle\">\n</tr>\n<tr valign=\"middle\">\n<td width=\"20%\" align=\"center\" rowspan=\"2\" colspan=\"2\">\n  <a href=\"https://www.gatsbyjs.org\">Gatsby</a><br><br>\n  <a href=\"https://www.gatsbyjs.org\"><img src=\"https://avatars1.githubusercontent.com/u/12551863?s=256&v=4\" width=\"128\"></a>\n</td>\n<td width=\"20%\" align=\"center\" rowspan=\"2\" colspan=\"2\">\n  <a href=\"https://www.netlify.com\">Netlify</a><br><br>\n  <!--OC has a sharper image-->\n  <a href=\"https://www.netlify.com\"><img src=\"https://images.opencollective.com/netlify/4087de2/logo/256.png\" width=\"128\"></a>\n</td>\n<td width=\"10%\" align=\"center\">\n  <a href=\"https://www.coinbase.com\">Coinbase</a><br><br>\n  <a href=\"https://www.coinbase.com\"><img src=\"https://avatars1.githubusercontent.com/u/1885080?s=256&v=4\" width=\"64\"></a>\n</td>\n<td width=\"10%\" align=\"center\">\n  <a href=\"https://themeisle.com\">ThemeIsle</a><br><br>\n  <a href=\"https://themeisle.com\"><img src=\"https://avatars1.githubusercontent.com/u/58979018?s=128&v=4\" width=\"64\"></a>\n</td>\n<td width=\"10%\" align=\"center\">\n  <a href=\"https://expo.io\">Expo</a><br><br>\n  <a href=\"https://expo.io\"><img src=\"https://avatars1.githubusercontent.com/u/12504344?s=128&v=4\" width=\"64\"></a>\n</td>\n<td width=\"10%\" align=\"center\">\n  <a href=\"https://boostnote.io\">Boost Note</a><br><br>\n  <a href=\"https://boostnote.io\"><img src=\"https://images.opencollective.com/boosthub/6318083/logo/128.png\" width=\"64\"></a>\n</td>\n<td width=\"10%\" align=\"center\">\n  <a href=\"https://markdown.space\">Markdown Space</a><br><br>\n  <a href=\"https://markdown.space\"><img src=\"https://images.opencollective.com/markdown-space/e1038ed/logo/128.png\" width=\"64\"></a>\n</td>\n<td width=\"10%\" align=\"center\">\n  <a href=\"https://www.holloway.com\">Holloway</a><br><br>\n  <a href=\"https://www.holloway.com\"><img src=\"https://avatars1.githubusercontent.com/u/35904294?s=128&v=4\" width=\"64\"></a>\n</td>\n</tr>\n<tr valign=\"middle\">\n<td width=\"100%\" align=\"center\" colspan=\"6\">\n  <br>\n  <a href=\"https://opencollective.com/unified\"><strong>You?</strong></a>\n  <br><br>\n</td>\n</tr>\n</table>\n\n## Acknowledgments\n\nPreliminary work for unified was done [in 2014][preliminary] for\n**[retext][]** and inspired by [`ware`][ware].\nFurther incubation happened in **[remark][]**.\nThe project was finally [externalised][] in 2015 and [published][] as `unified`.\nThe project was authored by **[@wooorm](https://github.com/wooorm)**.\n\nAlthough `unified` since moved its plugin architecture to [`trough`][trough],\nthanks to **[@calvinfo](https://github.com/calvinfo)**,\n**[@ianstormtaylor](https://github.com/ianstormtaylor)**, and others for their\nwork on [`ware`][ware], as it was a huge initial inspiration.\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[logo]: https://raw.githubusercontent.com/unifiedjs/unified/93862e5/logo.svg?sanitize=true\n\n[build-badge]: https://github.com/unifiedjs/unified/workflows/main/badge.svg\n\n[build]: https://github.com/unifiedjs/unified/actions\n\n[coverage-badge]: https://img.shields.io/codecov/c/github/unifiedjs/unified.svg\n\n[coverage]: https://codecov.io/github/unifiedjs/unified\n\n[downloads-badge]: https://img.shields.io/npm/dm/unified.svg\n\n[downloads]: https://www.npmjs.com/package/unified\n\n[size-badge]: https://img.shields.io/bundlejs/size/unified\n\n[size]: https://bundlejs.com/?q=unified\n\n[sponsors-badge]: https://opencollective.com/unified/sponsors/badge.svg\n\n[backers-badge]: https://opencollective.com/unified/backers/badge.svg\n\n[collective]: https://opencollective.com/unified\n\n[chat-badge]: https://img.shields.io/badge/chat-discussions-success.svg\n\n[chat]: https://github.com/unifiedjs/unified/discussions\n\n[esm]: https://gist.github.com/sindresorhus/a39789f98801d908bbc7ff3ecc99d99c\n\n[esmsh]: https://esm.sh\n\n[typescript]: https://www.typescriptlang.org\n\n[health]: https://github.com/unifiedjs/.github\n\n[contributing]: https://github.com/unifiedjs/.github/blob/main/contributing.md\n\n[support]: https://github.com/unifiedjs/.github/blob/main/support.md\n\n[coc]: https://github.com/unifiedjs/.github/blob/main/code-of-conduct.md\n\n[security]: https://github.com/unifiedjs/.github/blob/main/security.md\n\n[license]: license\n\n[author]: https://wooorm.com\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[site]: https://unifiedjs.com\n\n[twitter]: https://twitter.com/unifiedjs\n\n[rehype]: https://github.com/rehypejs/rehype\n\n[remark]: https://github.com/remarkjs/remark\n\n[retext]: https://github.com/retextjs/retext\n\n[syntax-tree]: https://github.com/syntax-tree\n\n[esast]: https://github.com/syntax-tree/esast\n\n[hast]: https://github.com/syntax-tree/hast\n\n[mdast]: https://github.com/syntax-tree/mdast\n\n[nlcst]: https://github.com/syntax-tree/nlcst\n\n[unist]: https://github.com/syntax-tree/unist\n\n[xast]: https://github.com/syntax-tree/xast\n\n[unified-engine]: https://github.com/unifiedjs/unified-engine\n\n[unified-args]: https://github.com/unifiedjs/unified-args\n\n[unified-engine-gulp]: https://github.com/unifiedjs/unified-engine-gulp\n\n[unified-language-server]: https://github.com/unifiedjs/unified-language-server\n\n[unified-stream]: https://github.com/unifiedjs/unified-stream\n\n[rehype-remark]: https://github.com/rehypejs/rehype-remark\n\n[rehype-retext]: https://github.com/rehypejs/rehype-retext\n\n[remark-rehype]: https://github.com/remarkjs/remark-rehype\n\n[remark-retext]: https://github.com/remarkjs/remark-retext\n\n[node]: https://github.com/syntax-tree/unist#node\n\n[vfile]: https://github.com/vfile/vfile\n\n[vfile-compatible]: https://github.com/vfile/vfile#compatible\n\n[vfile-value]: https://github.com/vfile/vfile#value\n\n[vfile-utilities]: https://github.com/vfile/vfile#list-of-utilities\n\n[rehype-react]: https://github.com/rehypejs/rehype-react\n\n[trough]: https://github.com/wooorm/trough#function-fninput-next\n\n[rehype-plugins]: https://github.com/rehypejs/rehype/blob/main/doc/plugins.md#list-of-plugins\n\n[remark-plugins]: https://github.com/remarkjs/remark/blob/main/doc/plugins.md#list-of-plugins\n\n[retext-plugins]: https://github.com/retextjs/retext/blob/main/doc/plugins.md#list-of-plugins\n\n[awesome-rehype]: https://github.com/rehypejs/awesome-rehype\n\n[awesome-remark]: https://github.com/remarkjs/awesome-remark\n\n[awesome-retext]: https://github.com/retextjs/awesome-retext\n\n[topic-rehype-plugin]: https://github.com/topics/rehype-plugin\n\n[topic-remark-plugin]: https://github.com/topics/remark-plugin\n\n[topic-retext-plugin]: https://github.com/topics/retext-plugin\n\n[types-hast]: https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/hast\n\n[types-mdast]: https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/mdast\n\n[types-nlcst]: https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/nlcst\n\n[preliminary]: https://github.com/retextjs/retext/commit/8fcb1f\n\n[externalised]: https://github.com/remarkjs/remark/commit/9892ec\n\n[published]: https://github.com/unifiedjs/unified/commit/2ba1cf\n\n[ware]: https://github.com/segmentio/ware\n\n[api]: #api\n\n[contribute]: #contribute\n\n[overview]: #overview\n\n[sponsor]: #sponsor\n\n[api-compile-result-map]: #compileresultmap\n\n[api-compile-results]: #compileresults\n\n[api-compiler]: #compiler\n\n[api-data]: #data\n\n[api-freeze]: #processorfreeze\n\n[api-parser]: #parser\n\n[api-pluggable]: #pluggable\n\n[api-pluggable-list]: #pluggablelist\n\n[api-plugin]: #plugin\n\n[api-plugin-tuple]: #plugintuple\n\n[api-preset]: #preset\n\n[api-process]: #processorprocessfile-done\n\n[api-process-callback]: #processcallback\n\n[api-processor]: #processor\n\n[api-run-callback]: #runcallback\n\n[api-settings]: #settings\n\n[api-transform-callback]: #transformcallback\n\n[api-transformer]: #transformer\n","readmeFilename":"readme.md","users":{"cr8tiv":true,"daizch":true,"imagdy":true,"masterde":true,"heartnett":true,"knksmith57":true,"seangenabe":true,"flumpus-dev":true},"contributors":[{"name":"Titus Wormer","email":"tituswormer@gmail.com","url":"https://wooorm.com"},{"name":"Junyoung Choi","email":"fluke8259@gmail.com"},{"name":"Hernan Rajchert","email":"hrajchert@gmail.com"},{"name":"Christian Murphy","email":"christian.murphy.42@gmail.com"},{"name":"Vse Mozhet Byt","email":"vsemozhetbyt@gmail.com"},{"name":"Richard Littauer","email":"richard.littauer@gmail.com"}]}